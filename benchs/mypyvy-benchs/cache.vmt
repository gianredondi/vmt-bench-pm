(declare-sort address 0)
(declare-sort value 0)
(declare-sort core 0)
(declare-fun _0__modified (core address) Bool)
(declare-fun _1__modified (core address) Bool)
(define-fun _0__modified.sv ((V0 core) (V1 address)) Bool (! (_0__modified V0 V1) :next _1__modified))
(declare-fun _0__exclusive (core address) Bool)
(declare-fun _1__exclusive (core address) Bool)
(define-fun _0__exclusive.sv ((V0 core) (V1 address)) Bool (! (_0__exclusive V0 V1) :next _1__exclusive))
(declare-fun _0__shared (core address) Bool)
(declare-fun _1__shared (core address) Bool)
(define-fun _0__shared.sv ((V0 core) (V1 address)) Bool (! (_0__shared V0 V1) :next _1__shared))
(declare-fun _0__invalid (core address) Bool)
(declare-fun _1__invalid (core address) Bool)
(define-fun _0__invalid.sv ((V0 core) (V1 address)) Bool (! (_0__invalid V0 V1) :next _1__invalid))
(declare-fun _0__proc_read (core address) Bool)
(declare-fun _1__proc_read (core address) Bool)
(define-fun _0__proc_read.sv ((V0 core) (V1 address)) Bool (! (_0__proc_read V0 V1) :next _1__proc_read))
(declare-fun _0__proc_write (core address value) Bool)
(declare-fun _1__proc_write (core address value) Bool)
(define-fun _0__proc_write.sv ((V0 core) (V1 address) (V2 value)) Bool (! (_0__proc_write V0 V1 V2) :next _1__proc_write))
(declare-fun _0__bus_in_use () Bool)
(declare-fun _1__bus_in_use () Bool)
(define-fun _0__bus_in_use.sv () Bool (! _0__bus_in_use :next _1__bus_in_use))
(declare-fun _0__bus_read (core address) Bool)
(declare-fun _1__bus_read (core address) Bool)
(define-fun _0__bus_read.sv ((V0 core) (V1 address)) Bool (! (_0__bus_read V0 V1) :next _1__bus_read))
(declare-fun _0__bus_read_for_ownership (core address) Bool)
(declare-fun _1__bus_read_for_ownership (core address) Bool)
(define-fun _0__bus_read_for_ownership.sv ((V0 core) (V1 address)) Bool (! (_0__bus_read_for_ownership V0 V1) :next _1__bus_read_for_ownership))
(declare-fun _0__bus_upgrade (core address) Bool)
(declare-fun _1__bus_upgrade (core address) Bool)
(define-fun _0__bus_upgrade.sv ((V0 core) (V1 address)) Bool (! (_0__bus_upgrade V0 V1) :next _1__bus_upgrade))
(declare-fun _0__bus_transfer (value) Bool)
(declare-fun _1__bus_transfer (value) Bool)
(define-fun _0__bus_transfer.sv ((V0 value)) Bool (! (_0__bus_transfer V0) :next _1__bus_transfer))
(declare-fun _0__memory (address) value)
(declare-fun _1__memory (address) value)
(define-fun _0__memory.sv ((V0 address)) value (! (_0__memory V0) :next _1__memory))
(declare-fun _0__cache (core address) value)
(declare-fun _1__cache (core address) value)
(define-fun _0__cache.sv ((V0 core) (V1 address)) value (! (_0__cache V0 V1) :next _1__cache))
(define-fun init () Bool (! (and (forall ((C_0 core) (A_1 address)) (not (_0__modified C_0 A_1)))
     (forall ((C_2 core) (A_3 address)) (not (_0__exclusive C_2 A_3)))
     (forall ((C_4 core) (A_5 address)) (not (_0__shared C_4 A_5)))
     (forall ((C_6 core) (A_7 address)) (_0__invalid C_6 A_7))
     (forall ((C_8 core) (A_9 address)) (not (_0__proc_read C_8 A_9)))
     (forall ((C_10 core) (A_11 address) (V_12 value))
       (not (_0__proc_write C_10 A_11 V_12)))
     (not _0__bus_in_use)
     (forall ((C_13 core) (A_14 address)) (not (_0__bus_read C_13 A_14)))
     (forall ((C_15 core) (A_16 address))
       (not (_0__bus_read_for_ownership C_15 A_16)))
     (forall ((C_17 core) (A_18 address)) (not (_0__bus_upgrade C_17 A_18)))
     (forall ((V_19 value)) (not (_0__bus_transfer V_19)))) :init true))
(define-fun transition_0 () Bool (! (exists ((c_0 core) (a_1 address))
  (let ((a!1 (forall ((C_2 core) (A_3 address))
               (= (_1__proc_read C_2 A_3)
                  (or (_0__proc_read C_2 A_3) (and (= C_2 c_0) (= A_3 a_1))))))
        (a!2 (forall ((C_4 core) (A_5 address))
               (= (_1__bus_read C_4 A_5)
                  (or (_0__bus_read C_4 A_5)
                      (and (distinct C_4 c_0) (= A_5 a_1)))))))
    (and (_0__invalid c_0 a_1)
         (not _0__bus_in_use)
         _1__bus_in_use
         a!1
         a!2
         (forall ((x0_6 core) (x1_7 address))
           (= (_1__modified x0_6 x1_7) (_0__modified x0_6 x1_7)))
         (forall ((x0_8 core) (x1_9 address))
           (= (_1__exclusive x0_8 x1_9) (_0__exclusive x0_8 x1_9)))
         (forall ((x0_10 core) (x1_11 address))
           (= (_1__shared x0_10 x1_11) (_0__shared x0_10 x1_11)))
         (forall ((x0_12 core) (x1_13 address))
           (= (_1__invalid x0_12 x1_13) (_0__invalid x0_12 x1_13)))
         (forall ((x0_14 core) (x1_15 address) (x2_16 value))
           (= (_1__proc_write x0_14 x1_15 x2_16)
              (_0__proc_write x0_14 x1_15 x2_16)))
         (forall ((x0_17 core) (x1_18 address))
           (= (_1__bus_read_for_ownership x0_17 x1_18)
              (_0__bus_read_for_ownership x0_17 x1_18)))
         (forall ((x0_19 core) (x1_20 address))
           (= (_1__bus_upgrade x0_19 x1_20) (_0__bus_upgrade x0_19 x1_20)))
         (forall ((x0_21 value))
           (= (_1__bus_transfer x0_21) (_0__bus_transfer x0_21)))
         (forall ((x0_22 address)) (= (_1__memory x0_22) (_0__memory x0_22)))
         (forall ((x0_23 core) (x1_24 address))
           (= (_1__cache x0_23 x1_24) (_0__cache x0_23 x1_24)))))) :action true))
(define-fun transition_1 () Bool (! (exists ((c_25 core) (a_26 address))
  (and (_0__bus_read c_25 a_26)
       (_0__invalid c_25 a_26)
       (forall ((C_27 core) (A_28 address))
         (let ((a!1 (and (_0__bus_read C_27 A_28)
                         (not (and (= C_27 c_25) (= A_28 a_26))))))
           (= (_1__bus_read C_27 A_28) a!1)))
       (forall ((x0_29 core) (x1_30 address))
         (= (_1__modified x0_29 x1_30) (_0__modified x0_29 x1_30)))
       (forall ((x0_31 core) (x1_32 address))
         (= (_1__exclusive x0_31 x1_32) (_0__exclusive x0_31 x1_32)))
       (forall ((x0_33 core) (x1_34 address))
         (= (_1__shared x0_33 x1_34) (_0__shared x0_33 x1_34)))
       (forall ((x0_35 core) (x1_36 address))
         (= (_1__invalid x0_35 x1_36) (_0__invalid x0_35 x1_36)))
       (forall ((x0_37 core) (x1_38 address))
         (= (_1__proc_read x0_37 x1_38) (_0__proc_read x0_37 x1_38)))
       (forall ((x0_39 core) (x1_40 address) (x2_41 value))
         (= (_1__proc_write x0_39 x1_40 x2_41)
            (_0__proc_write x0_39 x1_40 x2_41)))
       (= _1__bus_in_use _0__bus_in_use)
       (forall ((x0_42 core) (x1_43 address))
         (= (_1__bus_read_for_ownership x0_42 x1_43)
            (_0__bus_read_for_ownership x0_42 x1_43)))
       (forall ((x0_44 core) (x1_45 address))
         (= (_1__bus_upgrade x0_44 x1_45) (_0__bus_upgrade x0_44 x1_45)))
       (forall ((x0_46 value))
         (= (_1__bus_transfer x0_46) (_0__bus_transfer x0_46)))
       (forall ((x0_47 address)) (= (_1__memory x0_47) (_0__memory x0_47)))
       (forall ((x0_48 core) (x1_49 address))
         (= (_1__cache x0_48 x1_49) (_0__cache x0_48 x1_49))))) :action true))
(define-fun transition_2 () Bool (! (exists ((c_50 core) (a_51 address) (v_52 value))
  (let ((a!1 (forall ((C_55 core) (A_56 address))
               (= (_1__shared C_55 A_56)
                  (or (_0__shared C_55 A_56) (and (= C_55 c_50) (= A_56 a_51))))))
        (a!2 (forall ((A_61 address))
               (=> (distinct A_61 a_51) (= (_1__memory A_61) (_0__memory A_61)))))
        (a!4 (=> (not (_0__modified c_50 a_51))
                 (forall ((A_62 address))
                   (= (_1__memory A_62) (_0__memory A_62)))))
        (a!5 (forall ((V_63 value))
               (= (_1__bus_transfer V_63)
                  (or (_0__bus_transfer V_63) (= V_63 v_52))))))
  (let ((a!3 (=> (_0__modified c_50 a_51) (and a!2 (= (_1__memory a_51) v_52)))))
    (and (_0__bus_read c_50 a_51)
         (not (_0__invalid c_50 a_51))
         (= (_0__cache c_50 a_51) v_52)
         (forall ((C_53 core) (A_54 address))
           (let ((a!1 (and (_0__bus_read C_53 A_54)
                           (not (and (= C_53 c_50) (= A_54 a_51))))))
             (= (_1__bus_read C_53 A_54) a!1)))
         a!1
         (forall ((C_57 core) (A_58 address))
           (let ((a!1 (and (_0__modified C_57 A_58)
                           (not (and (= C_57 c_50) (= A_58 a_51))))))
             (= (_1__modified C_57 A_58) a!1)))
         (forall ((C_59 core) (A_60 address))
           (let ((a!1 (and (_0__exclusive C_59 A_60)
                           (not (and (= C_59 c_50) (= A_60 a_51))))))
             (= (_1__exclusive C_59 A_60) a!1)))
         a!3
         a!4
         a!5
         (forall ((x0_64 core) (x1_65 address))
           (= (_1__invalid x0_64 x1_65) (_0__invalid x0_64 x1_65)))
         (forall ((x0_66 core) (x1_67 address))
           (= (_1__proc_read x0_66 x1_67) (_0__proc_read x0_66 x1_67)))
         (forall ((x0_68 core) (x1_69 address) (x2_70 value))
           (= (_1__proc_write x0_68 x1_69 x2_70)
              (_0__proc_write x0_68 x1_69 x2_70)))
         (= _1__bus_in_use _0__bus_in_use)
         (forall ((x0_71 core) (x1_72 address))
           (= (_1__bus_read_for_ownership x0_71 x1_72)
              (_0__bus_read_for_ownership x0_71 x1_72)))
         (forall ((x0_73 core) (x1_74 address))
           (= (_1__bus_upgrade x0_73 x1_74) (_0__bus_upgrade x0_73 x1_74)))
         (forall ((x0_75 core) (x1_76 address))
           (= (_1__cache x0_75 x1_76) (_0__cache x0_75 x1_76))))))) :action true))
(define-fun transition_3 () Bool (! (exists ((c_77 core) (a_78 address) (v_79 value))
  (let ((a!1 (forall ((C_85 core) (A_86 address))
               (= (_1__shared C_85 A_86)
                  (or (_0__shared C_85 A_86) (and (= C_85 c_77) (= A_86 a_78))))))
        (a!2 (forall ((C_87 core) (A_88 address))
               (=> (not (and (= C_87 c_77) (= A_88 a_78)))
                   (= (_1__cache C_87 A_88) (_0__cache C_87 A_88))))))
    (and (_0__invalid c_77 a_78)
         (_0__proc_read c_77 a_78)
         (_0__bus_transfer v_79)
         (forall ((C_80 core) (A_81 address)) (not (_0__bus_read C_80 A_81)))
         (forall ((V_82 value)) (not (_1__bus_transfer V_82)))
         (forall ((C_83 core) (A_84 address))
           (let ((a!1 (and (_0__invalid C_83 A_84)
                           (not (and (= C_83 c_77) (= A_84 a_78))))))
             (= (_1__invalid C_83 A_84) a!1)))
         a!1
         a!2
         (= (_1__cache c_77 a_78) v_79)
         (not _1__bus_in_use)
         (forall ((C_89 core) (A_90 address))
           (let ((a!1 (and (_0__proc_read C_89 A_90)
                           (not (and (= C_89 c_77) (= A_90 a_78))))))
             (= (_1__proc_read C_89 A_90) a!1)))
         (forall ((x0_91 core) (x1_92 address))
           (= (_1__modified x0_91 x1_92) (_0__modified x0_91 x1_92)))
         (forall ((x0_93 core) (x1_94 address))
           (= (_1__exclusive x0_93 x1_94) (_0__exclusive x0_93 x1_94)))
         (forall ((x0_95 core) (x1_96 address) (x2_97 value))
           (= (_1__proc_write x0_95 x1_96 x2_97)
              (_0__proc_write x0_95 x1_96 x2_97)))
         (forall ((x0_98 core) (x1_99 address))
           (= (_1__bus_read x0_98 x1_99) (_0__bus_read x0_98 x1_99)))
         (forall ((x0_100 core) (x1_101 address))
           (= (_1__bus_read_for_ownership x0_100 x1_101)
              (_0__bus_read_for_ownership x0_100 x1_101)))
         (forall ((x0_102 core) (x1_103 address))
           (= (_1__bus_upgrade x0_102 x1_103) (_0__bus_upgrade x0_102 x1_103)))
         (forall ((x0_104 address)) (= (_1__memory x0_104) (_0__memory x0_104)))))) :action true))
(define-fun transition_4 () Bool (! (exists ((c_105 core) (a_106 address) (v_107 value))
  (let ((a!1 (forall ((C_113 core) (A_114 address))
               (= (_1__exclusive C_113 A_114)
                  (or (_0__exclusive C_113 A_114)
                      (and (= C_113 c_105) (= A_114 a_106))))))
        (a!2 (forall ((C_115 core) (A_116 address))
               (=> (not (and (= C_115 c_105) (= A_116 a_106)))
                   (= (_1__cache C_115 A_116) (_0__cache C_115 A_116))))))
    (and (_0__invalid c_105 a_106)
         (_0__proc_read c_105 a_106)
         (forall ((V_108 value)) (not (_0__bus_transfer V_108)))
         (forall ((C_109 core) (A_110 address))
           (not (_0__bus_read C_109 A_110)))
         (= (_0__memory a_106) v_107)
         (forall ((C_111 core) (A_112 address))
           (let ((a!1 (and (_0__invalid C_111 A_112)
                           (not (and (= C_111 c_105) (= A_112 a_106))))))
             (= (_1__invalid C_111 A_112) a!1)))
         a!1
         a!2
         (= (_1__cache c_105 a_106) v_107)
         (not _1__bus_in_use)
         (forall ((C_117 core) (A_118 address))
           (let ((a!1 (and (_0__proc_read C_117 A_118)
                           (not (and (= C_117 c_105) (= A_118 a_106))))))
             (= (_1__proc_read C_117 A_118) a!1)))
         (forall ((x0_119 core) (x1_120 address))
           (= (_1__modified x0_119 x1_120) (_0__modified x0_119 x1_120)))
         (forall ((x0_121 core) (x1_122 address))
           (= (_1__shared x0_121 x1_122) (_0__shared x0_121 x1_122)))
         (forall ((x0_123 core) (x1_124 address) (x2_125 value))
           (= (_1__proc_write x0_123 x1_124 x2_125)
              (_0__proc_write x0_123 x1_124 x2_125)))
         (forall ((x0_126 core) (x1_127 address))
           (= (_1__bus_read x0_126 x1_127) (_0__bus_read x0_126 x1_127)))
         (forall ((x0_128 core) (x1_129 address))
           (= (_1__bus_read_for_ownership x0_128 x1_129)
              (_0__bus_read_for_ownership x0_128 x1_129)))
         (forall ((x0_130 core) (x1_131 address))
           (= (_1__bus_upgrade x0_130 x1_131) (_0__bus_upgrade x0_130 x1_131)))
         (forall ((x0_132 value))
           (= (_1__bus_transfer x0_132) (_0__bus_transfer x0_132)))
         (forall ((x0_133 address)) (= (_1__memory x0_133) (_0__memory x0_133)))))) :action true))
(define-fun transition_5 () Bool (! (exists ((c_134 core) (a_135 address) (v_136 value))
  (let ((a!1 (forall ((C_137 core) (A_138 address) (V_139 value))
               (= (_1__proc_write C_137 A_138 V_139)
                  (or (_0__proc_write C_137 A_138 V_139)
                      (and (= C_137 c_134) (= A_138 a_135) (= V_139 v_136))))))
        (a!2 (forall ((C_140 core) (A_141 address))
               (= (_1__bus_read_for_ownership C_140 A_141)
                  (or (_0__bus_read_for_ownership C_140 A_141)
                      (and (distinct C_140 c_134) (= A_141 a_135)))))))
    (and (_0__invalid c_134 a_135)
         (not _0__bus_in_use)
         _1__bus_in_use
         a!1
         a!2
         (forall ((x0_142 core) (x1_143 address))
           (= (_1__modified x0_142 x1_143) (_0__modified x0_142 x1_143)))
         (forall ((x0_144 core) (x1_145 address))
           (= (_1__exclusive x0_144 x1_145) (_0__exclusive x0_144 x1_145)))
         (forall ((x0_146 core) (x1_147 address))
           (= (_1__shared x0_146 x1_147) (_0__shared x0_146 x1_147)))
         (forall ((x0_148 core) (x1_149 address))
           (= (_1__invalid x0_148 x1_149) (_0__invalid x0_148 x1_149)))
         (forall ((x0_150 core) (x1_151 address))
           (= (_1__proc_read x0_150 x1_151) (_0__proc_read x0_150 x1_151)))
         (forall ((x0_152 core) (x1_153 address))
           (= (_1__bus_read x0_152 x1_153) (_0__bus_read x0_152 x1_153)))
         (forall ((x0_154 core) (x1_155 address))
           (= (_1__bus_upgrade x0_154 x1_155) (_0__bus_upgrade x0_154 x1_155)))
         (forall ((x0_156 value))
           (= (_1__bus_transfer x0_156) (_0__bus_transfer x0_156)))
         (forall ((x0_157 address)) (= (_1__memory x0_157) (_0__memory x0_157)))
         (forall ((x0_158 core) (x1_159 address))
           (= (_1__cache x0_158 x1_159) (_0__cache x0_158 x1_159)))))) :action true))
(define-fun transition_6 () Bool (! (exists ((c_160 core) (a_161 address))
  (and (_0__bus_read_for_ownership c_160 a_161)
       (_0__invalid c_160 a_161)
       (forall ((C_162 core) (A_163 address))
         (let ((a!1 (and (_0__bus_read_for_ownership C_162 A_163)
                         (not (and (= C_162 c_160) (= A_163 a_161))))))
           (= (_1__bus_read_for_ownership C_162 A_163) a!1)))
       (forall ((x0_164 core) (x1_165 address))
         (= (_1__modified x0_164 x1_165) (_0__modified x0_164 x1_165)))
       (forall ((x0_166 core) (x1_167 address))
         (= (_1__exclusive x0_166 x1_167) (_0__exclusive x0_166 x1_167)))
       (forall ((x0_168 core) (x1_169 address))
         (= (_1__shared x0_168 x1_169) (_0__shared x0_168 x1_169)))
       (forall ((x0_170 core) (x1_171 address))
         (= (_1__invalid x0_170 x1_171) (_0__invalid x0_170 x1_171)))
       (forall ((x0_172 core) (x1_173 address))
         (= (_1__proc_read x0_172 x1_173) (_0__proc_read x0_172 x1_173)))
       (forall ((x0_174 core) (x1_175 address) (x2_176 value))
         (= (_1__proc_write x0_174 x1_175 x2_176)
            (_0__proc_write x0_174 x1_175 x2_176)))
       (= _1__bus_in_use _0__bus_in_use)
       (forall ((x0_177 core) (x1_178 address))
         (= (_1__bus_read x0_177 x1_178) (_0__bus_read x0_177 x1_178)))
       (forall ((x0_179 core) (x1_180 address))
         (= (_1__bus_upgrade x0_179 x1_180) (_0__bus_upgrade x0_179 x1_180)))
       (forall ((x0_181 value))
         (= (_1__bus_transfer x0_181) (_0__bus_transfer x0_181)))
       (forall ((x0_182 address)) (= (_1__memory x0_182) (_0__memory x0_182)))
       (forall ((x0_183 core) (x1_184 address))
         (= (_1__cache x0_183 x1_184) (_0__cache x0_183 x1_184))))) :action true))
(define-fun transition_7 () Bool (! (exists ((c_185 core) (a_186 address) (v_187 value))
  (let ((a!1 (forall ((C_190 core) (A_191 address))
               (= (_1__invalid C_190 A_191)
                  (or (_0__invalid C_190 A_191)
                      (and (= C_190 c_185) (= A_191 a_186))))))
        (a!2 (forall ((A_198 address))
               (=> (distinct A_198 a_186)
                   (= (_1__memory A_198) (_0__memory A_198)))))
        (a!4 (=> (not (_0__modified c_185 a_186))
                 (forall ((A_199 address))
                   (= (_1__memory A_199) (_0__memory A_199)))))
        (a!5 (forall ((V_200 value))
               (= (_1__bus_transfer V_200)
                  (or (_0__bus_transfer V_200) (= V_200 v_187))))))
  (let ((a!3 (=> (_0__modified c_185 a_186)
                 (and a!2 (= (_1__memory a_186) v_187)))))
    (and (_0__bus_read_for_ownership c_185 a_186)
         (not (_0__invalid c_185 a_186))
         (= (_0__cache c_185 a_186) v_187)
         (forall ((C_188 core) (A_189 address))
           (let ((a!1 (and (_0__bus_read_for_ownership C_188 A_189)
                           (not (and (= C_188 c_185) (= A_189 a_186))))))
             (= (_1__bus_read_for_ownership C_188 A_189) a!1)))
         a!1
         (forall ((C_192 core) (A_193 address))
           (let ((a!1 (and (_0__shared C_192 A_193)
                           (not (and (= C_192 c_185) (= A_193 a_186))))))
             (= (_1__shared C_192 A_193) a!1)))
         (forall ((C_194 core) (A_195 address))
           (let ((a!1 (and (_0__modified C_194 A_195)
                           (not (and (= C_194 c_185) (= A_195 a_186))))))
             (= (_1__modified C_194 A_195) a!1)))
         (forall ((C_196 core) (A_197 address))
           (let ((a!1 (and (_0__exclusive C_196 A_197)
                           (not (and (= C_196 c_185) (= A_197 a_186))))))
             (= (_1__exclusive C_196 A_197) a!1)))
         a!3
         a!4
         a!5
         (forall ((x0_201 core) (x1_202 address))
           (= (_1__proc_read x0_201 x1_202) (_0__proc_read x0_201 x1_202)))
         (forall ((x0_203 core) (x1_204 address) (x2_205 value))
           (= (_1__proc_write x0_203 x1_204 x2_205)
              (_0__proc_write x0_203 x1_204 x2_205)))
         (= _1__bus_in_use _0__bus_in_use)
         (forall ((x0_206 core) (x1_207 address))
           (= (_1__bus_read x0_206 x1_207) (_0__bus_read x0_206 x1_207)))
         (forall ((x0_208 core) (x1_209 address))
           (= (_1__bus_upgrade x0_208 x1_209) (_0__bus_upgrade x0_208 x1_209)))
         (forall ((x0_210 core) (x1_211 address))
           (= (_1__cache x0_210 x1_211) (_0__cache x0_210 x1_211))))))) :action true))
(define-fun transition_8 () Bool (! (exists ((c_212 core) (a_213 address) (v_214 value))
  (let ((a!1 (forall ((C_220 core) (A_221 address))
               (= (_1__modified C_220 A_221)
                  (or (_0__modified C_220 A_221)
                      (and (= C_220 c_212) (= A_221 a_213))))))
        (a!2 (forall ((C_222 core) (A_223 address))
               (=> (not (and (= C_222 c_212) (= A_223 a_213)))
                   (= (_1__cache C_222 A_223) (_0__cache C_222 A_223))))))
    (and (_0__invalid c_212 a_213)
         (_0__proc_write c_212 a_213 v_214)
         (forall ((C_215 core) (A_216 address))
           (not (_0__bus_read_for_ownership C_215 A_216)))
         (forall ((V_217 value)) (not (_1__bus_transfer V_217)))
         (forall ((C_218 core) (A_219 address))
           (let ((a!1 (and (_0__invalid C_218 A_219)
                           (not (and (= C_218 c_212) (= A_219 a_213))))))
             (= (_1__invalid C_218 A_219) a!1)))
         a!1
         a!2
         (= (_1__cache c_212 a_213) v_214)
         (not _1__bus_in_use)
         (forall ((C_224 core) (A_225 address) (V_226 value))
           (let ((a!1 (and (_0__proc_write C_224 A_225 V_226)
                           (not (and (= C_224 c_212)
                                     (= A_225 a_213)
                                     (= V_226 v_214))))))
             (= (_1__proc_write C_224 A_225 V_226) a!1)))
         (forall ((x0_227 core) (x1_228 address))
           (= (_1__exclusive x0_227 x1_228) (_0__exclusive x0_227 x1_228)))
         (forall ((x0_229 core) (x1_230 address))
           (= (_1__shared x0_229 x1_230) (_0__shared x0_229 x1_230)))
         (forall ((x0_231 core) (x1_232 address))
           (= (_1__proc_read x0_231 x1_232) (_0__proc_read x0_231 x1_232)))
         (forall ((x0_233 core) (x1_234 address))
           (= (_1__bus_read x0_233 x1_234) (_0__bus_read x0_233 x1_234)))
         (forall ((x0_235 core) (x1_236 address))
           (= (_1__bus_read_for_ownership x0_235 x1_236)
              (_0__bus_read_for_ownership x0_235 x1_236)))
         (forall ((x0_237 core) (x1_238 address))
           (= (_1__bus_upgrade x0_237 x1_238) (_0__bus_upgrade x0_237 x1_238)))
         (forall ((x0_239 address)) (= (_1__memory x0_239) (_0__memory x0_239)))))) :action true))
(define-fun transition_9 () Bool (! (exists ((c_240 core) (a_241 address) (v_242 value))
  (let ((a!1 (forall ((C_245 core) (A_246 address))
               (= (_1__modified C_245 A_246)
                  (or (_0__modified C_245 A_246)
                      (and (= C_245 c_240) (= A_246 a_241))))))
        (a!2 (forall ((C_247 core) (A_248 address))
               (=> (not (and (= C_247 c_240) (= A_248 a_241)))
                   (= (_1__cache C_247 A_248) (_0__cache C_247 A_248))))))
    (and (_0__exclusive c_240 a_241)
         (not _0__bus_in_use)
         (forall ((C_243 core) (A_244 address))
           (let ((a!1 (and (_0__exclusive C_243 A_244)
                           (not (and (= C_243 c_240) (= A_244 a_241))))))
             (= (_1__exclusive C_243 A_244) a!1)))
         a!1
         a!2
         (= (_1__cache c_240 a_241) v_242)
         (forall ((x0_249 core) (x1_250 address))
           (= (_1__shared x0_249 x1_250) (_0__shared x0_249 x1_250)))
         (forall ((x0_251 core) (x1_252 address))
           (= (_1__invalid x0_251 x1_252) (_0__invalid x0_251 x1_252)))
         (forall ((x0_253 core) (x1_254 address))
           (= (_1__proc_read x0_253 x1_254) (_0__proc_read x0_253 x1_254)))
         (forall ((x0_255 core) (x1_256 address) (x2_257 value))
           (= (_1__proc_write x0_255 x1_256 x2_257)
              (_0__proc_write x0_255 x1_256 x2_257)))
         (= _1__bus_in_use _0__bus_in_use)
         (forall ((x0_258 core) (x1_259 address))
           (= (_1__bus_read x0_258 x1_259) (_0__bus_read x0_258 x1_259)))
         (forall ((x0_260 core) (x1_261 address))
           (= (_1__bus_read_for_ownership x0_260 x1_261)
              (_0__bus_read_for_ownership x0_260 x1_261)))
         (forall ((x0_262 core) (x1_263 address))
           (= (_1__bus_upgrade x0_262 x1_263) (_0__bus_upgrade x0_262 x1_263)))
         (forall ((x0_264 value))
           (= (_1__bus_transfer x0_264) (_0__bus_transfer x0_264)))
         (forall ((x0_265 address)) (= (_1__memory x0_265) (_0__memory x0_265)))))) :action true))
(define-fun transition_10 () Bool (! (exists ((c_266 core) (a_267 address) (v_268 value))
  (let ((a!1 (forall ((C_269 core) (A_270 address) (V_271 value))
               (= (_1__proc_write C_269 A_270 V_271)
                  (or (_0__proc_write C_269 A_270 V_271)
                      (and (= C_269 c_266) (= A_270 a_267) (= V_271 v_268))))))
        (a!2 (forall ((C_272 core) (A_273 address))
               (= (_1__bus_upgrade C_272 A_273)
                  (or (_0__bus_upgrade C_272 A_273)
                      (and (distinct C_272 c_266) (= A_273 a_267)))))))
    (and (_0__shared c_266 a_267)
         (not _0__bus_in_use)
         _1__bus_in_use
         a!1
         a!2
         (forall ((x0_274 core) (x1_275 address))
           (= (_1__modified x0_274 x1_275) (_0__modified x0_274 x1_275)))
         (forall ((x0_276 core) (x1_277 address))
           (= (_1__exclusive x0_276 x1_277) (_0__exclusive x0_276 x1_277)))
         (forall ((x0_278 core) (x1_279 address))
           (= (_1__shared x0_278 x1_279) (_0__shared x0_278 x1_279)))
         (forall ((x0_280 core) (x1_281 address))
           (= (_1__invalid x0_280 x1_281) (_0__invalid x0_280 x1_281)))
         (forall ((x0_282 core) (x1_283 address))
           (= (_1__proc_read x0_282 x1_283) (_0__proc_read x0_282 x1_283)))
         (forall ((x0_284 core) (x1_285 address))
           (= (_1__bus_read x0_284 x1_285) (_0__bus_read x0_284 x1_285)))
         (forall ((x0_286 core) (x1_287 address))
           (= (_1__bus_read_for_ownership x0_286 x1_287)
              (_0__bus_read_for_ownership x0_286 x1_287)))
         (forall ((x0_288 value))
           (= (_1__bus_transfer x0_288) (_0__bus_transfer x0_288)))
         (forall ((x0_289 address)) (= (_1__memory x0_289) (_0__memory x0_289)))
         (forall ((x0_290 core) (x1_291 address))
           (= (_1__cache x0_290 x1_291) (_0__cache x0_290 x1_291)))))) :action true))
(define-fun transition_11 () Bool (! (exists ((c_292 core) (a_293 address))
  (let ((a!1 (forall ((C_296 core) (A_297 address))
               (= (_1__invalid C_296 A_297)
                  (or (_0__invalid C_296 A_297)
                      (and (= C_296 c_292) (= A_297 a_293)))))))
    (and (_0__bus_upgrade c_292 a_293)
         (forall ((C_294 core) (A_295 address))
           (let ((a!1 (and (_0__bus_upgrade C_294 A_295)
                           (not (and (= C_294 c_292) (= A_295 a_293))))))
             (= (_1__bus_upgrade C_294 A_295) a!1)))
         a!1
         (forall ((C_298 core) (A_299 address))
           (let ((a!1 (and (_0__shared C_298 A_299)
                           (not (and (= C_298 c_292) (= A_299 a_293))))))
             (= (_1__shared C_298 A_299) a!1)))
         (forall ((x0_300 core) (x1_301 address))
           (= (_1__modified x0_300 x1_301) (_0__modified x0_300 x1_301)))
         (forall ((x0_302 core) (x1_303 address))
           (= (_1__exclusive x0_302 x1_303) (_0__exclusive x0_302 x1_303)))
         (forall ((x0_304 core) (x1_305 address))
           (= (_1__proc_read x0_304 x1_305) (_0__proc_read x0_304 x1_305)))
         (forall ((x0_306 core) (x1_307 address) (x2_308 value))
           (= (_1__proc_write x0_306 x1_307 x2_308)
              (_0__proc_write x0_306 x1_307 x2_308)))
         (= _1__bus_in_use _0__bus_in_use)
         (forall ((x0_309 core) (x1_310 address))
           (= (_1__bus_read x0_309 x1_310) (_0__bus_read x0_309 x1_310)))
         (forall ((x0_311 core) (x1_312 address))
           (= (_1__bus_read_for_ownership x0_311 x1_312)
              (_0__bus_read_for_ownership x0_311 x1_312)))
         (forall ((x0_313 value))
           (= (_1__bus_transfer x0_313) (_0__bus_transfer x0_313)))
         (forall ((x0_314 address)) (= (_1__memory x0_314) (_0__memory x0_314)))
         (forall ((x0_315 core) (x1_316 address))
           (= (_1__cache x0_315 x1_316) (_0__cache x0_315 x1_316)))))) :action true))
(define-fun transition_12 () Bool (! (exists ((c_317 core) (a_318 address) (v_319 value))
  (let ((a!1 (forall ((C_324 core) (A_325 address))
               (= (_1__modified C_324 A_325)
                  (or (_0__modified C_324 A_325)
                      (and (= C_324 c_317) (= A_325 a_318))))))
        (a!2 (forall ((C_326 core) (A_327 address))
               (=> (not (and (= C_326 c_317) (= A_327 a_318)))
                   (= (_1__cache C_326 A_327) (_0__cache C_326 A_327))))))
    (and (_0__shared c_317 a_318)
         (_0__proc_write c_317 a_318 v_319)
         (forall ((C_320 core) (A_321 address))
           (not (_0__bus_upgrade C_320 A_321)))
         (forall ((C_322 core) (A_323 address))
           (let ((a!1 (and (_0__shared C_322 A_323)
                           (not (and (= C_322 c_317) (= A_323 a_318))))))
             (= (_1__shared C_322 A_323) a!1)))
         a!1
         a!2
         (= (_1__cache c_317 a_318) v_319)
         (forall ((C_328 core) (A_329 address) (V_330 value))
           (let ((a!1 (and (_0__proc_write C_328 A_329 V_330)
                           (not (and (= C_328 c_317)
                                     (= A_329 a_318)
                                     (= V_330 v_319))))))
             (= (_1__proc_write C_328 A_329 V_330) a!1)))
         (not _1__bus_in_use)
         (forall ((x0_331 core) (x1_332 address))
           (= (_1__exclusive x0_331 x1_332) (_0__exclusive x0_331 x1_332)))
         (forall ((x0_333 core) (x1_334 address))
           (= (_1__invalid x0_333 x1_334) (_0__invalid x0_333 x1_334)))
         (forall ((x0_335 core) (x1_336 address))
           (= (_1__proc_read x0_335 x1_336) (_0__proc_read x0_335 x1_336)))
         (forall ((x0_337 core) (x1_338 address))
           (= (_1__bus_read x0_337 x1_338) (_0__bus_read x0_337 x1_338)))
         (forall ((x0_339 core) (x1_340 address))
           (= (_1__bus_read_for_ownership x0_339 x1_340)
              (_0__bus_read_for_ownership x0_339 x1_340)))
         (forall ((x0_341 core) (x1_342 address))
           (= (_1__bus_upgrade x0_341 x1_342) (_0__bus_upgrade x0_341 x1_342)))
         (forall ((x0_343 value))
           (= (_1__bus_transfer x0_343) (_0__bus_transfer x0_343)))
         (forall ((x0_344 address)) (= (_1__memory x0_344) (_0__memory x0_344)))))) :action true))
(define-fun transition_13 () Bool (! (exists ((c_345 core) (a_346 address))
  (let ((a!1 (forall ((A_347 address))
               (=> (distinct A_347 a_346)
                   (= (_1__memory A_347) (_0__memory A_347)))))
        (a!2 (forall ((C_350 core) (A_351 address))
               (= (_1__invalid C_350 A_351)
                  (or (_0__invalid C_350 A_351)
                      (and (= C_350 c_345) (= A_351 a_346)))))))
    (and (not _0__bus_in_use)
         (_0__modified c_345 a_346)
         a!1
         (= (_1__memory a_346) (_0__cache c_345 a_346))
         (forall ((C_348 core) (A_349 address))
           (let ((a!1 (and (_0__modified C_348 A_349)
                           (not (and (= C_348 c_345) (= A_349 a_346))))))
             (= (_1__modified C_348 A_349) a!1)))
         a!2
         (forall ((x0_352 core) (x1_353 address))
           (= (_1__exclusive x0_352 x1_353) (_0__exclusive x0_352 x1_353)))
         (forall ((x0_354 core) (x1_355 address))
           (= (_1__shared x0_354 x1_355) (_0__shared x0_354 x1_355)))
         (forall ((x0_356 core) (x1_357 address))
           (= (_1__proc_read x0_356 x1_357) (_0__proc_read x0_356 x1_357)))
         (forall ((x0_358 core) (x1_359 address) (x2_360 value))
           (= (_1__proc_write x0_358 x1_359 x2_360)
              (_0__proc_write x0_358 x1_359 x2_360)))
         (= _1__bus_in_use _0__bus_in_use)
         (forall ((x0_361 core) (x1_362 address))
           (= (_1__bus_read x0_361 x1_362) (_0__bus_read x0_361 x1_362)))
         (forall ((x0_363 core) (x1_364 address))
           (= (_1__bus_read_for_ownership x0_363 x1_364)
              (_0__bus_read_for_ownership x0_363 x1_364)))
         (forall ((x0_365 core) (x1_366 address))
           (= (_1__bus_upgrade x0_365 x1_366) (_0__bus_upgrade x0_365 x1_366)))
         (forall ((x0_367 value))
           (= (_1__bus_transfer x0_367) (_0__bus_transfer x0_367)))
         (forall ((x0_368 core) (x1_369 address))
           (= (_1__cache x0_368 x1_369) (_0__cache x0_368 x1_369)))))) :action true))
(define-fun transition_14 () Bool (! (exists ((c_370 core) (a_371 address))
  (let ((a!1 (forall ((C_376 core) (A_377 address))
               (= (_1__invalid C_376 A_377)
                  (or (_0__invalid C_376 A_377)
                      (and (= C_376 c_370) (= A_377 a_371)))))))
    (and (not _0__bus_in_use)
         (or (_0__exclusive c_370 a_371) (_0__shared c_370 a_371))
         (forall ((C_372 core) (A_373 address))
           (let ((a!1 (and (_0__exclusive C_372 A_373)
                           (not (and (= C_372 c_370) (= A_373 a_371))))))
             (= (_1__exclusive C_372 A_373) a!1)))
         (forall ((C_374 core) (A_375 address))
           (let ((a!1 (and (_0__shared C_374 A_375)
                           (not (and (= C_374 c_370) (= A_375 a_371))))))
             (= (_1__shared C_374 A_375) a!1)))
         a!1
         (forall ((x0_378 core) (x1_379 address))
           (= (_1__modified x0_378 x1_379) (_0__modified x0_378 x1_379)))
         (forall ((x0_380 core) (x1_381 address))
           (= (_1__proc_read x0_380 x1_381) (_0__proc_read x0_380 x1_381)))
         (forall ((x0_382 core) (x1_383 address) (x2_384 value))
           (= (_1__proc_write x0_382 x1_383 x2_384)
              (_0__proc_write x0_382 x1_383 x2_384)))
         (= _1__bus_in_use _0__bus_in_use)
         (forall ((x0_385 core) (x1_386 address))
           (= (_1__bus_read x0_385 x1_386) (_0__bus_read x0_385 x1_386)))
         (forall ((x0_387 core) (x1_388 address))
           (= (_1__bus_read_for_ownership x0_387 x1_388)
              (_0__bus_read_for_ownership x0_387 x1_388)))
         (forall ((x0_389 core) (x1_390 address))
           (= (_1__bus_upgrade x0_389 x1_390) (_0__bus_upgrade x0_389 x1_390)))
         (forall ((x0_391 value))
           (= (_1__bus_transfer x0_391) (_0__bus_transfer x0_391)))
         (forall ((x0_392 address)) (= (_1__memory x0_392) (_0__memory x0_392)))
         (forall ((x0_393 core) (x1_394 address))
           (= (_1__cache x0_393 x1_394) (_0__cache x0_393 x1_394)))))) :action true))
(define-fun safety-prop () Bool (!(let ((a!1 (forall ((C_0 core) (A_1 address))
             (=> (and (not (_0__invalid C_0 A_1)) (not (_0__modified C_0 A_1)))
                 (= (_0__cache C_0 A_1) (_0__memory A_1))))))
  (and a!1)) :invar-property 0))
(define-fun invariant_0 () Bool (! (forall ((C_0 core) (A_1 address))
  (=> (and (not (_0__invalid C_0 A_1)) (not (_0__modified C_0 A_1)))
      (= (_0__cache C_0 A_1) (_0__memory A_1)))) :invar-property 0))
(define-fun invariant_1 () Bool (! (forall ((C_2 core) (A_3 address))
  (not (and (_0__invalid C_2 A_3) (_0__modified C_2 A_3)))) :invar-property 1))
(define-fun invariant_2 () Bool (! (forall ((C_4 core) (A_5 address))
  (not (and (_0__invalid C_4 A_5) (_0__exclusive C_4 A_5)))) :invar-property 2))
(define-fun invariant_3 () Bool (! (forall ((C_6 core) (A_7 address))
  (not (and (_0__invalid C_6 A_7) (_0__shared C_6 A_7)))) :invar-property 3))
(define-fun invariant_4 () Bool (! (forall ((C_8 core) (A_9 address))
  (not (and (_0__modified C_8 A_9) (_0__exclusive C_8 A_9)))) :invar-property 4))
(define-fun invariant_5 () Bool (! (forall ((C_10 core) (A_11 address))
  (not (and (_0__modified C_10 A_11) (_0__shared C_10 A_11)))) :invar-property 5))
(define-fun invariant_6 () Bool (! (forall ((C_12 core) (A_13 address))
  (not (and (_0__exclusive C_12 A_13) (_0__shared C_12 A_13)))) :invar-property 6))
(define-fun invariant_7 () Bool (! (forall ((C1_14 core) (A_15 address) (C2_16 core))
  (=> (and (_0__exclusive C1_14 A_15) (distinct C1_14 C2_16))
      (_0__invalid C2_16 A_15))) :invar-property 7))
(define-fun invariant_8 () Bool (! (forall ((C1_17 core) (A_18 address) (C2_19 core))
  (=> (and (_0__modified C1_17 A_18) (distinct C1_17 C2_19))
      (_0__invalid C2_19 A_18))) :invar-property 8))
(define-fun invariant_9 () Bool (! (forall ((C_20 core) (A_21 address))
  (=> (_0__bus_read C_20 A_21) _0__bus_in_use)) :invar-property 9))
(define-fun invariant_10 () Bool (! (forall ((C_22 core) (A_23 address))
  (=> (_0__bus_read_for_ownership C_22 A_23) _0__bus_in_use)) :invar-property 10))
(define-fun invariant_11 () Bool (! (forall ((C_24 core) (A_25 address))
  (=> (_0__bus_upgrade C_24 A_25) _0__bus_in_use)) :invar-property 11))
(define-fun invariant_12 () Bool (! (forall ((V_26 value)) (=> (_0__bus_transfer V_26) _0__bus_in_use)) :invar-property 12))
(define-fun invariant_13 () Bool (! (forall ((C_27 core) (A_28 address))
  (=> (_0__proc_read C_27 A_28) _0__bus_in_use)) :invar-property 13))
(define-fun invariant_14 () Bool (! (forall ((C_29 core) (A_30 address) (V_31 value))
  (=> (_0__proc_write C_29 A_30 V_31) _0__bus_in_use)) :invar-property 14))
(define-fun invariant_15 () Bool (! (forall ((C1_32 core) (A_33 address) (V_34 value) (C2_35 core))
  (=> (and (_0__proc_write C1_32 A_33 V_34)
           (_0__bus_read_for_ownership C2_35 A_33))
      (_0__invalid C1_32 A_33))) :invar-property 15))
(define-fun invariant_16 () Bool (! (forall ((C1_36 core) (A_37 address) (V_38 value) (C2_39 core))
  (=> (and (_0__proc_write C1_36 A_37 V_38) (_0__bus_upgrade C2_39 A_37))
      (_0__shared C1_36 A_37))) :invar-property 16))
(define-fun invariant_17 () Bool (! (forall ((C_40 core) (A_41 address) (V_42 value))
  (not (and (_0__proc_write C_40 A_41 V_42) (_0__bus_upgrade C_40 A_41)))) :invar-property 17))
(define-fun invariant_18 () Bool (! (forall ((C_43 core) (A_44 address) (V1_45 value) (V2_46 value))
  (=> (and (_0__proc_write C_43 A_44 V1_45) (_0__shared C_43 A_44))
      (not (_0__bus_transfer V2_46)))) :invar-property 18))
(define-fun invariant_19 () Bool (! (forall ((C1_47 core) (A1_48 address) (C2_49 core) (A2_50 address))
  (=> (and (_0__proc_read C1_47 A1_48) (_0__proc_read C2_49 A2_50))
      (and (= C1_47 C2_49) (= A1_48 A2_50)))) :invar-property 19))
(define-fun invariant_20 () Bool (! (forall ((C1_51 core)
         (A1_52 address)
         (V1_53 value)
         (C2_54 core)
         (A2_55 address)
         (V2_56 value))
  (=> (and (_0__proc_write C1_51 A1_52 V1_53)
           (_0__proc_write C2_54 A2_55 V2_56))
      (and (= C1_51 C2_54) (= A1_52 A2_55) (= V1_53 V2_56)))) :invar-property 20))
(define-fun invariant_21 () Bool (! (forall ((C1_57 core) (A1_58 address) (C2_59 core) (A2_60 address) (V_61 value))
  (not (and (_0__proc_read C1_57 A1_58) (_0__proc_write C2_59 A2_60 V_61)))) :invar-property 21))
(define-fun invariant_22 () Bool (! (forall ((C1_62 core) (A1_63 address) (C2_64 core) (A2_65 address))
  (not (and (_0__proc_read C1_62 A1_63)
            (_0__bus_read_for_ownership C2_64 A2_65)))) :invar-property 22))
(define-fun invariant_23 () Bool (! (forall ((C1_66 core) (A1_67 address) (C2_68 core) (A2_69 address))
  (not (and (_0__proc_read C1_66 A1_67) (_0__bus_upgrade C2_68 A2_69)))) :invar-property 23))
(define-fun invariant_24 () Bool (! (forall ((C1_70 core) (A1_71 address) (V_72 value) (C2_73 core) (A2_74 address))
  (not (and (_0__proc_write C1_70 A1_71 V_72) (_0__bus_read C2_73 A2_74)))) :invar-property 24))
(define-fun invariant_25 () Bool (! (forall ((C1_75 core) (A1_76 address) (C2_77 core) (A2_78 address))
  (=> (and (_0__proc_read C1_75 A1_76) (_0__bus_read C2_77 A2_78))
      (= A1_76 A2_78))) :invar-property 25))
(define-fun invariant_26 () Bool (! (forall ((C1_79 core) (A1_80 address) (V_81 value) (C2_82 core) (A2_83 address))
  (=> (and (_0__proc_write C1_79 A1_80 V_81)
           (_0__bus_read_for_ownership C2_82 A2_83))
      (= A1_80 A2_83))) :invar-property 26))
(define-fun invariant_27 () Bool (! (forall ((C1_84 core) (A1_85 address) (V_86 value) (C2_87 core) (A2_88 address))
  (=> (and (_0__proc_write C1_84 A1_85 V_86) (_0__bus_upgrade C2_87 A2_88))
      (= A1_85 A2_88))) :invar-property 27))
(define-fun invariant_28 () Bool (! (forall ((C1_89 core) (A_90 address) (C2_91 core))
  (=> (and (_0__proc_read C1_89 A_90)
           (not (_0__bus_read C2_91 A_90))
           (distinct C1_89 C2_91))
      (or (_0__shared C2_91 A_90) (_0__invalid C2_91 A_90)))) :invar-property 28))
(define-fun invariant_29 () Bool (! (forall ((C1_92 core) (A_93 address) (C2_94 core))
  (=> (and (_0__proc_read C1_92 A_93)
           (not (_0__bus_read C2_94 A_93))
           (distinct C1_92 C2_94)
           (_0__shared C2_94 A_93))
      (_0__bus_transfer (_0__cache C2_94 A_93)))) :invar-property 29))
(define-fun invariant_30 () Bool (! (forall ((C_95 core) (A_96 address) (V_97 value))
  (=> (and (_0__proc_read C_95 A_96) (_0__bus_transfer V_97))
      (= (_0__memory A_96) V_97))) :invar-property 30))
(define-fun invariant_31 () Bool (! (forall ((C1_98 core) (A_99 address) (V_100 value) (C2_101 core))
  (=> (and (_0__proc_read C1_98 A_99)
           (_0__bus_transfer V_100)
           (not (_0__invalid C2_101 A_99)))
      (= (_0__cache C2_101 A_99) V_100))) :invar-property 31))
(define-fun invariant_32 () Bool (! (forall ((C1_102 core) (A_103 address) (V_104 value) (C2_105 core))
  (=> (and (_0__proc_write C1_102 A_103 V_104)
           (_0__invalid C1_102 A_103)
           (not (_0__bus_read_for_ownership C2_105 A_103))
           (distinct C1_102 C2_105))
      (_0__invalid C2_105 A_103))) :invar-property 32))
(define-fun invariant_33 () Bool (! (forall ((C1_106 core) (A_107 address) (V_108 value) (C2_109 core))
  (=> (and (_0__proc_write C1_106 A_107 V_108)
           (_0__shared C1_106 A_107)
           (not (_0__bus_upgrade C2_109 A_107))
           (distinct C1_106 C2_109))
      (_0__invalid C2_109 A_107))) :invar-property 33))
(define-fun invariant_34 () Bool (! (forall ((V_110 value)
         (C1_111 core)
         (A_112 address)
         (C2_113 core)
         (V2_114 value))
  (not (and (_0__bus_transfer V_110)
            (_0__modified C1_111 A_112)
            (or (_0__proc_read C2_113 A_112)
                (_0__proc_write C2_113 A_112 V2_114))))) :invar-property 34))
(define-fun invariant_35 () Bool (! (forall ((C1_115 core) (A_116 address) (C2_117 core))
  (not (and (_0__bus_upgrade C1_115 A_116) (_0__exclusive C2_117 A_116)))) :invar-property 35))
(define-fun invariant_36 () Bool (! (forall ((C1_118 core) (A_119 address) (C2_120 core))
  (not (and (_0__bus_upgrade C1_118 A_119) (_0__modified C2_120 A_119)))) :invar-property 36))

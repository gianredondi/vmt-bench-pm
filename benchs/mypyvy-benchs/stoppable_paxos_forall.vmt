(declare-sort node 0)
(declare-sort value 0)
(declare-sort quorum 0)
(declare-sort round 0)
(declare-sort inst 0)
(declare-sort votemap 0)
(declare-const none round)
(define-fun none.sv () round (! none :rigid true))
(declare-const stop value)
(define-fun stop.sv () value (! stop :rigid true))
(declare-fun le (round round) Bool)
(declare-fun inst_le (inst inst) Bool)
(declare-fun member (node quorum) Bool)
(declare-fun _0__one_a (round) Bool)
(declare-fun _1__one_a (round) Bool)
(define-fun _0__one_a.sv ((V0 round)) Bool (! (_0__one_a V0) :next _1__one_a))
(declare-fun _0__one_b_msg (node round votemap) Bool)
(declare-fun _1__one_b_msg (node round votemap) Bool)
(define-fun _0__one_b_msg.sv ((V0 node) (V1 round) (V2 votemap)) Bool (! (_0__one_b_msg V0 V1 V2) :next _1__one_b_msg))
(declare-fun _0__left_round (node round) Bool)
(declare-fun _1__left_round (node round) Bool)
(define-fun _0__left_round.sv ((V0 node) (V1 round)) Bool (! (_0__left_round V0 V1) :next _1__left_round))
(declare-fun _0__joined_round (node round) Bool)
(declare-fun _1__joined_round (node round) Bool)
(define-fun _0__joined_round.sv ((V0 node) (V1 round)) Bool (! (_0__joined_round V0 V1) :next _1__joined_round))
(declare-fun _0__proposal (inst round value) Bool)
(declare-fun _1__proposal (inst round value) Bool)
(define-fun _0__proposal.sv ((V0 inst) (V1 round) (V2 value)) Bool (! (_0__proposal V0 V1 V2) :next _1__proposal))
(declare-fun _0__active (round) Bool)
(declare-fun _1__active (round) Bool)
(define-fun _0__active.sv ((V0 round)) Bool (! (_0__active V0) :next _1__active))
(declare-fun _0__vote (node inst round value) Bool)
(declare-fun _1__vote (node inst round value) Bool)
(define-fun _0__vote.sv ((V0 node) (V1 inst) (V2 round) (V3 value)) Bool (! (_0__vote V0 V1 V2 V3) :next _1__vote))
(declare-fun _0__decision (node inst round value) Bool)
(declare-fun _1__decision (node inst round value) Bool)
(define-fun _0__decision.sv ((V0 node) (V1 inst) (V2 round) (V3 value)) Bool (! (_0__decision V0 V1 V2 V3) :next _1__decision))
(declare-fun _0__decision_quorum (inst round value) quorum)
(declare-fun _1__decision_quorum (inst round value) quorum)
(define-fun _0__decision_quorum.sv ((V0 inst) (V1 round) (V2 value)) quorum (! (_0__decision_quorum V0 V1 V2) :next _1__decision_quorum))
(declare-fun _0__choosable_node (inst round value quorum) node)
(declare-fun _1__choosable_node (inst round value quorum) node)
(define-fun _0__choosable_node.sv ((V0 inst) (V1 round) (V2 value) (V3 quorum)) node (! (_0__choosable_node V0 V1 V2 V3) :next _1__choosable_node))
(define-fun axiom_0 () Bool (! (forall ((X_0 round)) (le X_0 X_0)) :axiom true))
(define-fun axiom_1 () Bool (! (forall ((X_1 round) (Y_2 round) (Z_3 round))
  (=> (and (le X_1 Y_2) (le Y_2 Z_3)) (le X_1 Z_3))) :axiom true))
(define-fun axiom_2 () Bool (! (forall ((X_4 round) (Y_5 round))
  (=> (and (le X_4 Y_5) (le Y_5 X_4)) (= X_4 Y_5))) :axiom true))
(define-fun axiom_3 () Bool (! (forall ((X_6 round) (Y_7 round)) (or (le X_6 Y_7) (le Y_7 X_6))) :axiom true))
(define-fun axiom_4 () Bool (! (forall ((X_8 inst)) (inst_le X_8 X_8)) :axiom true))
(define-fun axiom_5 () Bool (! (forall ((X_9 inst) (Y_10 inst) (Z_11 inst))
  (=> (and (inst_le X_9 Y_10) (inst_le Y_10 Z_11)) (inst_le X_9 Z_11))) :axiom true))
(define-fun axiom_6 () Bool (! (forall ((X_12 inst) (Y_13 inst))
  (=> (and (inst_le X_12 Y_13) (inst_le Y_13 X_12)) (= X_12 Y_13))) :axiom true))
(define-fun axiom_7 () Bool (! (forall ((X_14 inst) (Y_15 inst)) (or (inst_le X_14 Y_15) (inst_le Y_15 X_14))) :axiom true))
(define-fun axiom_8 () Bool (! (forall ((Q1_16 quorum) (Q2_17 quorum))
  (exists ((N_18 node)) (and (member N_18 Q1_16) (member N_18 Q2_17)))) :axiom true))
(define-fun init () Bool (! (and (forall ((R_0 round)) (not (_0__one_a R_0)))
     (forall ((N_1 node) (R1_2 round) (M_3 votemap))
       (not (_0__one_b_msg N_1 R1_2 M_3)))
     (forall ((N_4 node) (R_5 round)) (not (_0__left_round N_4 R_5)))
     (forall ((N_6 node) (R_7 round)) (not (_0__joined_round N_6 R_7)))
     (forall ((I_8 inst) (R_9 round) (V_10 value))
       (not (_0__proposal I_8 R_9 V_10)))
     (forall ((R_11 round)) (not (_0__active R_11)))
     (forall ((N_12 node) (I_13 inst) (R_14 round) (V_15 value))
       (not (_0__vote N_12 I_13 R_14 V_15)))
     (forall ((N_16 node) (I_17 inst) (R_18 round) (V_19 value))
       (not (_0__decision N_16 I_17 R_18 V_19)))) :init true))
(define-fun transition_0 () Bool (! (exists ((r_0 round))
  (let ((a!1 (forall ((R_1 round))
               (= (_1__one_a R_1) (or (_0__one_a R_1) (= R_1 r_0))))))
    (and (distinct r_0 none)
         a!1
         (forall ((x0_2 node) (x1_3 round) (x2_4 votemap))
           (= (_1__one_b_msg x0_2 x1_3 x2_4) (_0__one_b_msg x0_2 x1_3 x2_4)))
         (forall ((x0_5 node) (x1_6 round))
           (= (_1__left_round x0_5 x1_6) (_0__left_round x0_5 x1_6)))
         (forall ((x0_7 node) (x1_8 round))
           (= (_1__joined_round x0_7 x1_8) (_0__joined_round x0_7 x1_8)))
         (forall ((x0_9 inst) (x1_10 round) (x2_11 value))
           (= (_1__proposal x0_9 x1_10 x2_11) (_0__proposal x0_9 x1_10 x2_11)))
         (forall ((x0_12 round)) (= (_1__active x0_12) (_0__active x0_12)))
         (forall ((x0_13 node) (x1_14 inst) (x2_15 round) (x3_16 value))
           (= (_1__vote x0_13 x1_14 x2_15 x3_16)
              (_0__vote x0_13 x1_14 x2_15 x3_16)))
         (forall ((x0_17 node) (x1_18 inst) (x2_19 round) (x3_20 value))
           (= (_1__decision x0_17 x1_18 x2_19 x3_20)
              (_0__decision x0_17 x1_18 x2_19 x3_20)))
         (forall ((x0_21 inst) (x1_22 round) (x2_23 value))
           (= (_1__decision_quorum x0_21 x1_22 x2_23)
              (_0__decision_quorum x0_21 x1_22 x2_23)))
         (forall ((x0_24 inst) (x1_25 round) (x2_26 value) (x3_27 quorum))
           (= (_1__choosable_node x0_24 x1_25 x2_26 x3_27)
              (_0__choosable_node x0_24 x1_25 x2_26 x3_27)))))) :action true))
(define-fun transition_1 () Bool (! (exists ((n_28 node) (r_29 round) (m_30 votemap))
  (let ((a!1 (forall ((I_31 inst))
               (let ((a!1 (forall ((R_34 round) (V_35 value))
                            (let ((a!1 (and (_0__vote n_28 I_31 R_34 V_35)
                                            (not (le r_29 R_34)))))
                              (=> a!1 (le R_34 (maxr m_30 I_31)))))))
               (let ((a!2 (and (_0__vote n_28
                                         I_31
                                         (maxr m_30 I_31)
                                         (maxv m_30 I_31))
                               (not (le r_29 (maxr m_30 I_31)))
                               a!1)))
                 (or (and (= (maxr m_30 I_31) none)
                          (forall ((R_32 round) (V_33 value))
                            (let ((a!1 (and (_0__vote n_28 I_31 R_32 V_33)
                                            (not (le r_29 R_32)))))
                              (not a!1))))
                     a!2)))))
        (a!2 (forall ((N_36 node) (R_37 round) (M_38 votemap))
               (= (_1__one_b_msg N_36 R_37 M_38)
                  (or (_0__one_b_msg N_36 R_37 M_38)
                      (and (= N_36 n_28) (= R_37 r_29) (= M_38 m_30))))))
        (a!3 (forall ((N_41 node) (R_42 round))
               (= (_1__joined_round N_41 R_42)
                  (or (_0__joined_round N_41 R_42)
                      (and (= N_41 n_28) (= R_42 r_29))))))
        (a!4 (forall ((I_43 inst) (R_44 round) (V_45 value) (Q_46 quorum))
               (let ((a!1 (and (member n_28 Q_46)
                               (not (le r_29 R_44))
                               (not (_0__vote n_28 I_43 R_44 V_45)))))
                 (=> a!1 (= (_1__choosable_node I_43 R_44 V_45 Q_46) n_28)))))
        (a!5 (forall ((I_47 inst) (R_48 round) (V_49 value) (Q_50 quorum))
               (let ((a!1 (and (member n_28 Q_50)
                               (not (le r_29 R_48))
                               (not (_0__vote n_28 I_47 R_48 V_49)))))
                 (=> (not a!1)
                     (= (_1__choosable_node I_47 R_48 V_49 Q_50)
                        (_0__choosable_node I_47 R_48 V_49 Q_50)))))))
    (and (distinct r_29 none)
         (_0__one_a r_29)
         (not (_0__left_round n_28 r_29))
         a!1
         a!2
         (forall ((N_39 node) (R_40 round))
           (let ((a!1 (or (_0__left_round N_39 R_40)
                          (and (= N_39 n_28) (not (le r_29 R_40))))))
             (= (_1__left_round N_39 R_40) a!1)))
         a!3
         a!4
         a!5
         (forall ((x0_51 round)) (= (_1__one_a x0_51) (_0__one_a x0_51)))
         (forall ((x0_52 inst) (x1_53 round) (x2_54 value))
           (= (_1__proposal x0_52 x1_53 x2_54) (_0__proposal x0_52 x1_53 x2_54)))
         (forall ((x0_55 round)) (= (_1__active x0_55) (_0__active x0_55)))
         (forall ((x0_56 node) (x1_57 inst) (x2_58 round) (x3_59 value))
           (= (_1__vote x0_56 x1_57 x2_58 x3_59)
              (_0__vote x0_56 x1_57 x2_58 x3_59)))
         (forall ((x0_60 node) (x1_61 inst) (x2_62 round) (x3_63 value))
           (= (_1__decision x0_60 x1_61 x2_62 x3_63)
              (_0__decision x0_60 x1_61 x2_62 x3_63)))
         (forall ((x0_64 inst) (x1_65 round) (x2_66 value))
           (= (_1__decision_quorum x0_64 x1_65 x2_66)
              (_0__decision_quorum x0_64 x1_65 x2_66)))))) :action true))
(define-fun transition_2 () Bool (! (exists ((r_67 round) (q_68 quorum) (m_69 votemap) (im_70 inst))
  (let ((a!1 (forall ((I_72 inst))
               (let ((a!1 (exists ((N_76 node) (R_77 round) (V_78 value))
                            (and (member N_76 q_68)
                                 (not (le r_67 R_77))
                                 (_0__vote N_76 I_72 R_77 V_78)
                                 (= R_77 (maxr m_69 I_72))
                                 (= V_78 (maxv m_69 I_72)))))
                     (a!2 (forall ((N_79 node) (R_80 round) (V_81 value))
                            (let ((a!1 (and (member N_79 q_68)
                                            (not (le r_67 R_80))
                                            (_0__vote N_79 I_72 R_80 V_81))))
                              (=> a!1 (le R_80 (maxr m_69 I_72)))))))
                 (or (and (= (maxr m_69 I_72) none)
                          (forall ((N_73 node) (R_74 round) (V_75 value))
                            (let ((a!1 (and (member N_73 q_68)
                                            (not (le r_67 R_74))
                                            (_0__vote N_73 I_72 R_74 V_75))))
                              (not a!1))))
                     (and a!1 a!2)))))
        (a!2 (forall ((R_82 round))
               (= (_1__active R_82) (or (_0__active R_82) (= R_82 r_67)))))
        (a!3 (forall ((I_87 inst))
               (let ((a!1 (and (distinct (maxr m_69 I_87) none)
                               (= (maxv m_69 I_87) stop))))
                 (=> a!1 (le (maxr m_69 I_87) (maxr m_69 im_70))))))
        (a!4 (exists ((I_88 inst))
               (and (not (inst_le I_88 im_70))
                    (distinct (maxr m_69 I_88) none)
                    (not (le (maxr m_69 I_88) (maxr m_69 im_70)))))))
  (let ((a!5 (ite a!4
                  (forall ((I_89 inst) (R_90 round) (V_91 value))
                    (let ((a!1 (and (not (inst_le I_89 im_70))
                                    (not (le (maxr m_69 im_70) (maxr m_69 I_89))))))
                    (let ((a!2 (not (or (= (maxv m_69 I_89) stop) a!1))))
                    (let ((a!3 (or (_0__proposal I_89 R_90 V_91)
                                   (and (= R_90 r_67)
                                        (distinct (maxr m_69 I_89) none)
                                        (= V_91 (maxv m_69 I_89))
                                        a!2))))
                      (= (_1__proposal I_89 R_90 V_91) a!3)))))
                  (forall ((I_92 inst) (R_93 round) (V_94 value))
                    (let ((a!1 (or (and (distinct I_92 im_70)
                                        (= (maxv m_69 I_92) stop))
                                   (not (inst_le I_92 im_70)))))
                    (let ((a!2 (or (_0__proposal I_92 R_93 V_94)
                                   (and (= R_93 r_67)
                                        (distinct (maxr m_69 I_92) none)
                                        (= V_94 (maxv m_69 I_92))
                                        (not a!1)))))
                      (= (_1__proposal I_92 R_93 V_94) a!2)))))))
  (let ((a!6 (ite (forall ((I_83 inst))
                    (let ((a!1 (and (distinct (maxr m_69 I_83) none)
                                    (= (maxv m_69 I_83) stop))))
                      (not a!1)))
                  (forall ((I_84 inst) (R_85 round) (V_86 value))
                    (let ((a!1 (or (_0__proposal I_84 R_85 V_86)
                                   (and (= R_85 r_67)
                                        (distinct (maxr m_69 I_84) none)
                                        (= V_86 (maxv m_69 I_84))))))
                      (= (_1__proposal I_84 R_85 V_86) a!1)))
                  (and (distinct (maxr m_69 im_70) none)
                       (= (maxv m_69 im_70) stop)
                       a!3
                       a!5))))
    (and (distinct r_67 none)
         (not (_0__active r_67))
         (forall ((N_71 node))
           (=> (member N_71 q_68) (_0__joined_round N_71 r_67)))
         a!1
         a!2
         a!6
         (forall ((x0_95 round)) (= (_1__one_a x0_95) (_0__one_a x0_95)))
         (forall ((x0_96 node) (x1_97 round) (x2_98 votemap))
           (= (_1__one_b_msg x0_96 x1_97 x2_98)
              (_0__one_b_msg x0_96 x1_97 x2_98)))
         (forall ((x0_99 node) (x1_100 round))
           (= (_1__left_round x0_99 x1_100) (_0__left_round x0_99 x1_100)))
         (forall ((x0_101 node) (x1_102 round))
           (= (_1__joined_round x0_101 x1_102) (_0__joined_round x0_101 x1_102)))
         (forall ((x0_103 node) (x1_104 inst) (x2_105 round) (x3_106 value))
           (= (_1__vote x0_103 x1_104 x2_105 x3_106)
              (_0__vote x0_103 x1_104 x2_105 x3_106)))
         (forall ((x0_107 node) (x1_108 inst) (x2_109 round) (x3_110 value))
           (= (_1__decision x0_107 x1_108 x2_109 x3_110)
              (_0__decision x0_107 x1_108 x2_109 x3_110)))
         (forall ((x0_111 inst) (x1_112 round) (x2_113 value))
           (= (_1__decision_quorum x0_111 x1_112 x2_113)
              (_0__decision_quorum x0_111 x1_112 x2_113)))
         (forall ((x0_114 inst) (x1_115 round) (x2_116 value) (x3_117 quorum))
           (= (_1__choosable_node x0_114 x1_115 x2_116 x3_117)
              (_0__choosable_node x0_114 x1_115 x2_116 x3_117)))))))) :action true))
(define-fun transition_3 () Bool (! (exists ((r_118 round) (i_119 inst) (v_120 value))
  (let ((a!1 (forall ((V_121 value) (I_122 inst))
               (let ((a!1 (not (and (not (inst_le i_119 I_122))
                                    (_0__proposal I_122 r_118 stop))))
                     (a!2 (not (and (not (inst_le I_122 i_119))
                                    (_0__proposal I_122 r_118 V_121)
                                    (= v_120 stop))))
                     (a!3 (forall ((I_123 inst) (R_124 round) (V_125 value))
                            (= (_1__proposal I_123 R_124 V_125)
                               (or (_0__proposal I_123 R_124 V_125)
                                   (and (= I_123 i_119)
                                        (= R_124 r_118)
                                        (= V_125 v_120)))))))
                 (and (distinct r_118 none)
                      (_0__active r_118)
                      (not (_0__proposal i_119 r_118 V_121))
                      a!1
                      a!2
                      a!3)))))
    (and a!1
         (forall ((x0_126 round)) (= (_1__one_a x0_126) (_0__one_a x0_126)))
         (forall ((x0_127 node) (x1_128 round) (x2_129 votemap))
           (= (_1__one_b_msg x0_127 x1_128 x2_129)
              (_0__one_b_msg x0_127 x1_128 x2_129)))
         (forall ((x0_130 node) (x1_131 round))
           (= (_1__left_round x0_130 x1_131) (_0__left_round x0_130 x1_131)))
         (forall ((x0_132 node) (x1_133 round))
           (= (_1__joined_round x0_132 x1_133) (_0__joined_round x0_132 x1_133)))
         (forall ((x0_134 round)) (= (_1__active x0_134) (_0__active x0_134)))
         (forall ((x0_135 node) (x1_136 inst) (x2_137 round) (x3_138 value))
           (= (_1__vote x0_135 x1_136 x2_137 x3_138)
              (_0__vote x0_135 x1_136 x2_137 x3_138)))
         (forall ((x0_139 node) (x1_140 inst) (x2_141 round) (x3_142 value))
           (= (_1__decision x0_139 x1_140 x2_141 x3_142)
              (_0__decision x0_139 x1_140 x2_141 x3_142)))
         (forall ((x0_143 inst) (x1_144 round) (x2_145 value))
           (= (_1__decision_quorum x0_143 x1_144 x2_145)
              (_0__decision_quorum x0_143 x1_144 x2_145)))
         (forall ((x0_146 inst) (x1_147 round) (x2_148 value) (x3_149 quorum))
           (= (_1__choosable_node x0_146 x1_147 x2_148 x3_149)
              (_0__choosable_node x0_146 x1_147 x2_148 x3_149)))))) :action true))
(define-fun transition_4 () Bool (! (exists ((n_150 node) (v_151 value) (r_152 round) (i_153 inst))
  (let ((a!1 (forall ((N_154 node) (I_155 inst) (R_156 round) (V_157 value))
               (= (_1__vote N_154 I_155 R_156 V_157)
                  (or (_0__vote N_154 I_155 R_156 V_157)
                      (and (= N_154 n_150)
                           (= I_155 i_153)
                           (= R_156 r_152)
                           (= V_157 v_151)))))))
    (and (distinct r_152 none)
         (not (_0__left_round n_150 r_152))
         (_0__proposal i_153 r_152 v_151)
         a!1
         (forall ((x0_158 round)) (= (_1__one_a x0_158) (_0__one_a x0_158)))
         (forall ((x0_159 node) (x1_160 round) (x2_161 votemap))
           (= (_1__one_b_msg x0_159 x1_160 x2_161)
              (_0__one_b_msg x0_159 x1_160 x2_161)))
         (forall ((x0_162 node) (x1_163 round))
           (= (_1__left_round x0_162 x1_163) (_0__left_round x0_162 x1_163)))
         (forall ((x0_164 node) (x1_165 round))
           (= (_1__joined_round x0_164 x1_165) (_0__joined_round x0_164 x1_165)))
         (forall ((x0_166 inst) (x1_167 round) (x2_168 value))
           (= (_1__proposal x0_166 x1_167 x2_168)
              (_0__proposal x0_166 x1_167 x2_168)))
         (forall ((x0_169 round)) (= (_1__active x0_169) (_0__active x0_169)))
         (forall ((x0_170 node) (x1_171 inst) (x2_172 round) (x3_173 value))
           (= (_1__decision x0_170 x1_171 x2_172 x3_173)
              (_0__decision x0_170 x1_171 x2_172 x3_173)))
         (forall ((x0_174 inst) (x1_175 round) (x2_176 value))
           (= (_1__decision_quorum x0_174 x1_175 x2_176)
              (_0__decision_quorum x0_174 x1_175 x2_176)))
         (forall ((x0_177 inst) (x1_178 round) (x2_179 value) (x3_180 quorum))
           (= (_1__choosable_node x0_177 x1_178 x2_179 x3_180)
              (_0__choosable_node x0_177 x1_178 x2_179 x3_180)))))) :action true))
(define-fun transition_5 () Bool (! (exists ((n_181 node) (r_182 round) (v_183 value) (q_184 quorum) (i_185 inst))
  (let ((a!1 (forall ((N_186 node))
               (let ((a!1 (forall ((N_187 node)
                                   (I_188 inst)
                                   (R_189 round)
                                   (V_190 value))
                            (= (_1__decision N_187 I_188 R_189 V_190)
                               (or (_0__decision N_187 I_188 R_189 V_190)
                                   (and (= N_187 n_181)
                                        (= I_188 i_185)
                                        (= R_189 r_182)
                                        (= V_190 v_183))))))
                     (a!2 (forall ((I_191 inst) (R_192 round) (V_193 value))
                            (=> (not (and (= I_191 i_185)
                                          (= R_192 r_182)
                                          (= V_193 v_183)))
                                (= (_1__decision_quorum I_191 R_192 V_193)
                                   (_0__decision_quorum I_191 R_192 V_193))))))
                 (and (distinct r_182 none)
                      (=> (member N_186 q_184)
                          (_0__vote N_186 i_185 r_182 v_183))
                      a!1
                      a!2
                      (= (_1__decision_quorum i_185 r_182 v_183) q_184))))))
    (and a!1
         (forall ((x0_194 round)) (= (_1__one_a x0_194) (_0__one_a x0_194)))
         (forall ((x0_195 node) (x1_196 round) (x2_197 votemap))
           (= (_1__one_b_msg x0_195 x1_196 x2_197)
              (_0__one_b_msg x0_195 x1_196 x2_197)))
         (forall ((x0_198 node) (x1_199 round))
           (= (_1__left_round x0_198 x1_199) (_0__left_round x0_198 x1_199)))
         (forall ((x0_200 node) (x1_201 round))
           (= (_1__joined_round x0_200 x1_201) (_0__joined_round x0_200 x1_201)))
         (forall ((x0_202 inst) (x1_203 round) (x2_204 value))
           (= (_1__proposal x0_202 x1_203 x2_204)
              (_0__proposal x0_202 x1_203 x2_204)))
         (forall ((x0_205 round)) (= (_1__active x0_205) (_0__active x0_205)))
         (forall ((x0_206 node) (x1_207 inst) (x2_208 round) (x3_209 value))
           (= (_1__vote x0_206 x1_207 x2_208 x3_209)
              (_0__vote x0_206 x1_207 x2_208 x3_209)))
         (forall ((x0_210 inst) (x1_211 round) (x2_212 value) (x3_213 quorum))
           (= (_1__choosable_node x0_210 x1_211 x2_212 x3_213)
              (_0__choosable_node x0_210 x1_211 x2_212 x3_213)))))) :action true))
(define-fun safety-prop () Bool (!(let ((a!1 (forall ((N1_0 node)
                    (N2_1 node)
                    (I_2 inst)
                    (R1_3 round)
                    (R2_4 round)
                    (V1_5 value)
                    (V2_6 value))
             (=> (and (_0__decision N1_0 I_2 R1_3 V1_5)
                      (_0__decision N2_1 I_2 R2_4 V2_6))
                 (= V1_5 V2_6))))
      (a!2 (forall ((V_7 value))
             (forall ((N1_8 node)
                      (N2_9 node)
                      (I1_10 inst)
                      (I2_11 inst)
                      (R1_12 round)
                      (R2_13 round))
               (=> (and (_0__decision N1_8 I1_10 R1_12 stop)
                        (not (inst_le I2_11 I1_10)))
                   (not (_0__decision N2_9 I2_11 R2_13 V_7)))))))
  (and a!1 a!2)) :invar-property 0))
(define-fun invariant_0 () Bool (! (forall ((N1_0 node)
         (N2_1 node)
         (I_2 inst)
         (R1_3 round)
         (R2_4 round)
         (V1_5 value)
         (V2_6 value))
  (=> (and (_0__decision N1_0 I_2 R1_3 V1_5) (_0__decision N2_1 I_2 R2_4 V2_6))
      (= V1_5 V2_6))) :invar-property 0))
(define-fun invariant_1 () Bool (! (forall ((V_7 value))
  (forall ((N1_8 node)
           (N2_9 node)
           (I1_10 inst)
           (I2_11 inst)
           (R1_12 round)
           (R2_13 round))
    (=> (and (_0__decision N1_8 I1_10 R1_12 stop) (not (inst_le I2_11 I1_10)))
        (not (_0__decision N2_9 I2_11 R2_13 V_7))))) :invar-property 1))
(define-fun invariant_2 () Bool (! (forall ((I_14 inst) (R_15 round) (V_16 value))
  (=> (_0__proposal I_14 R_15 V_16) (_0__active R_15))) :invar-property 2))
(define-fun invariant_3 () Bool (! (forall ((I_17 inst) (R_18 round) (V1_19 value) (V2_20 value))
  (=> (and (_0__proposal I_17 R_18 V1_19) (_0__proposal I_17 R_18 V2_20))
      (= V1_19 V2_20))) :invar-property 3))
(define-fun invariant_4 () Bool (! (forall ((N_21 node) (I_22 inst) (R_23 round) (V_24 value))
  (=> (_0__vote N_21 I_22 R_23 V_24) (_0__proposal I_22 R_23 V_24))) :invar-property 4))
(define-fun invariant_5 () Bool (! (forall ((I_25 inst)
         (R_26 round)
         (V_27 value)
         (N_28 node)
         (M_29 node)
         (Q_30 quorum))
  (=> (and (= Q_30 (_0__decision_quorum I_25 R_26 V_27))
           (_0__decision N_28 I_25 R_26 V_27)
           (member M_29 Q_30))
      (_0__vote M_29 I_25 R_26 V_27))) :invar-property 5))
(define-fun invariant_6 () Bool (! (forall ((N_31 node)
         (R2_32 round)
         (M_33 votemap)
         (I_34 inst)
         (R1_35 round)
         (V2_36 value))
  (=> (and (_0__one_b_msg N_31 R2_32 M_33)
           (= (maxr M_33 I_34) none)
           (not (le R2_32 R1_35)))
      (not (_0__vote N_31 I_34 R1_35 V2_36)))) :invar-property 6))
(define-fun invariant_7 () Bool (! (forall ((N_37 node) (R_38 round) (M_39 votemap) (I_40 inst))
  (let ((a!1 (and (not (le R_38 (maxr M_39 I_40)))
                  (_0__vote N_37 I_40 (maxr M_39 I_40) (maxv M_39 I_40)))))
    (=> (and (_0__one_b_msg N_37 R_38 M_39) (distinct (maxr M_39 I_40) none))
        a!1))) :invar-property 7))
(define-fun invariant_8 () Bool (! (forall ((N_41 node)
         (R_42 round)
         (M_43 votemap)
         (I_44 inst)
         (ROTHER_45 round)
         (VOTHER_46 value))
  (let ((a!1 (and (_0__one_b_msg N_41 R_42 M_43)
                  (distinct (maxr M_43 I_44) none)
                  (not (le R_42 ROTHER_45))
                  (not (le ROTHER_45 (maxr M_43 I_44))))))
    (=> a!1 (not (_0__vote N_41 I_44 ROTHER_45 VOTHER_46))))) :invar-property 8))
(define-fun invariant_9 () Bool (! (forall ((I_47 inst) (V_48 value)) (not (_0__proposal I_47 none V_48))) :invar-property 9))
(define-fun invariant_10 () Bool (! (forall ((N_49 node) (I_50 inst) (V_51 value))
  (not (_0__vote N_49 I_50 none V_51))) :invar-property 10))
(define-fun invariant_11 () Bool (! (forall ((N_52 node) (I_53 inst) (V_54 value))
  (not (_0__decision N_52 I_53 none V_54))) :invar-property 11))
(define-fun invariant_12 () Bool (! (forall ((N_55 node) (M_56 votemap)) (not (_0__one_b_msg N_55 none M_56))) :invar-property 12))
(define-fun invariant_13 () Bool (! (not (_0__active none)) :invar-property 13))
(define-fun invariant_14 () Bool (! (forall ((N1_57 node)
         (Q_58 quorum)
         (R_59 round)
         (I_60 inst)
         (V_61 value)
         (N2_62 node))
  (=> (and (member N1_57 Q_58)
           (_0__left_round N1_57 R_59)
           (not (_0__vote N1_57 I_60 R_59 V_61))
           (= N2_62 (_0__choosable_node I_60 R_59 V_61 Q_58)))
      (and (member N2_62 Q_58)
           (_0__left_round N2_62 R_59)
           (not (_0__vote N2_62 I_60 R_59 V_61))))) :invar-property 14))
(define-fun invariant_15 () Bool (! (forall ((I_63 inst)
         (R1_64 round)
         (R2_65 round)
         (V_66 value)
         (Q_67 quorum)
         (N_68 node))
  (=> (and (= N_68 (_0__choosable_node I_63 R1_64 V_66 Q_67))
           (not (le R2_65 R1_64))
           (_0__active R2_65)
           (not (_0__proposal I_63 R2_65 V_66)))
      (and (member N_68 Q_67)
           (_0__left_round N_68 R1_64)
           (not (_0__vote N_68 I_63 R1_64 V_66))))) :invar-property 15))
(define-fun invariant_16 () Bool (! (forall ((I1_69 inst) (R_70 round) (I2_71 inst) (V_72 value))
  (=> (and (_0__proposal I1_69 R_70 stop) (not (inst_le I2_71 I1_69)))
      (not (_0__proposal I2_71 R_70 V_72)))) :invar-property 16))
(define-fun invariant_17 () Bool (! (forall ((N_73 node) (R2_74 round) (R1_75 round))
  (=> (and (_0__joined_round N_73 R2_74) (not (le R2_74 R1_75)))
      (_0__left_round N_73 R1_75))) :invar-property 17))
(define-fun invariant_18 () Bool (! (forall ((N_76 node) (R_77 round) (M_78 votemap))
  (=> (_0__one_b_msg N_76 R_77 M_78) (_0__joined_round N_76 R_77))) :invar-property 18))

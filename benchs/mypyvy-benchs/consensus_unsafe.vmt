(declare-sort node 0)
(declare-sort quorum 0)
(declare-sort value 0)
(declare-const _0__voting_quorum quorum)
(declare-const _1__voting_quorum quorum)
(define-fun _0__voting_quorum.sv () quorum (! _0__voting_quorum :next _1__voting_quorum))
(declare-fun member (node quorum) Bool)
(declare-fun _0__vote_request_msg (node node) Bool)
(declare-fun _1__vote_request_msg (node node) Bool)
(define-fun _0__vote_request_msg.sv ((V0 node) (V1 node)) Bool (! (_0__vote_request_msg V0 V1) :next _1__vote_request_msg))
(declare-fun _0__voted (node) Bool)
(declare-fun _1__voted (node) Bool)
(define-fun _0__voted.sv ((V0 node)) Bool (! (_0__voted V0) :next _1__voted))
(declare-fun _0__vote_msg (node node) Bool)
(declare-fun _1__vote_msg (node node) Bool)
(define-fun _0__vote_msg.sv ((V0 node) (V1 node)) Bool (! (_0__vote_msg V0 V1) :next _1__vote_msg))
(declare-fun _0__votes (node node) Bool)
(declare-fun _1__votes (node node) Bool)
(define-fun _0__votes.sv ((V0 node) (V1 node)) Bool (! (_0__votes V0 V1) :next _1__votes))
(declare-fun _0__leader (node) Bool)
(declare-fun _1__leader (node) Bool)
(define-fun _0__leader.sv ((V0 node)) Bool (! (_0__leader V0) :next _1__leader))
(declare-fun _0__decided (node value) Bool)
(declare-fun _1__decided (node value) Bool)
(define-fun _0__decided.sv ((V0 node) (V1 value)) Bool (! (_0__decided V0 V1) :next _1__decided))
(define-fun axiom_0 () Bool (! (forall ((Q1_0 quorum) (Q2_1 quorum))
  (exists ((N_2 node)) (and (member N_2 Q1_0) (member N_2 Q2_1)))) :axiom true))
(define-fun init () Bool (! (and (forall ((N1_0 node) (N2_1 node)) (not (_0__vote_request_msg N1_0 N2_1)))
     (forall ((N_2 node)) (not (_0__voted N_2)))
     (forall ((N1_3 node) (N2_4 node)) (not (_0__vote_msg N1_3 N2_4)))
     (forall ((N1_5 node) (N2_6 node)) (not (_0__votes N1_5 N2_6)))
     (forall ((N1_7 node)) (not (_0__leader N1_7)))
     (forall ((N_8 node) (V_9 value)) (not (_0__decided N_8 V_9)))) :init true))
(define-fun transition_0 () Bool (! (exists ((src_0 node) (dst_1 node))
  (let ((a!1 (forall ((N1_2 node) (N2_3 node))
               (= (_1__vote_request_msg N1_2 N2_3)
                  (or (_0__vote_request_msg N1_2 N2_3)
                      (and (= N1_2 src_0) (= N2_3 dst_1)))))))
    (and a!1
         (forall ((x0_4 node)) (= (_1__voted x0_4) (_0__voted x0_4)))
         (forall ((x0_5 node) (x1_6 node))
           (= (_1__vote_msg x0_5 x1_6) (_0__vote_msg x0_5 x1_6)))
         (forall ((x0_7 node) (x1_8 node))
           (= (_1__votes x0_7 x1_8) (_0__votes x0_7 x1_8)))
         (forall ((x0_9 node)) (= (_1__leader x0_9) (_0__leader x0_9)))
         (forall ((x0_10 node) (x1_11 value))
           (= (_1__decided x0_10 x1_11) (_0__decided x0_10 x1_11)))
         (= _1__voting_quorum _0__voting_quorum)))) :action true))
(define-fun transition_1 () Bool (! (exists ((src_12 node) (dst_13 node))
  (let ((a!1 (forall ((N1_14 node) (N2_15 node) (N_16 node))
               (let ((a!1 (= (_1__vote_msg N1_14 N2_15)
                             (or (_0__vote_msg N1_14 N2_15)
                                 (and (= N1_14 src_12) (= N2_15 dst_13)))))
                     (a!2 (=> (not (and (= N1_14 dst_13) (= N2_15 src_12)))
                              (= (_1__vote_request_msg N1_14 N2_15)
                                 (_0__vote_request_msg N1_14 N2_15)))))
                 (and (not (_0__voted src_12))
                      (_0__vote_request_msg dst_13 src_12)
                      a!1
                      (= (_1__voted N_16) (or (_0__voted N_16) (= N_16 src_12)))
                      a!2)))))
    (and a!1
         (forall ((x0_17 node) (x1_18 node))
           (= (_1__votes x0_17 x1_18) (_0__votes x0_17 x1_18)))
         (forall ((x0_19 node)) (= (_1__leader x0_19) (_0__leader x0_19)))
         (forall ((x0_20 node) (x1_21 value))
           (= (_1__decided x0_20 x1_21) (_0__decided x0_20 x1_21)))
         (= _1__voting_quorum _0__voting_quorum)))) :action true))
(define-fun transition_2 () Bool (! (exists ((n_22 node) (sender_23 node))
  (and (forall ((N1_24 node) (N2_25 node))
         (let ((a!1 (= (_1__votes N1_24 N2_25)
                       (or (_0__votes N1_24 N2_25)
                           (and (= N1_24 n_22) (= N2_25 sender_23))))))
           (and (_0__vote_msg sender_23 n_22) a!1)))
       (forall ((x0_26 node) (x1_27 node))
         (= (_1__vote_request_msg x0_26 x1_27)
            (_0__vote_request_msg x0_26 x1_27)))
       (forall ((x0_28 node)) (= (_1__voted x0_28) (_0__voted x0_28)))
       (forall ((x0_29 node) (x1_30 node))
         (= (_1__vote_msg x0_29 x1_30) (_0__vote_msg x0_29 x1_30)))
       (forall ((x0_31 node)) (= (_1__leader x0_31) (_0__leader x0_31)))
       (forall ((x0_32 node) (x1_33 value))
         (= (_1__decided x0_32 x1_33) (_0__decided x0_32 x1_33)))
       (= _1__voting_quorum _0__voting_quorum))) :action true))
(define-fun transition_3 () Bool (! (exists ((q_34 quorum) (sn_35 node))
  (and (forall ((N_36 node)) (=> (member N_36 q_34) (_0__votes sn_35 N_36)))
       (= _1__voting_quorum q_34)
       (forall ((x0_37 node) (x1_38 node))
         (= (_1__vote_request_msg x0_37 x1_38)
            (_0__vote_request_msg x0_37 x1_38)))
       (forall ((x0_39 node)) (= (_1__voted x0_39) (_0__voted x0_39)))
       (forall ((x0_40 node) (x1_41 node))
         (= (_1__vote_msg x0_40 x1_41) (_0__vote_msg x0_40 x1_41)))
       (forall ((x0_42 node) (x1_43 node))
         (= (_1__votes x0_42 x1_43) (_0__votes x0_42 x1_43)))
       (forall ((x0_44 node)) (= (_1__leader x0_44) (_0__leader x0_44)))
       (forall ((x0_45 node) (x1_46 value))
         (= (_1__decided x0_45 x1_46) (_0__decided x0_45 x1_46))))) :action true))
(define-fun transition_4 () Bool (! (exists ((n_47 node))
  (let ((a!1 (forall ((N_48 node))
               (and (=> (member N_48 _0__voting_quorum) (_0__votes n_47 N_48))
                    (= (_1__leader N_48) (or (_0__leader N_48) (= N_48 n_47)))))))
    (and a!1
         (forall ((x0_49 node) (x1_50 node))
           (= (_1__vote_request_msg x0_49 x1_50)
              (_0__vote_request_msg x0_49 x1_50)))
         (forall ((x0_51 node)) (= (_1__voted x0_51) (_0__voted x0_51)))
         (forall ((x0_52 node) (x1_53 node))
           (= (_1__vote_msg x0_52 x1_53) (_0__vote_msg x0_52 x1_53)))
         (forall ((x0_54 node) (x1_55 node))
           (= (_1__votes x0_54 x1_55) (_0__votes x0_54 x1_55)))
         (forall ((x0_56 node) (x1_57 value))
           (= (_1__decided x0_56 x1_57) (_0__decided x0_56 x1_57)))
         (= _1__voting_quorum _0__voting_quorum)))) :action true))
(define-fun transition_5 () Bool (! (exists ((n_58 node) (v_59 value))
  (let ((a!1 (forall ((V_60 value) (N_61 node))
               (let ((a!1 (= (_1__decided N_61 V_60)
                             (or (_0__decided N_61 V_60)
                                 (and (= N_61 n_58) (= V_60 v_59))))))
                 (and (_0__leader n_58) (not (_0__decided n_58 V_60)) a!1)))))
    (and a!1
         (forall ((x0_62 node) (x1_63 node))
           (= (_1__vote_request_msg x0_62 x1_63)
              (_0__vote_request_msg x0_62 x1_63)))
         (forall ((x0_64 node)) (= (_1__voted x0_64) (_0__voted x0_64)))
         (forall ((x0_65 node) (x1_66 node))
           (= (_1__vote_msg x0_65 x1_66) (_0__vote_msg x0_65 x1_66)))
         (forall ((x0_67 node) (x1_68 node))
           (= (_1__votes x0_67 x1_68) (_0__votes x0_67 x1_68)))
         (forall ((x0_69 node)) (= (_1__leader x0_69) (_0__leader x0_69)))
         (= _1__voting_quorum _0__voting_quorum)))) :action true))
(define-fun safety-prop () Bool (!(and (forall ((N1_0 node) (V1_1 value)) (not (_0__decided N1_0 V1_1)))) :invar-property 0))
(define-fun invariant_0 () Bool (! (forall ((N1_0 node) (V1_1 value)) (not (_0__decided N1_0 V1_1))) :invar-property 0))
(define-fun invariant_1 () Bool (! (forall ((N1_2 node) (N2_3 node))
  (=> (and (_0__leader N1_2) (_0__leader N2_3)) (= N1_2 N2_3))) :invar-property 1))
(define-fun invariant_2 () Bool (! (forall ((N_4 node) (N1_5 node))
  (=> (_0__votes N_4 N1_5) (_0__vote_msg N1_5 N_4))) :invar-property 2))
(define-fun invariant_3 () Bool (! (forall ((N_6 node) (N1_7 node) (N2_8 node))
  (=> (and (_0__vote_msg N_6 N1_7) (_0__vote_msg N_6 N2_8)) (= N1_7 N2_8))) :invar-property 3))
(define-fun invariant_4 () Bool (! (forall ((N_9 node) (N1_10 node)) (=> (_0__vote_msg N_9 N1_10) (_0__voted N_9))) :invar-property 4))
(define-fun invariant_5 () Bool (! (forall ((N_11 node) (N1_12 node))
  (=> (and (_0__leader N_11) (member N1_12 _0__voting_quorum))
      (_0__votes N_11 N1_12))) :invar-property 5))
(define-fun invariant_6 () Bool (! (forall ((N_13 node) (V_14 value))
  (=> (_0__decided N_13 V_14) (_0__leader N_13))) :invar-property 6))

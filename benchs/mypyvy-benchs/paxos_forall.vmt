(declare-sort node 0)
(declare-sort value 0)
(declare-sort quorum 0)
(declare-sort round 0)
(declare-const none round)
(define-fun none.sv () round (! none :rigid true))
(declare-fun le (round round) Bool)
(declare-fun member (node quorum) Bool)
(declare-fun _0__one_a (round) Bool)
(declare-fun _1__one_a (round) Bool)
(define-fun _0__one_a.sv ((V0 round)) Bool (! (_0__one_a V0) :next _1__one_a))
(declare-fun _0__one_b (node round) Bool)
(declare-fun _1__one_b (node round) Bool)
(define-fun _0__one_b.sv ((V0 node) (V1 round)) Bool (! (_0__one_b V0 V1) :next _1__one_b))
(declare-fun _0__left_round (node round) Bool)
(declare-fun _1__left_round (node round) Bool)
(define-fun _0__left_round.sv ((V0 node) (V1 round)) Bool (! (_0__left_round V0 V1) :next _1__left_round))
(declare-fun _0__proposal (round value) Bool)
(declare-fun _1__proposal (round value) Bool)
(define-fun _0__proposal.sv ((V0 round) (V1 value)) Bool (! (_0__proposal V0 V1) :next _1__proposal))
(declare-fun _0__vote (node round value) Bool)
(declare-fun _1__vote (node round value) Bool)
(define-fun _0__vote.sv ((V0 node) (V1 round) (V2 value)) Bool (! (_0__vote V0 V1 V2) :next _1__vote))
(declare-fun _0__decision (round value) Bool)
(declare-fun _1__decision (round value) Bool)
(define-fun _0__decision.sv ((V0 round) (V1 value)) Bool (! (_0__decision V0 V1) :next _1__decision))
(declare-fun _0__decision_quorum (round value) quorum)
(declare-fun _1__decision_quorum (round value) quorum)
(define-fun _0__decision_quorum.sv ((V0 round) (V1 value)) quorum (! (_0__decision_quorum V0 V1) :next _1__decision_quorum))
(declare-fun _0__choosable_node (round value quorum) node)
(declare-fun _1__choosable_node (round value quorum) node)
(define-fun _0__choosable_node.sv ((V0 round) (V1 value) (V2 quorum)) node (! (_0__choosable_node V0 V1 V2) :next _1__choosable_node))
(define-fun axiom_0 () Bool (! (forall ((X_0 round)) (le X_0 X_0)) :axiom true))
(define-fun axiom_1 () Bool (! (forall ((X_1 round) (Y_2 round) (Z_3 round))
  (=> (and (le X_1 Y_2) (le Y_2 Z_3)) (le X_1 Z_3))) :axiom true))
(define-fun axiom_2 () Bool (! (forall ((X_4 round) (Y_5 round))
  (=> (and (le X_4 Y_5) (le Y_5 X_4)) (= X_4 Y_5))) :axiom true))
(define-fun axiom_3 () Bool (! (forall ((X_6 round) (Y_7 round)) (or (le X_6 Y_7) (le Y_7 X_6))) :axiom true))
(define-fun axiom_4 () Bool (! (forall ((Q1_8 quorum) (Q2_9 quorum))
  (exists ((N_10 node)) (and (member N_10 Q1_8) (member N_10 Q2_9)))) :axiom true))
(define-fun init () Bool (! (and (forall ((R_0 round)) (not (_0__one_a R_0)))
     (forall ((N_1 node) (R_2 round)) (not (_0__one_b N_1 R_2)))
     (forall ((N_3 node) (R_4 round)) (not (_0__left_round N_3 R_4)))
     (forall ((R_5 round) (V_6 value)) (not (_0__proposal R_5 V_6)))
     (forall ((N_7 node) (R_8 round) (V_9 value)) (not (_0__vote N_7 R_8 V_9)))
     (forall ((R_10 round) (V_11 value)) (not (_0__decision R_10 V_11)))) :init true))
(define-fun transition_0 () Bool (! (exists ((r_0 round))
  (let ((a!1 (forall ((R_1 round))
               (= (_1__one_a R_1) (or (_0__one_a R_1) (= R_1 r_0))))))
    (and (distinct r_0 none)
         a!1
         (forall ((x0_2 node) (x1_3 round))
           (= (_1__one_b x0_2 x1_3) (_0__one_b x0_2 x1_3)))
         (forall ((x0_4 node) (x1_5 round))
           (= (_1__left_round x0_4 x1_5) (_0__left_round x0_4 x1_5)))
         (forall ((x0_6 round) (x1_7 value))
           (= (_1__proposal x0_6 x1_7) (_0__proposal x0_6 x1_7)))
         (forall ((x0_8 node) (x1_9 round) (x2_10 value))
           (= (_1__vote x0_8 x1_9 x2_10) (_0__vote x0_8 x1_9 x2_10)))
         (forall ((x0_11 round) (x1_12 value))
           (= (_1__decision x0_11 x1_12) (_0__decision x0_11 x1_12)))
         (forall ((x0_13 round) (x1_14 value))
           (= (_1__decision_quorum x0_13 x1_14)
              (_0__decision_quorum x0_13 x1_14)))
         (forall ((x0_15 round) (x1_16 value) (x2_17 quorum))
           (= (_1__choosable_node x0_15 x1_16 x2_17)
              (_0__choosable_node x0_15 x1_16 x2_17)))))) :action true))
(define-fun transition_1 () Bool (! (exists ((n_18 node) (r_19 round))
  (let ((a!1 (forall ((N_20 node) (R_21 round))
               (= (_1__one_b N_20 R_21)
                  (or (_0__one_b N_20 R_21) (and (= N_20 n_18) (= R_21 r_19))))))
        (a!2 (forall ((R_24 round) (V_25 value) (Q_26 quorum))
               (let ((a!1 (and (member n_18 Q_26)
                               (not (le r_19 R_24))
                               (not (_0__vote n_18 R_24 V_25)))))
                 (=> a!1 (= (_1__choosable_node R_24 V_25 Q_26) n_18)))))
        (a!3 (forall ((R_27 round) (V_28 value) (Q_29 quorum))
               (let ((a!1 (and (member n_18 Q_29)
                               (not (le r_19 R_27))
                               (not (_0__vote n_18 R_27 V_28)))))
                 (=> (not a!1)
                     (= (_1__choosable_node R_27 V_28 Q_29)
                        (_0__choosable_node R_27 V_28 Q_29)))))))
    (and (distinct r_19 none)
         (_0__one_a r_19)
         (not (_0__left_round n_18 r_19))
         a!1
         (forall ((N_22 node) (R_23 round))
           (let ((a!1 (or (_0__left_round N_22 R_23)
                          (and (= N_22 n_18) (not (le r_19 R_23))))))
             (= (_1__left_round N_22 R_23) a!1)))
         a!2
         a!3
         (forall ((x0_30 round)) (= (_1__one_a x0_30) (_0__one_a x0_30)))
         (forall ((x0_31 round) (x1_32 value))
           (= (_1__proposal x0_31 x1_32) (_0__proposal x0_31 x1_32)))
         (forall ((x0_33 node) (x1_34 round) (x2_35 value))
           (= (_1__vote x0_33 x1_34 x2_35) (_0__vote x0_33 x1_34 x2_35)))
         (forall ((x0_36 round) (x1_37 value))
           (= (_1__decision x0_36 x1_37) (_0__decision x0_36 x1_37)))
         (forall ((x0_38 round) (x1_39 value))
           (= (_1__decision_quorum x0_38 x1_39)
              (_0__decision_quorum x0_38 x1_39)))))) :action true))
(define-fun transition_2 () Bool (! (exists ((r_40 round) (q_41 quorum) (maxr_42 round) (v_43 value))
  (let ((a!1 (exists ((N_49 node))
               (and (member N_49 q_41)
                    (not (le r_40 maxr_42))
                    (_0__vote N_49 maxr_42 v_43))))
        (a!4 (forall ((R_53 round) (V_54 value))
               (= (_1__proposal R_53 V_54)
                  (or (_0__proposal R_53 V_54)
                      (and (= R_53 r_40) (= V_54 v_43)))))))
  (let ((a!2 (and (distinct maxr_42 none)
                  a!1
                  (forall ((N_50 node) (MAXR_51 round) (V_52 value))
                    (let ((a!1 (and (member N_50 q_41)
                                    (not (le r_40 MAXR_51))
                                    (_0__vote N_50 MAXR_51 V_52))))
                      (=> a!1 (le MAXR_51 maxr_42)))))))
  (let ((a!3 (or (and (= maxr_42 none)
                      (forall ((N_46 node) (MAXR_47 round) (V_48 value))
                        (let ((a!1 (and (member N_46 q_41)
                                        (not (le r_40 MAXR_47))
                                        (_0__vote N_46 MAXR_47 V_48))))
                          (not a!1))))
                 a!2)))
    (and (distinct r_40 none)
         (forall ((V_44 value)) (not (_0__proposal r_40 V_44)))
         (forall ((N_45 node)) (=> (member N_45 q_41) (_0__one_b N_45 r_40)))
         a!3
         a!4
         (forall ((x0_55 round)) (= (_1__one_a x0_55) (_0__one_a x0_55)))
         (forall ((x0_56 node) (x1_57 round))
           (= (_1__one_b x0_56 x1_57) (_0__one_b x0_56 x1_57)))
         (forall ((x0_58 node) (x1_59 round))
           (= (_1__left_round x0_58 x1_59) (_0__left_round x0_58 x1_59)))
         (forall ((x0_60 node) (x1_61 round) (x2_62 value))
           (= (_1__vote x0_60 x1_61 x2_62) (_0__vote x0_60 x1_61 x2_62)))
         (forall ((x0_63 round) (x1_64 value))
           (= (_1__decision x0_63 x1_64) (_0__decision x0_63 x1_64)))
         (forall ((x0_65 round) (x1_66 value))
           (= (_1__decision_quorum x0_65 x1_66)
              (_0__decision_quorum x0_65 x1_66)))
         (forall ((x0_67 round) (x1_68 value) (x2_69 quorum))
           (= (_1__choosable_node x0_67 x1_68 x2_69)
              (_0__choosable_node x0_67 x1_68 x2_69)))))))) :action true))
(define-fun transition_3 () Bool (! (exists ((n_70 node) (v_71 value) (r_72 round))
  (let ((a!1 (forall ((N_73 node) (R_74 round) (V_75 value))
               (= (_1__vote N_73 R_74 V_75)
                  (or (_0__vote N_73 R_74 V_75)
                      (and (= N_73 n_70) (= R_74 r_72) (= V_75 v_71)))))))
    (and (distinct r_72 none)
         (not (_0__left_round n_70 r_72))
         (_0__proposal r_72 v_71)
         a!1
         (forall ((x0_76 round)) (= (_1__one_a x0_76) (_0__one_a x0_76)))
         (forall ((x0_77 node) (x1_78 round))
           (= (_1__one_b x0_77 x1_78) (_0__one_b x0_77 x1_78)))
         (forall ((x0_79 node) (x1_80 round))
           (= (_1__left_round x0_79 x1_80) (_0__left_round x0_79 x1_80)))
         (forall ((x0_81 round) (x1_82 value))
           (= (_1__proposal x0_81 x1_82) (_0__proposal x0_81 x1_82)))
         (forall ((x0_83 round) (x1_84 value))
           (= (_1__decision x0_83 x1_84) (_0__decision x0_83 x1_84)))
         (forall ((x0_85 round) (x1_86 value))
           (= (_1__decision_quorum x0_85 x1_86)
              (_0__decision_quorum x0_85 x1_86)))
         (forall ((x0_87 round) (x1_88 value) (x2_89 quorum))
           (= (_1__choosable_node x0_87 x1_88 x2_89)
              (_0__choosable_node x0_87 x1_88 x2_89)))))) :action true))
(define-fun transition_4 () Bool (! (exists ((r_90 round) (v_91 value) (q_92 quorum))
  (let ((a!1 (forall ((R_94 round) (V_95 value))
               (= (_1__decision R_94 V_95)
                  (or (_0__decision R_94 V_95)
                      (and (= R_94 r_90) (= V_95 v_91))))))
        (a!2 (forall ((R_96 round) (V_97 value))
               (=> (not (and (= R_96 r_90) (= V_97 v_91)))
                   (= (_1__decision_quorum R_96 V_97)
                      (_0__decision_quorum R_96 V_97))))))
    (and (distinct r_90 none)
         (forall ((N_93 node))
           (=> (member N_93 q_92) (_0__vote N_93 r_90 v_91)))
         a!1
         a!2
         (= (_1__decision_quorum r_90 v_91) q_92)
         (forall ((x0_98 round)) (= (_1__one_a x0_98) (_0__one_a x0_98)))
         (forall ((x0_99 node) (x1_100 round))
           (= (_1__one_b x0_99 x1_100) (_0__one_b x0_99 x1_100)))
         (forall ((x0_101 node) (x1_102 round))
           (= (_1__left_round x0_101 x1_102) (_0__left_round x0_101 x1_102)))
         (forall ((x0_103 round) (x1_104 value))
           (= (_1__proposal x0_103 x1_104) (_0__proposal x0_103 x1_104)))
         (forall ((x0_105 node) (x1_106 round) (x2_107 value))
           (= (_1__vote x0_105 x1_106 x2_107) (_0__vote x0_105 x1_106 x2_107)))
         (forall ((x0_108 round) (x1_109 value) (x2_110 quorum))
           (= (_1__choosable_node x0_108 x1_109 x2_110)
              (_0__choosable_node x0_108 x1_109 x2_110)))))) :action true))
(define-fun safety-prop () Bool (!(let ((a!1 (forall ((R1_0 round) (V1_1 value) (R2_2 round) (V2_3 value))
             (=> (and (_0__decision R1_0 V1_1) (_0__decision R2_2 V2_3))
                 (= V1_1 V2_3)))))
  (and a!1)) :invar-property 0))
(define-fun invariant_0 () Bool (! (forall ((R1_0 round) (V1_1 value) (R2_2 round) (V2_3 value))
  (=> (and (_0__decision R1_0 V1_1) (_0__decision R2_2 V2_3)) (= V1_1 V2_3))) :invar-property 0))
(define-fun invariant_1 () Bool (! (forall ((R_4 round) (V1_5 value) (V2_6 value))
  (=> (and (_0__proposal R_4 V1_5) (_0__proposal R_4 V2_6)) (= V1_5 V2_6))) :invar-property 1))
(define-fun invariant_2 () Bool (! (forall ((N_7 node) (R_8 round) (V_9 value))
  (=> (_0__vote N_7 R_8 V_9) (_0__proposal R_8 V_9))) :invar-property 2))
(define-fun invariant_3 () Bool (! (forall ((R_10 round) (V_11 value) (N_12 node) (Q_13 quorum))
  (=> (and (_0__decision R_10 V_11)
           (member N_12 Q_13)
           (= Q_13 (_0__decision_quorum R_10 V_11)))
      (_0__vote N_12 R_10 V_11))) :invar-property 3))
(define-fun invariant_4 () Bool (! (forall ((N_14 node) (V_15 value)) (not (_0__vote N_14 none V_15))) :invar-property 4))
(define-fun invariant_5 () Bool (! (forall ((N_16 node) (R2_17 round) (R1_18 round))
  (=> (and (_0__one_b N_16 R2_17) (not (le R2_17 R1_18)))
      (_0__left_round N_16 R1_18))) :invar-property 5))
(define-fun invariant_6 () Bool (! (forall ((N1_19 node) (Q_20 quorum) (R_21 round) (V_22 value) (N2_23 node))
  (=> (and (member N1_19 Q_20)
           (_0__left_round N1_19 R_21)
           (not (_0__vote N1_19 R_21 V_22))
           (= N2_23 (_0__choosable_node R_21 V_22 Q_20)))
      (and (member N2_23 Q_20)
           (_0__left_round N2_23 R_21)
           (not (_0__vote N2_23 R_21 V_22))))) :invar-property 6))
(define-fun invariant_7 () Bool (! (forall ((N_24 node))
  (forall ((R1_25 round)
           (R2_26 round)
           (V1_27 value)
           (V2_28 value)
           (Q_29 quorum))
    (=> (and (not (le R2_26 R1_25))
             (_0__proposal R2_26 V2_28)
             (distinct V1_27 V2_28)
             (= N_24 (_0__choosable_node R1_25 V1_27 Q_29)))
        (and (member N_24 Q_29)
             (_0__left_round N_24 R1_25)
             (not (_0__vote N_24 R1_25 V1_27)))))) :invar-property 7))

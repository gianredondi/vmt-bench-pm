(declare-sort value 0)
(declare-sort core 0)
(declare-const _0__memory value)
(declare-const _1__memory value)
(define-fun _0__memory.sv () value (! _0__memory :next _1__memory))
(declare-fun _0__modified (core) Bool)
(declare-fun _1__modified (core) Bool)
(define-fun _0__modified.sv ((V0 core)) Bool (! (_0__modified V0) :next _1__modified))
(declare-fun _0__exclusive (core) Bool)
(declare-fun _1__exclusive (core) Bool)
(define-fun _0__exclusive.sv ((V0 core)) Bool (! (_0__exclusive V0) :next _1__exclusive))
(declare-fun _0__shared (core) Bool)
(declare-fun _1__shared (core) Bool)
(define-fun _0__shared.sv ((V0 core)) Bool (! (_0__shared V0) :next _1__shared))
(declare-fun _0__invalid (core) Bool)
(declare-fun _1__invalid (core) Bool)
(define-fun _0__invalid.sv ((V0 core)) Bool (! (_0__invalid V0) :next _1__invalid))
(declare-fun _0__proc_read (core) Bool)
(declare-fun _1__proc_read (core) Bool)
(define-fun _0__proc_read.sv ((V0 core)) Bool (! (_0__proc_read V0) :next _1__proc_read))
(declare-fun _0__proc_write (core value) Bool)
(declare-fun _1__proc_write (core value) Bool)
(define-fun _0__proc_write.sv ((V0 core) (V1 value)) Bool (! (_0__proc_write V0 V1) :next _1__proc_write))
(declare-fun _0__bus_in_use () Bool)
(declare-fun _1__bus_in_use () Bool)
(define-fun _0__bus_in_use.sv () Bool (! _0__bus_in_use :next _1__bus_in_use))
(declare-fun _0__bus_read (core) Bool)
(declare-fun _1__bus_read (core) Bool)
(define-fun _0__bus_read.sv ((V0 core)) Bool (! (_0__bus_read V0) :next _1__bus_read))
(declare-fun _0__bus_read_for_ownership (core) Bool)
(declare-fun _1__bus_read_for_ownership (core) Bool)
(define-fun _0__bus_read_for_ownership.sv ((V0 core)) Bool (! (_0__bus_read_for_ownership V0) :next _1__bus_read_for_ownership))
(declare-fun _0__bus_upgrade (core) Bool)
(declare-fun _1__bus_upgrade (core) Bool)
(define-fun _0__bus_upgrade.sv ((V0 core)) Bool (! (_0__bus_upgrade V0) :next _1__bus_upgrade))
(declare-fun _0__bus_transfer (value) Bool)
(declare-fun _1__bus_transfer (value) Bool)
(define-fun _0__bus_transfer.sv ((V0 value)) Bool (! (_0__bus_transfer V0) :next _1__bus_transfer))
(declare-fun _0__cache (core) value)
(declare-fun _1__cache (core) value)
(define-fun _0__cache.sv ((V0 core)) value (! (_0__cache V0) :next _1__cache))
(define-fun init () Bool (! (and (forall ((C_0 core)) (not (_0__modified C_0)))
     (forall ((C_1 core)) (not (_0__exclusive C_1)))
     (forall ((C_2 core)) (not (_0__shared C_2)))
     (forall ((C_3 core)) (_0__invalid C_3))
     (forall ((C_4 core)) (not (_0__proc_read C_4)))
     (forall ((C_5 core) (V_6 value)) (not (_0__proc_write C_5 V_6)))
     (not _0__bus_in_use)
     (forall ((C_7 core)) (not (_0__bus_read C_7)))
     (forall ((C_8 core)) (not (_0__bus_read_for_ownership C_8)))
     (forall ((C_9 core)) (not (_0__bus_upgrade C_9)))
     (forall ((V_10 value)) (not (_0__bus_transfer V_10)))) :init true))
(define-fun transition_0 () Bool (! (exists ((c_0 core))
  (let ((a!1 (forall ((C_1 core))
               (= (_1__proc_read C_1) (or (_0__proc_read C_1) (= C_1 c_0)))))
        (a!2 (forall ((C_2 core))
               (= (_1__bus_read C_2) (or (_0__bus_read C_2) (distinct C_2 c_0))))))
    (and (_0__invalid c_0)
         (not _0__bus_in_use)
         _1__bus_in_use
         a!1
         a!2
         (forall ((x0_3 core)) (= (_1__modified x0_3) (_0__modified x0_3)))
         (forall ((x0_4 core)) (= (_1__exclusive x0_4) (_0__exclusive x0_4)))
         (forall ((x0_5 core)) (= (_1__shared x0_5) (_0__shared x0_5)))
         (forall ((x0_6 core)) (= (_1__invalid x0_6) (_0__invalid x0_6)))
         (forall ((x0_7 core) (x1_8 value))
           (= (_1__proc_write x0_7 x1_8) (_0__proc_write x0_7 x1_8)))
         (forall ((x0_9 core))
           (= (_1__bus_read_for_ownership x0_9)
              (_0__bus_read_for_ownership x0_9)))
         (forall ((x0_10 core))
           (= (_1__bus_upgrade x0_10) (_0__bus_upgrade x0_10)))
         (forall ((x0_11 value))
           (= (_1__bus_transfer x0_11) (_0__bus_transfer x0_11)))
         (= _1__memory _0__memory)
         (forall ((x0_12 core)) (= (_1__cache x0_12) (_0__cache x0_12)))))) :action true))
(define-fun transition_1 () Bool (! (exists ((c_13 core))
  (let ((a!1 (forall ((C_14 core))
               (= (_1__bus_read C_14)
                  (and (_0__bus_read C_14) (not (= C_14 c_13)))))))
    (and (_0__bus_read c_13)
         (_0__invalid c_13)
         a!1
         (forall ((x0_15 core)) (= (_1__modified x0_15) (_0__modified x0_15)))
         (forall ((x0_16 core)) (= (_1__exclusive x0_16) (_0__exclusive x0_16)))
         (forall ((x0_17 core)) (= (_1__shared x0_17) (_0__shared x0_17)))
         (forall ((x0_18 core)) (= (_1__invalid x0_18) (_0__invalid x0_18)))
         (forall ((x0_19 core)) (= (_1__proc_read x0_19) (_0__proc_read x0_19)))
         (forall ((x0_20 core) (x1_21 value))
           (= (_1__proc_write x0_20 x1_21) (_0__proc_write x0_20 x1_21)))
         (= _1__bus_in_use _0__bus_in_use)
         (forall ((x0_22 core))
           (= (_1__bus_read_for_ownership x0_22)
              (_0__bus_read_for_ownership x0_22)))
         (forall ((x0_23 core))
           (= (_1__bus_upgrade x0_23) (_0__bus_upgrade x0_23)))
         (forall ((x0_24 value))
           (= (_1__bus_transfer x0_24) (_0__bus_transfer x0_24)))
         (= _1__memory _0__memory)
         (forall ((x0_25 core)) (= (_1__cache x0_25) (_0__cache x0_25)))))) :action true))
(define-fun transition_2 () Bool (! (exists ((c_26 core) (v_27 value))
  (let ((a!1 (forall ((C_28 core))
               (= (_1__bus_read C_28)
                  (and (_0__bus_read C_28) (not (= C_28 c_26))))))
        (a!2 (forall ((C_29 core))
               (= (_1__shared C_29) (or (_0__shared C_29) (= C_29 c_26)))))
        (a!3 (forall ((C_30 core))
               (= (_1__modified C_30)
                  (and (_0__modified C_30) (not (= C_30 c_26))))))
        (a!4 (forall ((C_31 core))
               (= (_1__exclusive C_31)
                  (and (_0__exclusive C_31) (not (= C_31 c_26))))))
        (a!5 (forall ((V_32 value))
               (= (_1__bus_transfer V_32)
                  (or (_0__bus_transfer V_32) (= V_32 v_27))))))
    (and (_0__bus_read c_26)
         (not (_0__invalid c_26))
         (= (_0__cache c_26) v_27)
         a!1
         a!2
         a!3
         a!4
         (=> (_0__modified c_26) (= _1__memory v_27))
         (=> (not (_0__modified c_26)) (= _1__memory _0__memory))
         a!5
         (forall ((x0_33 core)) (= (_1__invalid x0_33) (_0__invalid x0_33)))
         (forall ((x0_34 core)) (= (_1__proc_read x0_34) (_0__proc_read x0_34)))
         (forall ((x0_35 core) (x1_36 value))
           (= (_1__proc_write x0_35 x1_36) (_0__proc_write x0_35 x1_36)))
         (= _1__bus_in_use _0__bus_in_use)
         (forall ((x0_37 core))
           (= (_1__bus_read_for_ownership x0_37)
              (_0__bus_read_for_ownership x0_37)))
         (forall ((x0_38 core))
           (= (_1__bus_upgrade x0_38) (_0__bus_upgrade x0_38)))
         (forall ((x0_39 core)) (= (_1__cache x0_39) (_0__cache x0_39)))))) :action true))
(define-fun transition_3 () Bool (! (exists ((c_40 core) (v_41 value))
  (let ((a!1 (forall ((C_44 core))
               (= (_1__invalid C_44)
                  (and (_0__invalid C_44) (not (= C_44 c_40))))))
        (a!2 (forall ((C_45 core))
               (= (_1__shared C_45) (or (_0__shared C_45) (= C_45 c_40)))))
        (a!3 (forall ((C_46 core))
               (=> (not (= C_46 c_40)) (= (_1__cache C_46) (_0__cache C_46)))))
        (a!4 (forall ((C_47 core))
               (= (_1__proc_read C_47)
                  (and (_0__proc_read C_47) (not (= C_47 c_40)))))))
    (and (_0__invalid c_40)
         (_0__proc_read c_40)
         (_0__bus_transfer v_41)
         (forall ((C_42 core)) (not (_0__bus_read C_42)))
         (forall ((V_43 value)) (not (_1__bus_transfer V_43)))
         a!1
         a!2
         a!3
         (= (_1__cache c_40) v_41)
         (not _1__bus_in_use)
         a!4
         (forall ((x0_48 core)) (= (_1__modified x0_48) (_0__modified x0_48)))
         (forall ((x0_49 core)) (= (_1__exclusive x0_49) (_0__exclusive x0_49)))
         (forall ((x0_50 core) (x1_51 value))
           (= (_1__proc_write x0_50 x1_51) (_0__proc_write x0_50 x1_51)))
         (forall ((x0_52 core)) (= (_1__bus_read x0_52) (_0__bus_read x0_52)))
         (forall ((x0_53 core))
           (= (_1__bus_read_for_ownership x0_53)
              (_0__bus_read_for_ownership x0_53)))
         (forall ((x0_54 core))
           (= (_1__bus_upgrade x0_54) (_0__bus_upgrade x0_54)))
         (= _1__memory _0__memory)))) :action true))
(define-fun transition_4 () Bool (! (exists ((c_55 core) (v_56 value))
  (let ((a!1 (forall ((C_59 core))
               (= (_1__invalid C_59)
                  (and (_0__invalid C_59) (not (= C_59 c_55))))))
        (a!2 (forall ((C_60 core))
               (= (_1__exclusive C_60) (or (_0__exclusive C_60) (= C_60 c_55)))))
        (a!3 (forall ((C_61 core))
               (=> (not (= C_61 c_55)) (= (_1__cache C_61) (_0__cache C_61)))))
        (a!4 (forall ((C_62 core))
               (= (_1__proc_read C_62)
                  (and (_0__proc_read C_62) (not (= C_62 c_55)))))))
    (and (_0__invalid c_55)
         (_0__proc_read c_55)
         (forall ((V_57 value)) (not (_0__bus_transfer V_57)))
         (forall ((C_58 core)) (not (_0__bus_read C_58)))
         (= _0__memory v_56)
         a!1
         a!2
         a!3
         (= (_1__cache c_55) v_56)
         (not _1__bus_in_use)
         a!4
         (forall ((x0_63 core)) (= (_1__modified x0_63) (_0__modified x0_63)))
         (forall ((x0_64 core)) (= (_1__shared x0_64) (_0__shared x0_64)))
         (forall ((x0_65 core) (x1_66 value))
           (= (_1__proc_write x0_65 x1_66) (_0__proc_write x0_65 x1_66)))
         (forall ((x0_67 core)) (= (_1__bus_read x0_67) (_0__bus_read x0_67)))
         (forall ((x0_68 core))
           (= (_1__bus_read_for_ownership x0_68)
              (_0__bus_read_for_ownership x0_68)))
         (forall ((x0_69 core))
           (= (_1__bus_upgrade x0_69) (_0__bus_upgrade x0_69)))
         (forall ((x0_70 value))
           (= (_1__bus_transfer x0_70) (_0__bus_transfer x0_70)))
         (= _1__memory _0__memory)))) :action true))
(define-fun transition_5 () Bool (! (exists ((c_71 core) (v_72 value))
  (let ((a!1 (forall ((C_73 core) (V_74 value))
               (= (_1__proc_write C_73 V_74)
                  (or (_0__proc_write C_73 V_74)
                      (and (= C_73 c_71) (= V_74 v_72))))))
        (a!2 (forall ((C_75 core))
               (= (_1__bus_read_for_ownership C_75)
                  (or (_0__bus_read_for_ownership C_75) (distinct C_75 c_71))))))
    (and (_0__invalid c_71)
         (not _0__bus_in_use)
         _1__bus_in_use
         a!1
         a!2
         (forall ((x0_76 core)) (= (_1__modified x0_76) (_0__modified x0_76)))
         (forall ((x0_77 core)) (= (_1__exclusive x0_77) (_0__exclusive x0_77)))
         (forall ((x0_78 core)) (= (_1__shared x0_78) (_0__shared x0_78)))
         (forall ((x0_79 core)) (= (_1__invalid x0_79) (_0__invalid x0_79)))
         (forall ((x0_80 core)) (= (_1__proc_read x0_80) (_0__proc_read x0_80)))
         (forall ((x0_81 core)) (= (_1__bus_read x0_81) (_0__bus_read x0_81)))
         (forall ((x0_82 core))
           (= (_1__bus_upgrade x0_82) (_0__bus_upgrade x0_82)))
         (forall ((x0_83 value))
           (= (_1__bus_transfer x0_83) (_0__bus_transfer x0_83)))
         (= _1__memory _0__memory)
         (forall ((x0_84 core)) (= (_1__cache x0_84) (_0__cache x0_84)))))) :action true))
(define-fun transition_6 () Bool (! (exists ((c_85 core))
  (let ((a!1 (forall ((C_86 core))
               (= (_1__bus_read_for_ownership C_86)
                  (and (_0__bus_read_for_ownership C_86) (not (= C_86 c_85)))))))
    (and (_0__bus_read_for_ownership c_85)
         (_0__invalid c_85)
         a!1
         (forall ((x0_87 core)) (= (_1__modified x0_87) (_0__modified x0_87)))
         (forall ((x0_88 core)) (= (_1__exclusive x0_88) (_0__exclusive x0_88)))
         (forall ((x0_89 core)) (= (_1__shared x0_89) (_0__shared x0_89)))
         (forall ((x0_90 core)) (= (_1__invalid x0_90) (_0__invalid x0_90)))
         (forall ((x0_91 core)) (= (_1__proc_read x0_91) (_0__proc_read x0_91)))
         (forall ((x0_92 core) (x1_93 value))
           (= (_1__proc_write x0_92 x1_93) (_0__proc_write x0_92 x1_93)))
         (= _1__bus_in_use _0__bus_in_use)
         (forall ((x0_94 core)) (= (_1__bus_read x0_94) (_0__bus_read x0_94)))
         (forall ((x0_95 core))
           (= (_1__bus_upgrade x0_95) (_0__bus_upgrade x0_95)))
         (forall ((x0_96 value))
           (= (_1__bus_transfer x0_96) (_0__bus_transfer x0_96)))
         (= _1__memory _0__memory)
         (forall ((x0_97 core)) (= (_1__cache x0_97) (_0__cache x0_97)))))) :action true))
(define-fun transition_7 () Bool (! (exists ((c_98 core) (v_99 value))
  (let ((a!1 (forall ((C_100 core))
               (= (_1__bus_read_for_ownership C_100)
                  (and (_0__bus_read_for_ownership C_100) (not (= C_100 c_98))))))
        (a!2 (forall ((C_101 core))
               (= (_1__invalid C_101) (or (_0__invalid C_101) (= C_101 c_98)))))
        (a!3 (forall ((C_102 core))
               (= (_1__shared C_102)
                  (and (_0__shared C_102) (not (= C_102 c_98))))))
        (a!4 (forall ((C_103 core))
               (= (_1__modified C_103)
                  (and (_0__modified C_103) (not (= C_103 c_98))))))
        (a!5 (forall ((C_104 core))
               (= (_1__exclusive C_104)
                  (and (_0__exclusive C_104) (not (= C_104 c_98))))))
        (a!6 (forall ((V_105 value))
               (= (_1__bus_transfer V_105)
                  (or (_0__bus_transfer V_105) (= V_105 v_99))))))
    (and (_0__bus_read_for_ownership c_98)
         (not (_0__invalid c_98))
         (= (_0__cache c_98) v_99)
         a!1
         a!2
         a!3
         a!4
         a!5
         (=> (_0__modified c_98) (= _1__memory v_99))
         (=> (not (_0__modified c_98)) (= _1__memory _0__memory))
         a!6
         (forall ((x0_106 core))
           (= (_1__proc_read x0_106) (_0__proc_read x0_106)))
         (forall ((x0_107 core) (x1_108 value))
           (= (_1__proc_write x0_107 x1_108) (_0__proc_write x0_107 x1_108)))
         (= _1__bus_in_use _0__bus_in_use)
         (forall ((x0_109 core))
           (= (_1__bus_read x0_109) (_0__bus_read x0_109)))
         (forall ((x0_110 core))
           (= (_1__bus_upgrade x0_110) (_0__bus_upgrade x0_110)))
         (forall ((x0_111 core)) (= (_1__cache x0_111) (_0__cache x0_111)))))) :action true))
(define-fun transition_8 () Bool (! (exists ((c_112 core) (v_113 value))
  (let ((a!1 (forall ((C_116 core))
               (= (_1__invalid C_116)
                  (and (_0__invalid C_116) (not (= C_116 c_112))))))
        (a!2 (forall ((C_117 core))
               (= (_1__modified C_117)
                  (or (_0__modified C_117) (= C_117 c_112)))))
        (a!3 (forall ((C_118 core))
               (=> (not (= C_118 c_112))
                   (= (_1__cache C_118) (_0__cache C_118))))))
    (and (_0__invalid c_112)
         (_0__proc_write c_112 v_113)
         (forall ((C_114 core)) (not (_0__bus_read_for_ownership C_114)))
         (forall ((V_115 value)) (not (_1__bus_transfer V_115)))
         a!1
         a!2
         a!3
         (= (_1__cache c_112) v_113)
         (not _1__bus_in_use)
         (forall ((C_119 core) (V_120 value))
           (let ((a!1 (and (_0__proc_write C_119 V_120)
                           (not (and (= C_119 c_112) (= V_120 v_113))))))
             (= (_1__proc_write C_119 V_120) a!1)))
         (forall ((x0_121 core))
           (= (_1__exclusive x0_121) (_0__exclusive x0_121)))
         (forall ((x0_122 core)) (= (_1__shared x0_122) (_0__shared x0_122)))
         (forall ((x0_123 core))
           (= (_1__proc_read x0_123) (_0__proc_read x0_123)))
         (forall ((x0_124 core))
           (= (_1__bus_read x0_124) (_0__bus_read x0_124)))
         (forall ((x0_125 core))
           (= (_1__bus_read_for_ownership x0_125)
              (_0__bus_read_for_ownership x0_125)))
         (forall ((x0_126 core))
           (= (_1__bus_upgrade x0_126) (_0__bus_upgrade x0_126)))
         (= _1__memory _0__memory)))) :action true))
(define-fun transition_9 () Bool (! (exists ((c_127 core) (v_128 value))
  (let ((a!1 (forall ((C_129 core))
               (= (_1__exclusive C_129)
                  (and (_0__exclusive C_129) (not (= C_129 c_127))))))
        (a!2 (forall ((C_130 core))
               (= (_1__modified C_130)
                  (or (_0__modified C_130) (= C_130 c_127)))))
        (a!3 (forall ((C_131 core))
               (=> (not (= C_131 c_127))
                   (= (_1__cache C_131) (_0__cache C_131))))))
    (and (_0__exclusive c_127)
         (not _0__bus_in_use)
         a!1
         a!2
         a!3
         (= (_1__cache c_127) v_128)
         (forall ((x0_132 core)) (= (_1__shared x0_132) (_0__shared x0_132)))
         (forall ((x0_133 core)) (= (_1__invalid x0_133) (_0__invalid x0_133)))
         (forall ((x0_134 core))
           (= (_1__proc_read x0_134) (_0__proc_read x0_134)))
         (forall ((x0_135 core) (x1_136 value))
           (= (_1__proc_write x0_135 x1_136) (_0__proc_write x0_135 x1_136)))
         (= _1__bus_in_use _0__bus_in_use)
         (forall ((x0_137 core))
           (= (_1__bus_read x0_137) (_0__bus_read x0_137)))
         (forall ((x0_138 core))
           (= (_1__bus_read_for_ownership x0_138)
              (_0__bus_read_for_ownership x0_138)))
         (forall ((x0_139 core))
           (= (_1__bus_upgrade x0_139) (_0__bus_upgrade x0_139)))
         (forall ((x0_140 value))
           (= (_1__bus_transfer x0_140) (_0__bus_transfer x0_140)))
         (= _1__memory _0__memory)))) :action true))
(define-fun transition_10 () Bool (! (exists ((c_141 core) (v_142 value))
  (let ((a!1 (forall ((C_143 core) (V_144 value))
               (= (_1__proc_write C_143 V_144)
                  (or (_0__proc_write C_143 V_144)
                      (and (= C_143 c_141) (= V_144 v_142))))))
        (a!2 (forall ((C_145 core))
               (= (_1__bus_upgrade C_145)
                  (or (_0__bus_upgrade C_145) (distinct C_145 c_141))))))
    (and (_0__shared c_141)
         (not _0__bus_in_use)
         _1__bus_in_use
         a!1
         a!2
         (forall ((x0_146 core))
           (= (_1__modified x0_146) (_0__modified x0_146)))
         (forall ((x0_147 core))
           (= (_1__exclusive x0_147) (_0__exclusive x0_147)))
         (forall ((x0_148 core)) (= (_1__shared x0_148) (_0__shared x0_148)))
         (forall ((x0_149 core)) (= (_1__invalid x0_149) (_0__invalid x0_149)))
         (forall ((x0_150 core))
           (= (_1__proc_read x0_150) (_0__proc_read x0_150)))
         (forall ((x0_151 core))
           (= (_1__bus_read x0_151) (_0__bus_read x0_151)))
         (forall ((x0_152 core))
           (= (_1__bus_read_for_ownership x0_152)
              (_0__bus_read_for_ownership x0_152)))
         (forall ((x0_153 value))
           (= (_1__bus_transfer x0_153) (_0__bus_transfer x0_153)))
         (= _1__memory _0__memory)
         (forall ((x0_154 core)) (= (_1__cache x0_154) (_0__cache x0_154)))))) :action true))
(define-fun transition_11 () Bool (! (exists ((c_155 core))
  (let ((a!1 (forall ((C_156 core))
               (= (_1__bus_upgrade C_156)
                  (and (_0__bus_upgrade C_156) (not (= C_156 c_155))))))
        (a!2 (forall ((C_157 core))
               (= (_1__invalid C_157) (or (_0__invalid C_157) (= C_157 c_155)))))
        (a!3 (forall ((C_158 core))
               (= (_1__shared C_158)
                  (and (_0__shared C_158) (not (= C_158 c_155)))))))
    (and (_0__bus_upgrade c_155)
         a!1
         a!2
         a!3
         (forall ((x0_159 core))
           (= (_1__modified x0_159) (_0__modified x0_159)))
         (forall ((x0_160 core))
           (= (_1__exclusive x0_160) (_0__exclusive x0_160)))
         (forall ((x0_161 core))
           (= (_1__proc_read x0_161) (_0__proc_read x0_161)))
         (forall ((x0_162 core) (x1_163 value))
           (= (_1__proc_write x0_162 x1_163) (_0__proc_write x0_162 x1_163)))
         (= _1__bus_in_use _0__bus_in_use)
         (forall ((x0_164 core))
           (= (_1__bus_read x0_164) (_0__bus_read x0_164)))
         (forall ((x0_165 core))
           (= (_1__bus_read_for_ownership x0_165)
              (_0__bus_read_for_ownership x0_165)))
         (forall ((x0_166 value))
           (= (_1__bus_transfer x0_166) (_0__bus_transfer x0_166)))
         (= _1__memory _0__memory)
         (forall ((x0_167 core)) (= (_1__cache x0_167) (_0__cache x0_167)))))) :action true))
(define-fun transition_12 () Bool (! (exists ((c_168 core) (v_169 value))
  (let ((a!1 (forall ((C_171 core))
               (= (_1__shared C_171)
                  (and (_0__shared C_171) (not (= C_171 c_168))))))
        (a!2 (forall ((C_172 core))
               (= (_1__modified C_172)
                  (or (_0__modified C_172) (= C_172 c_168)))))
        (a!3 (forall ((C_173 core))
               (=> (not (= C_173 c_168))
                   (= (_1__cache C_173) (_0__cache C_173))))))
    (and (_0__shared c_168)
         (_0__proc_write c_168 v_169)
         (forall ((C_170 core)) (not (_0__bus_upgrade C_170)))
         a!1
         a!2
         a!3
         (= (_1__cache c_168) v_169)
         (forall ((C_174 core) (V_175 value))
           (let ((a!1 (and (_0__proc_write C_174 V_175)
                           (not (and (= C_174 c_168) (= V_175 v_169))))))
             (= (_1__proc_write C_174 V_175) a!1)))
         (not _1__bus_in_use)
         (forall ((x0_176 core))
           (= (_1__exclusive x0_176) (_0__exclusive x0_176)))
         (forall ((x0_177 core)) (= (_1__invalid x0_177) (_0__invalid x0_177)))
         (forall ((x0_178 core))
           (= (_1__proc_read x0_178) (_0__proc_read x0_178)))
         (forall ((x0_179 core))
           (= (_1__bus_read x0_179) (_0__bus_read x0_179)))
         (forall ((x0_180 core))
           (= (_1__bus_read_for_ownership x0_180)
              (_0__bus_read_for_ownership x0_180)))
         (forall ((x0_181 core))
           (= (_1__bus_upgrade x0_181) (_0__bus_upgrade x0_181)))
         (forall ((x0_182 value))
           (= (_1__bus_transfer x0_182) (_0__bus_transfer x0_182)))
         (= _1__memory _0__memory)))) :action true))
(define-fun transition_13 () Bool (! (exists ((c_183 core))
  (let ((a!1 (forall ((C_184 core))
               (= (_1__modified C_184)
                  (and (_0__modified C_184) (not (= C_184 c_183))))))
        (a!2 (forall ((C_185 core))
               (= (_1__invalid C_185) (or (_0__invalid C_185) (= C_185 c_183))))))
    (and (not _0__bus_in_use)
         (_0__modified c_183)
         (= _1__memory (_0__cache c_183))
         a!1
         a!2
         (forall ((x0_186 core))
           (= (_1__exclusive x0_186) (_0__exclusive x0_186)))
         (forall ((x0_187 core)) (= (_1__shared x0_187) (_0__shared x0_187)))
         (forall ((x0_188 core))
           (= (_1__proc_read x0_188) (_0__proc_read x0_188)))
         (forall ((x0_189 core) (x1_190 value))
           (= (_1__proc_write x0_189 x1_190) (_0__proc_write x0_189 x1_190)))
         (= _1__bus_in_use _0__bus_in_use)
         (forall ((x0_191 core))
           (= (_1__bus_read x0_191) (_0__bus_read x0_191)))
         (forall ((x0_192 core))
           (= (_1__bus_read_for_ownership x0_192)
              (_0__bus_read_for_ownership x0_192)))
         (forall ((x0_193 core))
           (= (_1__bus_upgrade x0_193) (_0__bus_upgrade x0_193)))
         (forall ((x0_194 value))
           (= (_1__bus_transfer x0_194) (_0__bus_transfer x0_194)))
         (forall ((x0_195 core)) (= (_1__cache x0_195) (_0__cache x0_195)))))) :action true))
(define-fun transition_14 () Bool (! (exists ((c_196 core))
  (let ((a!1 (forall ((C_197 core))
               (= (_1__exclusive C_197)
                  (and (_0__exclusive C_197) (not (= C_197 c_196))))))
        (a!2 (forall ((C_198 core))
               (= (_1__shared C_198)
                  (and (_0__shared C_198) (not (= C_198 c_196))))))
        (a!3 (forall ((C_199 core))
               (= (_1__invalid C_199) (or (_0__invalid C_199) (= C_199 c_196))))))
    (and (not _0__bus_in_use)
         (or (_0__exclusive c_196) (_0__shared c_196))
         a!1
         a!2
         a!3
         (forall ((x0_200 core))
           (= (_1__modified x0_200) (_0__modified x0_200)))
         (forall ((x0_201 core))
           (= (_1__proc_read x0_201) (_0__proc_read x0_201)))
         (forall ((x0_202 core) (x1_203 value))
           (= (_1__proc_write x0_202 x1_203) (_0__proc_write x0_202 x1_203)))
         (= _1__bus_in_use _0__bus_in_use)
         (forall ((x0_204 core))
           (= (_1__bus_read x0_204) (_0__bus_read x0_204)))
         (forall ((x0_205 core))
           (= (_1__bus_read_for_ownership x0_205)
              (_0__bus_read_for_ownership x0_205)))
         (forall ((x0_206 core))
           (= (_1__bus_upgrade x0_206) (_0__bus_upgrade x0_206)))
         (forall ((x0_207 value))
           (= (_1__bus_transfer x0_207) (_0__bus_transfer x0_207)))
         (= _1__memory _0__memory)
         (forall ((x0_208 core)) (= (_1__cache x0_208) (_0__cache x0_208)))))) :action true))
(define-fun safety-prop () Bool (!(let ((a!1 (forall ((C_0 core))
             (=> (and (not (_0__invalid C_0)) (not (_0__modified C_0)))
                 (= (_0__cache C_0) _0__memory)))))
  (and a!1)) :invar-property 0))
(define-fun invariant_0 () Bool (! (forall ((C_0 core))
  (=> (and (not (_0__invalid C_0)) (not (_0__modified C_0)))
      (= (_0__cache C_0) _0__memory))) :invar-property 0))
(define-fun invariant_1 () Bool (! (forall ((C_1 core)) (not (and (_0__invalid C_1) (_0__modified C_1)))) :invar-property 1))
(define-fun invariant_2 () Bool (! (forall ((C_2 core)) (not (and (_0__invalid C_2) (_0__exclusive C_2)))) :invar-property 2))
(define-fun invariant_3 () Bool (! (forall ((C_3 core)) (not (and (_0__invalid C_3) (_0__shared C_3)))) :invar-property 3))
(define-fun invariant_4 () Bool (! (forall ((C_4 core)) (not (and (_0__modified C_4) (_0__exclusive C_4)))) :invar-property 4))
(define-fun invariant_5 () Bool (! (forall ((C_5 core)) (not (and (_0__modified C_5) (_0__shared C_5)))) :invar-property 5))
(define-fun invariant_6 () Bool (! (forall ((C_6 core)) (not (and (_0__exclusive C_6) (_0__shared C_6)))) :invar-property 6))
(define-fun invariant_7 () Bool (! (forall ((C1_7 core) (C2_8 core))
  (=> (and (_0__exclusive C1_7) (distinct C1_7 C2_8)) (_0__invalid C2_8))) :invar-property 7))
(define-fun invariant_8 () Bool (! (forall ((C1_9 core) (C2_10 core))
  (=> (and (_0__modified C1_9) (distinct C1_9 C2_10)) (_0__invalid C2_10))) :invar-property 8))
(define-fun invariant_9 () Bool (! (forall ((C_11 core)) (=> (_0__bus_read C_11) _0__bus_in_use)) :invar-property 9))
(define-fun invariant_10 () Bool (! (forall ((C_12 core)) (=> (_0__bus_read_for_ownership C_12) _0__bus_in_use)) :invar-property 10))
(define-fun invariant_11 () Bool (! (forall ((C_13 core)) (=> (_0__bus_upgrade C_13) _0__bus_in_use)) :invar-property 11))
(define-fun invariant_12 () Bool (! (forall ((V_14 value)) (=> (_0__bus_transfer V_14) _0__bus_in_use)) :invar-property 12))
(define-fun invariant_13 () Bool (! (forall ((C_15 core)) (=> (_0__proc_read C_15) _0__bus_in_use)) :invar-property 13))
(define-fun invariant_14 () Bool (! (forall ((C_16 core) (V_17 value))
  (=> (_0__proc_write C_16 V_17) _0__bus_in_use)) :invar-property 14))
(define-fun invariant_15 () Bool (! (forall ((C1_18 core) (V_19 value) (C2_20 core))
  (=> (and (_0__proc_write C1_18 V_19) (_0__bus_read_for_ownership C2_20))
      (_0__invalid C1_18))) :invar-property 15))
(define-fun invariant_16 () Bool (! (forall ((C1_21 core) (V_22 value) (C2_23 core))
  (=> (and (_0__proc_write C1_21 V_22) (_0__bus_upgrade C2_23))
      (_0__shared C1_21))) :invar-property 16))
(define-fun invariant_17 () Bool (! (forall ((C_24 core) (V_25 value))
  (not (and (_0__proc_write C_24 V_25) (_0__bus_upgrade C_24)))) :invar-property 17))
(define-fun invariant_18 () Bool (! (forall ((C_26 core) (V1_27 value) (V2_28 value))
  (=> (and (_0__proc_write C_26 V1_27) (_0__shared C_26))
      (not (_0__bus_transfer V2_28)))) :invar-property 18))
(define-fun invariant_19 () Bool (! (forall ((C1_29 core) (C2_30 core))
  (=> (and (_0__proc_read C1_29) (_0__proc_read C2_30)) (= C1_29 C2_30))) :invar-property 19))
(define-fun invariant_20 () Bool (! (forall ((C1_31 core) (V1_32 value) (C2_33 core) (V2_34 value))
  (=> (and (_0__proc_write C1_31 V1_32) (_0__proc_write C2_33 V2_34))
      (and (= C1_31 C2_33) (= V1_32 V2_34)))) :invar-property 20))
(define-fun invariant_21 () Bool (! (forall ((C1_35 core) (C2_36 core) (V_37 value))
  (not (and (_0__proc_read C1_35) (_0__proc_write C2_36 V_37)))) :invar-property 21))
(define-fun invariant_22 () Bool (! (forall ((C11_38 core) (C22_39 core))
  (not (and (_0__proc_read C11_38) (_0__bus_read_for_ownership C22_39)))) :invar-property 22))
(define-fun invariant_23 () Bool (! (forall ((C11_40 core) (C22_41 core))
  (not (and (_0__proc_read C11_40) (_0__bus_upgrade C22_41)))) :invar-property 23))
(define-fun invariant_24 () Bool (! (forall ((C11_42 core) (V_43 value) (C22_44 core))
  (not (and (_0__proc_write C11_42 V_43) (_0__bus_read C22_44)))) :invar-property 24))
(define-fun invariant_25 () Bool (! (forall ((C1_45 core) (C2_46 core))
  (=> (and (_0__proc_read C1_45)
           (not (_0__bus_read C2_46))
           (distinct C1_45 C2_46))
      (or (_0__shared C2_46) (_0__invalid C2_46)))) :invar-property 25))
(define-fun invariant_26 () Bool (! (forall ((C1_47 core) (C2_48 core))
  (=> (and (_0__proc_read C1_47)
           (not (_0__bus_read C2_48))
           (distinct C1_47 C2_48)
           (_0__shared C2_48))
      (_0__bus_transfer (_0__cache C2_48)))) :invar-property 26))
(define-fun invariant_27 () Bool (! (forall ((C_49 core) (V_50 value))
  (=> (and (_0__proc_read C_49) (_0__bus_transfer V_50)) (= _0__memory V_50))) :invar-property 27))
(define-fun invariant_28 () Bool (! (forall ((C1_51 core) (V_52 value) (C2_53 core))
  (=> (and (_0__proc_read C1_51)
           (_0__bus_transfer V_52)
           (not (_0__invalid C2_53)))
      (= (_0__cache C2_53) V_52))) :invar-property 28))
(define-fun invariant_29 () Bool (! (forall ((C1_54 core) (V_55 value) (C2_56 core))
  (=> (and (_0__proc_write C1_54 V_55)
           (_0__invalid C1_54)
           (not (_0__bus_read_for_ownership C2_56))
           (distinct C1_54 C2_56))
      (_0__invalid C2_56))) :invar-property 29))
(define-fun invariant_30 () Bool (! (forall ((C1_57 core) (V_58 value) (C2_59 core))
  (=> (and (_0__proc_write C1_57 V_58)
           (_0__shared C1_57)
           (not (_0__bus_upgrade C2_59))
           (distinct C1_57 C2_59))
      (_0__invalid C2_59))) :invar-property 30))
(define-fun invariant_31 () Bool (! (forall ((V_60 value) (C1_61 core) (C2_62 core) (V2_63 value))
  (not (and (_0__bus_transfer V_60)
            (_0__modified C1_61)
            (or (_0__proc_read C2_62) (_0__proc_write C2_62 V2_63))))) :invar-property 31))
(define-fun invariant_32 () Bool (! (forall ((C1_64 core) (C2_65 core))
  (not (and (_0__bus_upgrade C1_64) (_0__exclusive C2_65)))) :invar-property 32))
(define-fun invariant_33 () Bool (! (forall ((C1_66 core) (C2_67 core))
  (not (and (_0__bus_upgrade C1_66) (_0__modified C2_67)))) :invar-property 33))

(declare-sort db_request_id 0)
(declare-sort node 0)
(declare-sort response 0)
(declare-sort request 0)
(declare-fun _match_ (request response) Bool)
(declare-fun _0__request_sent (node request) Bool)
(declare-fun _1__request_sent (node request) Bool)
(define-fun _0__request_sent.sv ((V0 node) (V1 request)) Bool (! (_0__request_sent V0 V1) :next _1__request_sent))
(declare-fun _0__response_sent (node response) Bool)
(declare-fun _1__response_sent (node response) Bool)
(define-fun _0__response_sent.sv ((V0 node) (V1 response)) Bool (! (_0__response_sent V0 V1) :next _1__response_sent))
(declare-fun _0__response_received (node response) Bool)
(declare-fun _1__response_received (node response) Bool)
(define-fun _0__response_received.sv ((V0 node) (V1 response)) Bool (! (_0__response_received V0 V1) :next _1__response_received))
(declare-fun _0__db_request_sent (db_request_id request) Bool)
(declare-fun _1__db_request_sent (db_request_id request) Bool)
(define-fun _0__db_request_sent.sv ((V0 db_request_id) (V1 request)) Bool (! (_0__db_request_sent V0 V1) :next _1__db_request_sent))
(declare-fun _0__db_response_sent (db_request_id response) Bool)
(declare-fun _1__db_response_sent (db_request_id response) Bool)
(define-fun _0__db_response_sent.sv ((V0 db_request_id) (V1 response)) Bool (! (_0__db_response_sent V0 V1) :next _1__db_response_sent))
(declare-fun _0__t (db_request_id node) Bool)
(declare-fun _1__t (db_request_id node) Bool)
(define-fun _0__t.sv ((V0 db_request_id) (V1 node)) Bool (! (_0__t V0 V1) :next _1__t))
(define-fun init () Bool (! (and (forall ((N_0 node) (R_1 request)) (not (_0__request_sent N_0 R_1)))
     (forall ((N_2 node) (P_3 response)) (not (_0__response_sent N_2 P_3)))
     (forall ((N_4 node) (P_5 response)) (not (_0__response_received N_4 P_5)))
     (forall ((I_6 db_request_id) (R_7 request))
       (not (_0__db_request_sent I_6 R_7)))
     (forall ((I_8 db_request_id) (P_9 response))
       (not (_0__db_response_sent I_8 P_9)))
     (forall ((I_10 db_request_id) (N_11 node)) (not (_0__t I_10 N_11)))) :init true))
(define-fun transition_0 () Bool (! (exists ((n_0 node) (r_1 request))
  (let ((a!1 (forall ((N_2 node) (R_3 request))
               (= (_1__request_sent N_2 R_3)
                  (or (_0__request_sent N_2 R_3) (and (= N_2 n_0) (= R_3 r_1)))))))
    (and a!1
         (forall ((x0_4 node) (x1_5 response))
           (= (_1__response_sent x0_4 x1_5) (_0__response_sent x0_4 x1_5)))
         (forall ((x0_6 node) (x1_7 response))
           (= (_1__response_received x0_6 x1_7)
              (_0__response_received x0_6 x1_7)))
         (forall ((x0_8 db_request_id) (x1_9 request))
           (= (_1__db_request_sent x0_8 x1_9) (_0__db_request_sent x0_8 x1_9)))
         (forall ((x0_10 db_request_id) (x1_11 response))
           (= (_1__db_response_sent x0_10 x1_11)
              (_0__db_response_sent x0_10 x1_11)))
         (forall ((x0_12 db_request_id) (x1_13 node))
           (= (_1__t x0_12 x1_13) (_0__t x0_12 x1_13)))))) :action true))
(define-fun transition_1 () Bool (! (exists ((n_14 node) (r_15 request) (i_16 db_request_id))
  (let ((a!1 (forall ((I_18 db_request_id) (N_19 node))
               (= (_1__t I_18 N_19)
                  (or (_0__t I_18 N_19) (and (= I_18 i_16) (= N_19 n_14))))))
        (a!2 (forall ((I_20 db_request_id) (R_21 request))
               (= (_1__db_request_sent I_20 R_21)
                  (or (_0__db_request_sent I_20 R_21)
                      (and (= I_20 i_16) (= R_21 r_15)))))))
    (and (_0__request_sent n_14 r_15)
         (forall ((N_17 node)) (not (_0__t i_16 N_17)))
         a!1
         a!2
         (forall ((x0_22 node) (x1_23 request))
           (= (_1__request_sent x0_22 x1_23) (_0__request_sent x0_22 x1_23)))
         (forall ((x0_24 node) (x1_25 response))
           (= (_1__response_sent x0_24 x1_25) (_0__response_sent x0_24 x1_25)))
         (forall ((x0_26 node) (x1_27 response))
           (= (_1__response_received x0_26 x1_27)
              (_0__response_received x0_26 x1_27)))
         (forall ((x0_28 db_request_id) (x1_29 response))
           (= (_1__db_response_sent x0_28 x1_29)
              (_0__db_response_sent x0_28 x1_29)))))) :action true))
(define-fun transition_2 () Bool (! (exists ((i_30 db_request_id) (r_31 request) (p_32 response))
  (let ((a!1 (forall ((I_33 db_request_id) (P_34 response))
               (= (_1__db_response_sent I_33 P_34)
                  (or (_0__db_response_sent I_33 P_34)
                      (and (= I_33 i_30) (= P_34 p_32)))))))
    (and (_0__db_request_sent i_30 r_31)
         (_match_ r_31 p_32)
         a!1
         (forall ((x0_35 node) (x1_36 request))
           (= (_1__request_sent x0_35 x1_36) (_0__request_sent x0_35 x1_36)))
         (forall ((x0_37 node) (x1_38 response))
           (= (_1__response_sent x0_37 x1_38) (_0__response_sent x0_37 x1_38)))
         (forall ((x0_39 node) (x1_40 response))
           (= (_1__response_received x0_39 x1_40)
              (_0__response_received x0_39 x1_40)))
         (forall ((x0_41 db_request_id) (x1_42 request))
           (= (_1__db_request_sent x0_41 x1_42)
              (_0__db_request_sent x0_41 x1_42)))
         (forall ((x0_43 db_request_id) (x1_44 node))
           (= (_1__t x0_43 x1_44) (_0__t x0_43 x1_44)))))) :action true))
(define-fun transition_3 () Bool (! (exists ((n_45 node) (i_46 db_request_id) (p_47 response))
  (let ((a!1 (forall ((N_48 node) (P_49 response))
               (= (_1__response_sent N_48 P_49)
                  (or (_0__response_sent N_48 P_49)
                      (and (= N_48 n_45) (= P_49 p_47)))))))
    (and (_0__db_response_sent i_46 p_47)
         (_0__t i_46 n_45)
         a!1
         (forall ((x0_50 node) (x1_51 request))
           (= (_1__request_sent x0_50 x1_51) (_0__request_sent x0_50 x1_51)))
         (forall ((x0_52 node) (x1_53 response))
           (= (_1__response_received x0_52 x1_53)
              (_0__response_received x0_52 x1_53)))
         (forall ((x0_54 db_request_id) (x1_55 request))
           (= (_1__db_request_sent x0_54 x1_55)
              (_0__db_request_sent x0_54 x1_55)))
         (forall ((x0_56 db_request_id) (x1_57 response))
           (= (_1__db_response_sent x0_56 x1_57)
              (_0__db_response_sent x0_56 x1_57)))
         (forall ((x0_58 db_request_id) (x1_59 node))
           (= (_1__t x0_58 x1_59) (_0__t x0_58 x1_59)))))) :action true))
(define-fun transition_4 () Bool (! (exists ((n_60 node) (p_61 response))
  (let ((a!1 (forall ((N_62 node) (P_63 response))
               (= (_1__response_received N_62 P_63)
                  (or (_0__response_received N_62 P_63)
                      (and (= N_62 n_60) (= P_63 p_61)))))))
    (and (_0__response_sent n_60 p_61)
         a!1
         (forall ((x0_64 node) (x1_65 request))
           (= (_1__request_sent x0_64 x1_65) (_0__request_sent x0_64 x1_65)))
         (forall ((x0_66 node) (x1_67 response))
           (= (_1__response_sent x0_66 x1_67) (_0__response_sent x0_66 x1_67)))
         (forall ((x0_68 db_request_id) (x1_69 request))
           (= (_1__db_request_sent x0_68 x1_69)
              (_0__db_request_sent x0_68 x1_69)))
         (forall ((x0_70 db_request_id) (x1_71 response))
           (= (_1__db_response_sent x0_70 x1_71)
              (_0__db_response_sent x0_70 x1_71)))
         (forall ((x0_72 db_request_id) (x1_73 node))
           (= (_1__t x0_72 x1_73) (_0__t x0_72 x1_73)))))) :action true))
(define-fun safety-prop () Bool (!(let ((a!1 (forall ((N_0 node) (P_1 response))
             (=> (_0__response_received N_0 P_1)
                 (exists ((R_2 request))
                   (and (_0__request_sent N_0 R_2) (_match_ R_2 P_1)))))))
  (and a!1)) :invar-property 0))
(define-fun invariant_0 () Bool (! (forall ((N_0 node) (P_1 response))
  (=> (_0__response_received N_0 P_1)
      (exists ((R_2 request)) (and (_0__request_sent N_0 R_2) (_match_ R_2 P_1))))) :invar-property 0))
(define-fun invariant_1 () Bool (! (forall ((N_3 node) (P_4 response))
  (=> (_0__response_sent N_3 P_4)
      (exists ((R_5 request)) (and (_0__request_sent N_3 R_5) (_match_ R_5 P_4))))) :invar-property 1))
(define-fun invariant_2 () Bool (! (forall ((I_6 db_request_id) (R_7 request))
  (=> (_0__db_request_sent I_6 R_7)
      (exists ((N_8 node)) (and (_0__t I_6 N_8) (_0__request_sent N_8 R_7))))) :invar-property 2))
(define-fun invariant_3 () Bool (! (forall ((I_9 db_request_id) (P_10 response))
  (=> (_0__db_response_sent I_9 P_10)
      (exists ((R_11 request))
        (and (_0__db_request_sent I_9 R_11) (_match_ R_11 P_10))))) :invar-property 3))
(define-fun invariant_4 () Bool (! (forall ((I_12 db_request_id) (N1_13 node) (N2_14 node))
  (=> (and (_0__t I_12 N1_13) (_0__t I_12 N2_14)) (= N1_13 N2_14))) :invar-property 4))

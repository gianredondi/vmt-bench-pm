(declare-sort key 0)
(declare-sort value 0)
(declare-sort node 0)
(declare-sort seqnum 0)
(declare-fun _0__table (node key value) Bool)
(declare-fun _1__table (node key value) Bool)
(define-fun _0__table.sv ((V0 node) (V1 key) (V2 value)) Bool (! (_0__table V0 V1 V2) :next _1__table))
(declare-fun _0__unacked (node node key value seqnum) Bool)
(declare-fun _1__unacked (node node key value seqnum) Bool)
(define-fun _0__unacked.sv ((V0 node) (V1 node) (V2 key) (V3 value) (V4 seqnum)) Bool (! (_0__unacked V0 V1 V2 V3 V4) :next _1__unacked))
(declare-fun _0__owner (node key) Bool)
(declare-fun _1__owner (node key) Bool)
(define-fun _0__owner.sv ((V0 node) (V1 key)) Bool (! (_0__owner V0 V1) :next _1__owner))
(declare-fun _0__transfer_msg (node node key value seqnum) Bool)
(declare-fun _1__transfer_msg (node node key value seqnum) Bool)
(define-fun _0__transfer_msg.sv ((V0 node) (V1 node) (V2 key) (V3 value) (V4 seqnum)) Bool (! (_0__transfer_msg V0 V1 V2 V3 V4) :next _1__transfer_msg))
(declare-fun _0__ack_msg (node node seqnum) Bool)
(declare-fun _1__ack_msg (node node seqnum) Bool)
(define-fun _0__ack_msg.sv ((V0 node) (V1 node) (V2 seqnum)) Bool (! (_0__ack_msg V0 V1 V2) :next _1__ack_msg))
(declare-fun _0__seqnum_sent (node seqnum) Bool)
(declare-fun _1__seqnum_sent (node seqnum) Bool)
(define-fun _0__seqnum_sent.sv ((V0 node) (V1 seqnum)) Bool (! (_0__seqnum_sent V0 V1) :next _1__seqnum_sent))
(declare-fun _0__seqnum_recvd (node node seqnum) Bool)
(declare-fun _1__seqnum_recvd (node node seqnum) Bool)
(define-fun _0__seqnum_recvd.sv ((V0 node) (V1 node) (V2 seqnum)) Bool (! (_0__seqnum_recvd V0 V1 V2) :next _1__seqnum_recvd))
(define-fun init () Bool (! (let ((a!1 (forall ((N1_8 node) (K_9 key) (N2_10 node))
             (=> (and (_0__owner N1_8 K_9) (_0__owner N2_10 K_9))
                 (= N1_8 N2_10)))))
  (and (forall ((N_0 node) (K_1 key) (V_2 value)) (not (_0__table N_0 K_1 V_2)))
       (forall ((SRC_3 node) (DST_4 node) (K_5 key) (V_6 value) (S_7 seqnum))
         (not (_0__transfer_msg SRC_3 DST_4 K_5 V_6 S_7)))
       a!1
       (forall ((SRC_11 node)
                (DST_12 node)
                (K_13 key)
                (V_14 value)
                (S_15 seqnum))
         (not (_0__unacked SRC_11 DST_12 K_13 V_14 S_15)))
       (forall ((SRC_16 node) (DST_17 node) (S_18 seqnum))
         (not (_0__ack_msg SRC_16 DST_17 S_18)))
       (forall ((N_19 node) (S_20 seqnum)) (not (_0__seqnum_sent N_19 S_20)))
       (forall ((N_21 node) (SENDER_22 node) (S_23 seqnum))
         (not (_0__seqnum_recvd N_21 SENDER_22 S_23))))) :init true))
(define-fun transition_0 () Bool (! (exists ((n_old_0 node) (n_new_1 node) (k_2 key) (v_3 value) (s_4 seqnum))
  (let ((a!1 (forall ((N_5 node)
                      (S_6 seqnum)
                      (K_7 key)
                      (V_8 value)
                      (N1_9 node)
                      (N2_10 node))
               (let ((a!1 (= (_1__seqnum_sent N_5 S_6)
                             (or (_0__seqnum_sent N_5 S_6)
                                 (and (= N_5 n_old_0) (= S_6 s_4)))))
                     (a!2 (and (_0__table N_5 K_7 V_8)
                               (not (and (= N_5 n_old_0)
                                         (= K_7 k_2)
                                         (= V_8 v_3)))))
                     (a!3 (and (_0__owner N_5 K_7)
                               (not (and (= N_5 n_old_0) (= K_7 k_2)))))
                     (a!4 (and (= N1_9 n_old_0)
                               (= N2_10 n_new_1)
                               (= K_7 k_2)
                               (= V_8 v_3)
                               (= S_6 s_4))))
                 (and (_0__table n_old_0 k_2 v_3)
                      (or (not (_0__seqnum_sent n_old_0 s_4)) true)
                      a!1
                      (= (_1__table N_5 K_7 V_8) a!2)
                      (= (_1__owner N_5 K_7) a!3)
                      (= (_1__transfer_msg N1_9 N2_10 K_7 V_8 S_6)
                         (or (_0__transfer_msg N1_9 N2_10 K_7 V_8 S_6) a!4))
                      (= (_1__unacked N1_9 N2_10 K_7 V_8 S_6)
                         (or (_0__unacked N1_9 N2_10 K_7 V_8 S_6) a!4)))))))
    (and a!1
         (forall ((x0_11 node) (x1_12 node) (x2_13 seqnum))
           (= (_1__ack_msg x0_11 x1_12 x2_13) (_0__ack_msg x0_11 x1_12 x2_13)))
         (forall ((x0_14 node) (x1_15 node) (x2_16 seqnum))
           (= (_1__seqnum_recvd x0_14 x1_15 x2_16)
              (_0__seqnum_recvd x0_14 x1_15 x2_16)))))) :action true))
(define-fun transition_1 () Bool (! (exists ((src_17 node) (dst_18 node) (k_19 key) (v_20 value) (s_21 seqnum))
  (let ((a!1 (forall ((N1_22 node)
                      (N2_23 node)
                      (K_24 key)
                      (V_25 value)
                      (S_26 seqnum))
               (let ((a!1 (and (_0__transfer_msg N1_22 N2_23 K_24 V_25 S_26)
                               (not (and (= N1_22 src_17)
                                         (= N2_23 dst_18)
                                         (= K_24 k_19)
                                         (= V_25 v_20)
                                         (= S_26 s_21))))))
                 (and (_0__transfer_msg src_17 dst_18 k_19 v_20 s_21)
                      (= (_1__transfer_msg N1_22 N2_23 K_24 V_25 S_26) a!1))))))
    (and a!1
         (forall ((x0_27 node) (x1_28 key) (x2_29 value))
           (= (_1__table x0_27 x1_28 x2_29) (_0__table x0_27 x1_28 x2_29)))
         (forall ((x0_30 node)
                  (x1_31 node)
                  (x2_32 key)
                  (x3_33 value)
                  (x4_34 seqnum))
           (= (_1__unacked x0_30 x1_31 x2_32 x3_33 x4_34)
              (_0__unacked x0_30 x1_31 x2_32 x3_33 x4_34)))
         (forall ((x0_35 node) (x1_36 key))
           (= (_1__owner x0_35 x1_36) (_0__owner x0_35 x1_36)))
         (forall ((x0_37 node) (x1_38 node) (x2_39 seqnum))
           (= (_1__ack_msg x0_37 x1_38 x2_39) (_0__ack_msg x0_37 x1_38 x2_39)))
         (forall ((x0_40 node) (x1_41 seqnum))
           (= (_1__seqnum_sent x0_40 x1_41) (_0__seqnum_sent x0_40 x1_41)))
         (forall ((x0_42 node) (x1_43 node) (x2_44 seqnum))
           (= (_1__seqnum_recvd x0_42 x1_43 x2_44)
              (_0__seqnum_recvd x0_42 x1_43 x2_44)))))) :action true))
(define-fun transition_2 () Bool (! (exists ((src_45 node) (dst_46 node) (k_47 key) (v_48 value) (s_49 seqnum))
  (and (forall ((N1_50 node) (N2_51 node) (K_52 key) (V_53 value) (S_54 seqnum))
         (let ((a!1 (= (_1__transfer_msg N1_50 N2_51 K_52 V_53 S_54)
                       (or (_0__transfer_msg N1_50 N2_51 K_52 V_53 S_54)
                           (and (= N1_50 src_45)
                                (= N2_51 dst_46)
                                (= K_52 k_47)
                                (= V_53 v_48)
                                (= S_54 s_49))))))
           (and (_0__unacked src_45 dst_46 k_47 v_48 s_49) a!1)))
       (forall ((x0_55 node) (x1_56 key) (x2_57 value))
         (= (_1__table x0_55 x1_56 x2_57) (_0__table x0_55 x1_56 x2_57)))
       (forall ((x0_58 node)
                (x1_59 node)
                (x2_60 key)
                (x3_61 value)
                (x4_62 seqnum))
         (= (_1__unacked x0_58 x1_59 x2_60 x3_61 x4_62)
            (_0__unacked x0_58 x1_59 x2_60 x3_61 x4_62)))
       (forall ((x0_63 node) (x1_64 key))
         (= (_1__owner x0_63 x1_64) (_0__owner x0_63 x1_64)))
       (forall ((x0_65 node) (x1_66 node) (x2_67 seqnum))
         (= (_1__ack_msg x0_65 x1_66 x2_67) (_0__ack_msg x0_65 x1_66 x2_67)))
       (forall ((x0_68 node) (x1_69 seqnum))
         (= (_1__seqnum_sent x0_68 x1_69) (_0__seqnum_sent x0_68 x1_69)))
       (forall ((x0_70 node) (x1_71 node) (x2_72 seqnum))
         (= (_1__seqnum_recvd x0_70 x1_71 x2_72)
            (_0__seqnum_recvd x0_70 x1_71 x2_72))))) :action true))
(define-fun transition_3 () Bool (! (exists ((src_73 node) (n_74 node) (k_75 key) (v_76 value) (s_77 seqnum))
  (let ((a!1 (forall ((N1_78 node)
                      (N2_79 node)
                      (S_80 seqnum)
                      (N_81 node)
                      (K_82 key)
                      (V_83 value))
               (let ((a!1 (= (_1__seqnum_recvd N1_78 N2_79 S_80)
                             (or (_0__seqnum_recvd N1_78 N2_79 S_80)
                                 (and (= N1_78 n_74)
                                      (= N2_79 src_73)
                                      (= S_80 s_77)))))
                     (a!2 (= (_1__table N_81 K_82 V_83)
                             (or (_0__table N_81 K_82 V_83)
                                 (and (= N_81 n_74) (= K_82 k_75) (= V_83 v_76)))))
                     (a!3 (= (_1__owner N_81 K_82)
                             (or (_0__owner N_81 K_82)
                                 (and (= N_81 n_74) (= K_82 k_75))))))
                 (and (_0__transfer_msg src_73 n_74 k_75 v_76 s_77)
                      (not (_0__seqnum_recvd n_74 src_73 s_77))
                      a!1
                      a!2
                      a!3)))))
    (and a!1
         (forall ((x0_84 node)
                  (x1_85 node)
                  (x2_86 key)
                  (x3_87 value)
                  (x4_88 seqnum))
           (= (_1__unacked x0_84 x1_85 x2_86 x3_87 x4_88)
              (_0__unacked x0_84 x1_85 x2_86 x3_87 x4_88)))
         (forall ((x0_89 node)
                  (x1_90 node)
                  (x2_91 key)
                  (x3_92 value)
                  (x4_93 seqnum))
           (= (_1__transfer_msg x0_89 x1_90 x2_91 x3_92 x4_93)
              (_0__transfer_msg x0_89 x1_90 x2_91 x3_92 x4_93)))
         (forall ((x0_94 node) (x1_95 node) (x2_96 seqnum))
           (= (_1__ack_msg x0_94 x1_95 x2_96) (_0__ack_msg x0_94 x1_95 x2_96)))
         (forall ((x0_97 node) (x1_98 seqnum))
           (= (_1__seqnum_sent x0_97 x1_98) (_0__seqnum_sent x0_97 x1_98)))))) :action true))
(define-fun transition_4 () Bool (! (exists ((src_99 node) (n_100 node) (k_101 key) (v_102 value) (s_103 seqnum))
  (and (forall ((N1_104 node) (N2_105 node) (S_106 seqnum))
         (let ((a!1 (= (_1__ack_msg N1_104 N2_105 S_106)
                       (or (_0__ack_msg N1_104 N2_105 S_106)
                           (and (= N1_104 src_99)
                                (= N2_105 n_100)
                                (= S_106 s_103))))))
           (and (_0__transfer_msg src_99 n_100 k_101 v_102 s_103)
                (_0__seqnum_recvd n_100 src_99 s_103)
                a!1)))
       (forall ((x0_107 node) (x1_108 key) (x2_109 value))
         (= (_1__table x0_107 x1_108 x2_109) (_0__table x0_107 x1_108 x2_109)))
       (forall ((x0_110 node)
                (x1_111 node)
                (x2_112 key)
                (x3_113 value)
                (x4_114 seqnum))
         (= (_1__unacked x0_110 x1_111 x2_112 x3_113 x4_114)
            (_0__unacked x0_110 x1_111 x2_112 x3_113 x4_114)))
       (forall ((x0_115 node) (x1_116 key))
         (= (_1__owner x0_115 x1_116) (_0__owner x0_115 x1_116)))
       (forall ((x0_117 node)
                (x1_118 node)
                (x2_119 key)
                (x3_120 value)
                (x4_121 seqnum))
         (= (_1__transfer_msg x0_117 x1_118 x2_119 x3_120 x4_121)
            (_0__transfer_msg x0_117 x1_118 x2_119 x3_120 x4_121)))
       (forall ((x0_122 node) (x1_123 seqnum))
         (= (_1__seqnum_sent x0_122 x1_123) (_0__seqnum_sent x0_122 x1_123)))
       (forall ((x0_124 node) (x1_125 node) (x2_126 seqnum))
         (= (_1__seqnum_recvd x0_124 x1_125 x2_126)
            (_0__seqnum_recvd x0_124 x1_125 x2_126))))) :action true))
(define-fun transition_5 () Bool (! (exists ((src_127 node) (dst_128 node) (s_129 seqnum))
  (let ((a!1 (forall ((N1_130 node) (N2_131 node) (S_132 seqnum))
               (let ((a!1 (and (_0__ack_msg N1_130 N2_131 S_132)
                               (not (and (= N1_130 src_127)
                                         (= N2_131 dst_128)
                                         (= S_132 s_129))))))
                 (and (_0__ack_msg src_127 dst_128 s_129)
                      (= (_1__ack_msg N1_130 N2_131 S_132) a!1))))))
    (and a!1
         (forall ((x0_133 node) (x1_134 key) (x2_135 value))
           (= (_1__table x0_133 x1_134 x2_135) (_0__table x0_133 x1_134 x2_135)))
         (forall ((x0_136 node)
                  (x1_137 node)
                  (x2_138 key)
                  (x3_139 value)
                  (x4_140 seqnum))
           (= (_1__unacked x0_136 x1_137 x2_138 x3_139 x4_140)
              (_0__unacked x0_136 x1_137 x2_138 x3_139 x4_140)))
         (forall ((x0_141 node) (x1_142 key))
           (= (_1__owner x0_141 x1_142) (_0__owner x0_141 x1_142)))
         (forall ((x0_143 node)
                  (x1_144 node)
                  (x2_145 key)
                  (x3_146 value)
                  (x4_147 seqnum))
           (= (_1__transfer_msg x0_143 x1_144 x2_145 x3_146 x4_147)
              (_0__transfer_msg x0_143 x1_144 x2_145 x3_146 x4_147)))
         (forall ((x0_148 node) (x1_149 seqnum))
           (= (_1__seqnum_sent x0_148 x1_149) (_0__seqnum_sent x0_148 x1_149)))
         (forall ((x0_150 node) (x1_151 node) (x2_152 seqnum))
           (= (_1__seqnum_recvd x0_150 x1_151 x2_152)
              (_0__seqnum_recvd x0_150 x1_151 x2_152)))))) :action true))
(define-fun transition_6 () Bool (! (exists ((src_153 node) (dst_154 node) (s_155 seqnum))
  (let ((a!1 (forall ((N1_156 node)
                      (N2_157 node)
                      (S_158 seqnum)
                      (K_159 key)
                      (V_160 value))
               (let ((a!1 (=> (not (and (= N1_156 src_153)
                                        (= N2_157 dst_154)
                                        (= S_158 s_155)))
                              (= (_1__unacked N1_156 N2_157 K_159 V_160 S_158)
                                 (_0__unacked N1_156 N2_157 K_159 V_160 S_158)))))
                 (and (_0__ack_msg src_153 dst_154 s_155)
                      a!1
                      (not (_1__unacked src_153 dst_154 K_159 V_160 s_155)))))))
    (and a!1
         (forall ((x0_161 node) (x1_162 key) (x2_163 value))
           (= (_1__table x0_161 x1_162 x2_163) (_0__table x0_161 x1_162 x2_163)))
         (forall ((x0_164 node) (x1_165 key))
           (= (_1__owner x0_164 x1_165) (_0__owner x0_164 x1_165)))
         (forall ((x0_166 node)
                  (x1_167 node)
                  (x2_168 key)
                  (x3_169 value)
                  (x4_170 seqnum))
           (= (_1__transfer_msg x0_166 x1_167 x2_168 x3_169 x4_170)
              (_0__transfer_msg x0_166 x1_167 x2_168 x3_169 x4_170)))
         (forall ((x0_171 node) (x1_172 node) (x2_173 seqnum))
           (= (_1__ack_msg x0_171 x1_172 x2_173)
              (_0__ack_msg x0_171 x1_172 x2_173)))
         (forall ((x0_174 node) (x1_175 seqnum))
           (= (_1__seqnum_sent x0_174 x1_175) (_0__seqnum_sent x0_174 x1_175)))
         (forall ((x0_176 node) (x1_177 node) (x2_178 seqnum))
           (= (_1__seqnum_recvd x0_176 x1_177 x2_178)
              (_0__seqnum_recvd x0_176 x1_177 x2_178)))))) :action true))
(define-fun transition_7 () Bool (! (exists ((n_179 node) (k_180 key) (v_181 value))
  (let ((a!1 (forall ((N_182 node) (K_183 key) (V_184 value))
               (let ((a!1 (=> (not (and (= N_182 n_179) (= K_183 k_180)))
                              (= (_1__table N_182 K_183 V_184)
                                 (_0__table N_182 K_183 V_184)))))
                 (and (_0__owner n_179 k_180)
                      a!1
                      (= (_1__table n_179 k_180 V_184) (= V_184 v_181)))))))
    (and a!1
         (forall ((x0_185 node)
                  (x1_186 node)
                  (x2_187 key)
                  (x3_188 value)
                  (x4_189 seqnum))
           (= (_1__unacked x0_185 x1_186 x2_187 x3_188 x4_189)
              (_0__unacked x0_185 x1_186 x2_187 x3_188 x4_189)))
         (forall ((x0_190 node) (x1_191 key))
           (= (_1__owner x0_190 x1_191) (_0__owner x0_190 x1_191)))
         (forall ((x0_192 node)
                  (x1_193 node)
                  (x2_194 key)
                  (x3_195 value)
                  (x4_196 seqnum))
           (= (_1__transfer_msg x0_192 x1_193 x2_194 x3_195 x4_196)
              (_0__transfer_msg x0_192 x1_193 x2_194 x3_195 x4_196)))
         (forall ((x0_197 node) (x1_198 node) (x2_199 seqnum))
           (= (_1__ack_msg x0_197 x1_198 x2_199)
              (_0__ack_msg x0_197 x1_198 x2_199)))
         (forall ((x0_200 node) (x1_201 seqnum))
           (= (_1__seqnum_sent x0_200 x1_201) (_0__seqnum_sent x0_200 x1_201)))
         (forall ((x0_202 node) (x1_203 node) (x2_204 seqnum))
           (= (_1__seqnum_recvd x0_202 x1_203 x2_204)
              (_0__seqnum_recvd x0_202 x1_203 x2_204)))))) :action true))
(define-fun safety-prop () Bool (!(let ((a!1 (forall ((N1_0 node) (K_1 key) (V1_2 value) (N2_3 node) (V2_4 value))
             (=> (and (_0__table N1_0 K_1 V1_2) (_0__table N2_3 K_1 V2_4))
                 (and (= N1_0 N2_3) (= V1_2 V2_4))))))
  (and a!1)) :invar-property 0))
(define-fun invariant_0 () Bool (! (forall ((N1_0 node) (K_1 key) (V1_2 value) (N2_3 node) (V2_4 value))
  (=> (and (_0__table N1_0 K_1 V1_2) (_0__table N2_3 K_1 V2_4))
      (and (= N1_0 N2_3) (= V1_2 V2_4)))) :invar-property 0))
(define-fun invariant_1 () Bool (! (forall ((N1_5 node) (K_6 key) (N2_7 node))
  (=> (and (_0__owner N1_5 K_6) (_0__owner N2_7 K_6)) (= N1_5 N2_7))) :invar-property 1))
(define-fun invariant_2 () Bool (! (forall ((N_8 node) (K_9 key) (V_10 value))
  (=> (_0__table N_8 K_9 V_10) (_0__owner N_8 K_9))) :invar-property 2))
(define-fun invariant_3 () Bool (! (forall ((SRC_11 node)
         (DST_12 node)
         (K_13 key)
         (V_14 value)
         (S_15 seqnum)
         (N_16 node))
  (not (and (_0__transfer_msg SRC_11 DST_12 K_13 V_14 S_15)
            (not (_0__seqnum_recvd DST_12 SRC_11 S_15))
            (_0__owner N_16 K_13)))) :invar-property 3))
(define-fun invariant_4 () Bool (! (forall ((SRC_17 node)
         (DST_18 node)
         (K_19 key)
         (V_20 value)
         (S_21 seqnum)
         (N_22 node))
  (not (and (_0__unacked SRC_17 DST_18 K_19 V_20 S_21)
            (not (_0__seqnum_recvd DST_18 SRC_17 S_21))
            (_0__owner N_22 K_19)))) :invar-property 4))
(define-fun invariant_5 () Bool (! (forall ((SRC1_23 node)
         (DST1_24 node)
         (K_25 key)
         (V1_26 value)
         (S1_27 seqnum)
         (SRC2_28 node)
         (DST2_29 node)
         (V2_30 value)
         (S2_31 seqnum))
  (=> (and (_0__transfer_msg SRC1_23 DST1_24 K_25 V1_26 S1_27)
           (not (_0__seqnum_recvd DST1_24 SRC1_23 S1_27))
           (_0__transfer_msg SRC2_28 DST2_29 K_25 V2_30 S2_31)
           (not (_0__seqnum_recvd DST2_29 SRC2_28 S2_31)))
      (and (= SRC1_23 SRC2_28)
           (= DST1_24 DST2_29)
           (= V1_26 V2_30)
           (= S1_27 S2_31)))) :invar-property 5))
(define-fun invariant_6 () Bool (! (forall ((SRC1_32 node)
         (DST1_33 node)
         (K_34 key)
         (V1_35 value)
         (S1_36 seqnum)
         (SRC2_37 node)
         (DST2_38 node)
         (V2_39 value)
         (S2_40 seqnum))
  (=> (and (_0__unacked SRC1_32 DST1_33 K_34 V1_35 S1_36)
           (not (_0__seqnum_recvd DST1_33 SRC1_32 S1_36))
           (_0__unacked SRC2_37 DST2_38 K_34 V2_39 S2_40)
           (not (_0__seqnum_recvd DST2_38 SRC2_37 S2_40)))
      (and (= SRC1_32 SRC2_37)
           (= DST1_33 DST2_38)
           (= V1_35 V2_39)
           (= S1_36 S2_40)))) :invar-property 6))
(define-fun invariant_7 () Bool (! (forall ((SRC1_41 node)
         (DST1_42 node)
         (K_43 key)
         (V1_44 value)
         (S1_45 seqnum)
         (SRC2_46 node)
         (DST2_47 node)
         (V2_48 value)
         (S2_49 seqnum))
  (=> (and (_0__unacked SRC1_41 DST1_42 K_43 V1_44 S1_45)
           (not (_0__seqnum_recvd DST1_42 SRC1_41 S1_45))
           (_0__transfer_msg SRC2_46 DST2_47 K_43 V2_48 S2_49)
           (not (_0__seqnum_recvd DST2_47 SRC2_46 S2_49)))
      (and (= SRC1_41 SRC2_46)
           (= DST1_42 DST2_47)
           (= V1_44 V2_48)
           (= S1_45 S2_49)))) :invar-property 7))

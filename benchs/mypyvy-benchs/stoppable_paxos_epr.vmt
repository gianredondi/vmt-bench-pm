(declare-sort node 0)
(declare-sort value 0)
(declare-sort quorum 0)
(declare-sort round 0)
(declare-sort inst 0)
(declare-sort votemap 0)
(declare-const none round)
(define-fun none.sv () round (! none :rigid true))
(declare-const stop value)
(define-fun stop.sv () value (! stop :rigid true))
(declare-fun le (round round) Bool)
(declare-fun inst_le (inst inst) Bool)
(declare-fun member (node quorum) Bool)
(declare-fun _0__one_a (round) Bool)
(declare-fun _1__one_a (round) Bool)
(define-fun _0__one_a.sv ((V0 round)) Bool (! (_0__one_a V0) :next _1__one_a))
(declare-fun _0__one_b_msg (node round votemap) Bool)
(declare-fun _1__one_b_msg (node round votemap) Bool)
(define-fun _0__one_b_msg.sv ((V0 node) (V1 round) (V2 votemap)) Bool (! (_0__one_b_msg V0 V1 V2) :next _1__one_b_msg))
(declare-fun _0__left_round (node round) Bool)
(declare-fun _1__left_round (node round) Bool)
(define-fun _0__left_round.sv ((V0 node) (V1 round)) Bool (! (_0__left_round V0 V1) :next _1__left_round))
(declare-fun _0__joined_round (node round) Bool)
(declare-fun _1__joined_round (node round) Bool)
(define-fun _0__joined_round.sv ((V0 node) (V1 round)) Bool (! (_0__joined_round V0 V1) :next _1__joined_round))
(declare-fun _0__proposal (inst round value) Bool)
(declare-fun _1__proposal (inst round value) Bool)
(define-fun _0__proposal.sv ((V0 inst) (V1 round) (V2 value)) Bool (! (_0__proposal V0 V1 V2) :next _1__proposal))
(declare-fun _0__active (round) Bool)
(declare-fun _1__active (round) Bool)
(define-fun _0__active.sv ((V0 round)) Bool (! (_0__active V0) :next _1__active))
(declare-fun _0__vote (node inst round value) Bool)
(declare-fun _1__vote (node inst round value) Bool)
(define-fun _0__vote.sv ((V0 node) (V1 inst) (V2 round) (V3 value)) Bool (! (_0__vote V0 V1 V2 V3) :next _1__vote))
(declare-fun _0__decision (node inst round value) Bool)
(declare-fun _1__decision (node inst round value) Bool)
(define-fun _0__decision.sv ((V0 node) (V1 inst) (V2 round) (V3 value)) Bool (! (_0__decision V0 V1 V2 V3) :next _1__decision))
(define-fun axiom_0 () Bool (! (forall ((X_0 round)) (le X_0 X_0)) :axiom true))
(define-fun axiom_1 () Bool (! (forall ((X_1 round) (Y_2 round) (Z_3 round))
  (=> (and (le X_1 Y_2) (le Y_2 Z_3)) (le X_1 Z_3))) :axiom true))
(define-fun axiom_2 () Bool (! (forall ((X_4 round) (Y_5 round))
  (=> (and (le X_4 Y_5) (le Y_5 X_4)) (= X_4 Y_5))) :axiom true))
(define-fun axiom_3 () Bool (! (forall ((X_6 round) (Y_7 round)) (or (le X_6 Y_7) (le Y_7 X_6))) :axiom true))
(define-fun axiom_4 () Bool (! (forall ((X_8 inst)) (inst_le X_8 X_8)) :axiom true))
(define-fun axiom_5 () Bool (! (forall ((X_9 inst) (Y_10 inst) (Z_11 inst))
  (=> (and (inst_le X_9 Y_10) (inst_le Y_10 Z_11)) (inst_le X_9 Z_11))) :axiom true))
(define-fun axiom_6 () Bool (! (forall ((X_12 inst) (Y_13 inst))
  (=> (and (inst_le X_12 Y_13) (inst_le Y_13 X_12)) (= X_12 Y_13))) :axiom true))
(define-fun axiom_7 () Bool (! (forall ((X_14 inst) (Y_15 inst)) (or (inst_le X_14 Y_15) (inst_le Y_15 X_14))) :axiom true))
(define-fun axiom_8 () Bool (! (forall ((Q1_16 quorum) (Q2_17 quorum))
  (exists ((N_18 node)) (and (member N_18 Q1_16) (member N_18 Q2_17)))) :axiom true))
(define-fun init () Bool (! (and (forall ((R_0 round)) (not (_0__one_a R_0)))
     (forall ((N_1 node) (R1_2 round) (M_3 votemap))
       (not (_0__one_b_msg N_1 R1_2 M_3)))
     (forall ((N_4 node) (R_5 round)) (not (_0__left_round N_4 R_5)))
     (forall ((N_6 node) (R_7 round)) (not (_0__joined_round N_6 R_7)))
     (forall ((I_8 inst) (R_9 round) (V_10 value))
       (not (_0__proposal I_8 R_9 V_10)))
     (forall ((R_11 round)) (not (_0__active R_11)))
     (forall ((N_12 node) (I_13 inst) (R_14 round) (V_15 value))
       (not (_0__vote N_12 I_13 R_14 V_15)))
     (forall ((N_16 node) (I_17 inst) (R_18 round) (V_19 value))
       (not (_0__decision N_16 I_17 R_18 V_19)))) :init true))
(define-fun transition_0 () Bool (! (exists ((r_0 round))
  (let ((a!1 (forall ((R_1 round))
               (= (_1__one_a R_1) (or (_0__one_a R_1) (= R_1 r_0))))))
    (and (distinct r_0 none)
         a!1
         (forall ((x0_2 node) (x1_3 round) (x2_4 votemap))
           (= (_1__one_b_msg x0_2 x1_3 x2_4) (_0__one_b_msg x0_2 x1_3 x2_4)))
         (forall ((x0_5 node) (x1_6 round))
           (= (_1__left_round x0_5 x1_6) (_0__left_round x0_5 x1_6)))
         (forall ((x0_7 node) (x1_8 round))
           (= (_1__joined_round x0_7 x1_8) (_0__joined_round x0_7 x1_8)))
         (forall ((x0_9 inst) (x1_10 round) (x2_11 value))
           (= (_1__proposal x0_9 x1_10 x2_11) (_0__proposal x0_9 x1_10 x2_11)))
         (forall ((x0_12 round)) (= (_1__active x0_12) (_0__active x0_12)))
         (forall ((x0_13 node) (x1_14 inst) (x2_15 round) (x3_16 value))
           (= (_1__vote x0_13 x1_14 x2_15 x3_16)
              (_0__vote x0_13 x1_14 x2_15 x3_16)))
         (forall ((x0_17 node) (x1_18 inst) (x2_19 round) (x3_20 value))
           (= (_1__decision x0_17 x1_18 x2_19 x3_20)
              (_0__decision x0_17 x1_18 x2_19 x3_20)))))) :action true))
(define-fun transition_1 () Bool (! (exists ((n_21 node) (r_22 round) (m_23 votemap))
  (let ((a!1 (forall ((I_24 inst))
               (let ((a!1 (forall ((R_27 round) (V_28 value))
                            (let ((a!1 (and (_0__vote n_21 I_24 R_27 V_28)
                                            (not (le r_22 R_27)))))
                              (=> a!1 (le R_27 (maxr m_23 I_24)))))))
               (let ((a!2 (and (_0__vote n_21
                                         I_24
                                         (maxr m_23 I_24)
                                         (maxv m_23 I_24))
                               (not (le r_22 (maxr m_23 I_24)))
                               a!1)))
                 (or (and (= (maxr m_23 I_24) none)
                          (forall ((R_25 round) (V_26 value))
                            (let ((a!1 (and (_0__vote n_21 I_24 R_25 V_26)
                                            (not (le r_22 R_25)))))
                              (not a!1))))
                     a!2)))))
        (a!2 (forall ((N_29 node) (R_30 round) (M_31 votemap))
               (= (_1__one_b_msg N_29 R_30 M_31)
                  (or (_0__one_b_msg N_29 R_30 M_31)
                      (and (= N_29 n_21) (= R_30 r_22) (= M_31 m_23))))))
        (a!3 (forall ((N_34 node) (R_35 round))
               (= (_1__joined_round N_34 R_35)
                  (or (_0__joined_round N_34 R_35)
                      (and (= N_34 n_21) (= R_35 r_22)))))))
    (and (distinct r_22 none)
         (_0__one_a r_22)
         (not (_0__left_round n_21 r_22))
         a!1
         a!2
         (forall ((N_32 node) (R_33 round))
           (let ((a!1 (or (_0__left_round N_32 R_33)
                          (and (= N_32 n_21) (not (le r_22 R_33))))))
             (= (_1__left_round N_32 R_33) a!1)))
         a!3
         (forall ((x0_36 round)) (= (_1__one_a x0_36) (_0__one_a x0_36)))
         (forall ((x0_37 inst) (x1_38 round) (x2_39 value))
           (= (_1__proposal x0_37 x1_38 x2_39) (_0__proposal x0_37 x1_38 x2_39)))
         (forall ((x0_40 round)) (= (_1__active x0_40) (_0__active x0_40)))
         (forall ((x0_41 node) (x1_42 inst) (x2_43 round) (x3_44 value))
           (= (_1__vote x0_41 x1_42 x2_43 x3_44)
              (_0__vote x0_41 x1_42 x2_43 x3_44)))
         (forall ((x0_45 node) (x1_46 inst) (x2_47 round) (x3_48 value))
           (= (_1__decision x0_45 x1_46 x2_47 x3_48)
              (_0__decision x0_45 x1_46 x2_47 x3_48)))))) :action true))
(define-fun transition_2 () Bool (! (exists ((r_49 round) (q_50 quorum) (m_51 votemap) (im_52 inst))
  (let ((a!1 (forall ((I_54 inst))
               (let ((a!1 (exists ((N_58 node) (R_59 round) (V_60 value))
                            (and (member N_58 q_50)
                                 (not (le r_49 R_59))
                                 (_0__vote N_58 I_54 R_59 V_60)
                                 (= R_59 (maxr m_51 I_54))
                                 (= V_60 (maxv m_51 I_54)))))
                     (a!2 (forall ((N_61 node) (R_62 round) (V_63 value))
                            (let ((a!1 (and (member N_61 q_50)
                                            (not (le r_49 R_62))
                                            (_0__vote N_61 I_54 R_62 V_63))))
                              (=> a!1 (le R_62 (maxr m_51 I_54)))))))
                 (or (and (= (maxr m_51 I_54) none)
                          (forall ((N_55 node) (R_56 round) (V_57 value))
                            (let ((a!1 (and (member N_55 q_50)
                                            (not (le r_49 R_56))
                                            (_0__vote N_55 I_54 R_56 V_57))))
                              (not a!1))))
                     (and a!1 a!2)))))
        (a!2 (forall ((R_64 round))
               (= (_1__active R_64) (or (_0__active R_64) (= R_64 r_49)))))
        (a!3 (forall ((I_69 inst))
               (let ((a!1 (and (distinct (maxr m_51 I_69) none)
                               (= (maxv m_51 I_69) stop))))
                 (=> a!1 (le (maxr m_51 I_69) (maxr m_51 im_52))))))
        (a!4 (exists ((I_70 inst))
               (and (not (inst_le I_70 im_52))
                    (distinct (maxr m_51 I_70) none)
                    (not (le (maxr m_51 I_70) (maxr m_51 im_52)))))))
  (let ((a!5 (ite a!4
                  (forall ((I_71 inst) (R_72 round) (V_73 value))
                    (let ((a!1 (and (not (inst_le I_71 im_52))
                                    (not (le (maxr m_51 im_52) (maxr m_51 I_71))))))
                    (let ((a!2 (not (or (= (maxv m_51 I_71) stop) a!1))))
                    (let ((a!3 (or (_0__proposal I_71 R_72 V_73)
                                   (and (= R_72 r_49)
                                        (distinct (maxr m_51 I_71) none)
                                        (= V_73 (maxv m_51 I_71))
                                        a!2))))
                      (= (_1__proposal I_71 R_72 V_73) a!3)))))
                  (forall ((I_74 inst) (R_75 round) (V_76 value))
                    (let ((a!1 (or (and (distinct I_74 im_52)
                                        (= (maxv m_51 I_74) stop))
                                   (not (inst_le I_74 im_52)))))
                    (let ((a!2 (or (_0__proposal I_74 R_75 V_76)
                                   (and (= R_75 r_49)
                                        (distinct (maxr m_51 I_74) none)
                                        (= V_76 (maxv m_51 I_74))
                                        (not a!1)))))
                      (= (_1__proposal I_74 R_75 V_76) a!2)))))))
  (let ((a!6 (ite (forall ((I_65 inst))
                    (let ((a!1 (and (distinct (maxr m_51 I_65) none)
                                    (= (maxv m_51 I_65) stop))))
                      (not a!1)))
                  (forall ((I_66 inst) (R_67 round) (V_68 value))
                    (let ((a!1 (or (_0__proposal I_66 R_67 V_68)
                                   (and (= R_67 r_49)
                                        (distinct (maxr m_51 I_66) none)
                                        (= V_68 (maxv m_51 I_66))))))
                      (= (_1__proposal I_66 R_67 V_68) a!1)))
                  (and (distinct (maxr m_51 im_52) none)
                       (= (maxv m_51 im_52) stop)
                       a!3
                       a!5))))
    (and (distinct r_49 none)
         (not (_0__active r_49))
         (forall ((N_53 node))
           (=> (member N_53 q_50) (_0__joined_round N_53 r_49)))
         a!1
         a!2
         a!6
         (forall ((x0_77 round)) (= (_1__one_a x0_77) (_0__one_a x0_77)))
         (forall ((x0_78 node) (x1_79 round) (x2_80 votemap))
           (= (_1__one_b_msg x0_78 x1_79 x2_80)
              (_0__one_b_msg x0_78 x1_79 x2_80)))
         (forall ((x0_81 node) (x1_82 round))
           (= (_1__left_round x0_81 x1_82) (_0__left_round x0_81 x1_82)))
         (forall ((x0_83 node) (x1_84 round))
           (= (_1__joined_round x0_83 x1_84) (_0__joined_round x0_83 x1_84)))
         (forall ((x0_85 node) (x1_86 inst) (x2_87 round) (x3_88 value))
           (= (_1__vote x0_85 x1_86 x2_87 x3_88)
              (_0__vote x0_85 x1_86 x2_87 x3_88)))
         (forall ((x0_89 node) (x1_90 inst) (x2_91 round) (x3_92 value))
           (= (_1__decision x0_89 x1_90 x2_91 x3_92)
              (_0__decision x0_89 x1_90 x2_91 x3_92)))))))) :action true))
(define-fun transition_3 () Bool (! (exists ((r_93 round) (i_94 inst) (v_95 value))
  (let ((a!1 (forall ((V_96 value) (I_97 inst))
               (let ((a!1 (not (and (not (inst_le i_94 I_97))
                                    (_0__proposal I_97 r_93 stop))))
                     (a!2 (not (and (not (inst_le I_97 i_94))
                                    (_0__proposal I_97 r_93 V_96)
                                    (= v_95 stop))))
                     (a!3 (forall ((I_98 inst) (R_99 round) (V_100 value))
                            (= (_1__proposal I_98 R_99 V_100)
                               (or (_0__proposal I_98 R_99 V_100)
                                   (and (= I_98 i_94)
                                        (= R_99 r_93)
                                        (= V_100 v_95)))))))
                 (and (distinct r_93 none)
                      (_0__active r_93)
                      (not (_0__proposal i_94 r_93 V_96))
                      a!1
                      a!2
                      a!3)))))
    (and a!1
         (forall ((x0_101 round)) (= (_1__one_a x0_101) (_0__one_a x0_101)))
         (forall ((x0_102 node) (x1_103 round) (x2_104 votemap))
           (= (_1__one_b_msg x0_102 x1_103 x2_104)
              (_0__one_b_msg x0_102 x1_103 x2_104)))
         (forall ((x0_105 node) (x1_106 round))
           (= (_1__left_round x0_105 x1_106) (_0__left_round x0_105 x1_106)))
         (forall ((x0_107 node) (x1_108 round))
           (= (_1__joined_round x0_107 x1_108) (_0__joined_round x0_107 x1_108)))
         (forall ((x0_109 round)) (= (_1__active x0_109) (_0__active x0_109)))
         (forall ((x0_110 node) (x1_111 inst) (x2_112 round) (x3_113 value))
           (= (_1__vote x0_110 x1_111 x2_112 x3_113)
              (_0__vote x0_110 x1_111 x2_112 x3_113)))
         (forall ((x0_114 node) (x1_115 inst) (x2_116 round) (x3_117 value))
           (= (_1__decision x0_114 x1_115 x2_116 x3_117)
              (_0__decision x0_114 x1_115 x2_116 x3_117)))))) :action true))
(define-fun transition_4 () Bool (! (exists ((n_118 node) (v_119 value) (r_120 round) (i_121 inst))
  (let ((a!1 (forall ((N_122 node) (I_123 inst) (R_124 round) (V_125 value))
               (= (_1__vote N_122 I_123 R_124 V_125)
                  (or (_0__vote N_122 I_123 R_124 V_125)
                      (and (= N_122 n_118)
                           (= I_123 i_121)
                           (= R_124 r_120)
                           (= V_125 v_119)))))))
    (and (distinct r_120 none)
         (not (_0__left_round n_118 r_120))
         (_0__proposal i_121 r_120 v_119)
         a!1
         (forall ((x0_126 round)) (= (_1__one_a x0_126) (_0__one_a x0_126)))
         (forall ((x0_127 node) (x1_128 round) (x2_129 votemap))
           (= (_1__one_b_msg x0_127 x1_128 x2_129)
              (_0__one_b_msg x0_127 x1_128 x2_129)))
         (forall ((x0_130 node) (x1_131 round))
           (= (_1__left_round x0_130 x1_131) (_0__left_round x0_130 x1_131)))
         (forall ((x0_132 node) (x1_133 round))
           (= (_1__joined_round x0_132 x1_133) (_0__joined_round x0_132 x1_133)))
         (forall ((x0_134 inst) (x1_135 round) (x2_136 value))
           (= (_1__proposal x0_134 x1_135 x2_136)
              (_0__proposal x0_134 x1_135 x2_136)))
         (forall ((x0_137 round)) (= (_1__active x0_137) (_0__active x0_137)))
         (forall ((x0_138 node) (x1_139 inst) (x2_140 round) (x3_141 value))
           (= (_1__decision x0_138 x1_139 x2_140 x3_141)
              (_0__decision x0_138 x1_139 x2_140 x3_141)))))) :action true))
(define-fun transition_5 () Bool (! (exists ((n_142 node) (r_143 round) (v_144 value) (q_145 quorum) (i_146 inst))
  (let ((a!1 (forall ((N_147 node))
               (let ((a!1 (forall ((N_148 node)
                                   (I_149 inst)
                                   (R_150 round)
                                   (V_151 value))
                            (= (_1__decision N_148 I_149 R_150 V_151)
                               (or (_0__decision N_148 I_149 R_150 V_151)
                                   (and (= N_148 n_142)
                                        (= I_149 i_146)
                                        (= R_150 r_143)
                                        (= V_151 v_144)))))))
                 (and (distinct r_143 none)
                      (=> (member N_147 q_145)
                          (_0__vote N_147 i_146 r_143 v_144))
                      a!1)))))
    (and a!1
         (forall ((x0_152 round)) (= (_1__one_a x0_152) (_0__one_a x0_152)))
         (forall ((x0_153 node) (x1_154 round) (x2_155 votemap))
           (= (_1__one_b_msg x0_153 x1_154 x2_155)
              (_0__one_b_msg x0_153 x1_154 x2_155)))
         (forall ((x0_156 node) (x1_157 round))
           (= (_1__left_round x0_156 x1_157) (_0__left_round x0_156 x1_157)))
         (forall ((x0_158 node) (x1_159 round))
           (= (_1__joined_round x0_158 x1_159) (_0__joined_round x0_158 x1_159)))
         (forall ((x0_160 inst) (x1_161 round) (x2_162 value))
           (= (_1__proposal x0_160 x1_161 x2_162)
              (_0__proposal x0_160 x1_161 x2_162)))
         (forall ((x0_163 round)) (= (_1__active x0_163) (_0__active x0_163)))
         (forall ((x0_164 node) (x1_165 inst) (x2_166 round) (x3_167 value))
           (= (_1__vote x0_164 x1_165 x2_166 x3_167)
              (_0__vote x0_164 x1_165 x2_166 x3_167)))))) :action true))
(define-fun safety-prop () Bool (!(let ((a!1 (forall ((N1_0 node)
                    (N2_1 node)
                    (I_2 inst)
                    (R1_3 round)
                    (R2_4 round)
                    (V1_5 value)
                    (V2_6 value))
             (=> (and (_0__decision N1_0 I_2 R1_3 V1_5)
                      (_0__decision N2_1 I_2 R2_4 V2_6))
                 (= V1_5 V2_6))))
      (a!2 (forall ((V_7 value))
             (forall ((N1_8 node)
                      (N2_9 node)
                      (I1_10 inst)
                      (I2_11 inst)
                      (R1_12 round)
                      (R2_13 round))
               (=> (and (_0__decision N1_8 I1_10 R1_12 stop)
                        (not (inst_le I2_11 I1_10)))
                   (not (_0__decision N2_9 I2_11 R2_13 V_7)))))))
  (and a!1 a!2)) :invar-property 0))
(define-fun invariant_0 () Bool (! (forall ((N1_0 node)
         (N2_1 node)
         (I_2 inst)
         (R1_3 round)
         (R2_4 round)
         (V1_5 value)
         (V2_6 value))
  (=> (and (_0__decision N1_0 I_2 R1_3 V1_5) (_0__decision N2_1 I_2 R2_4 V2_6))
      (= V1_5 V2_6))) :invar-property 0))
(define-fun invariant_1 () Bool (! (forall ((V_7 value))
  (forall ((N1_8 node)
           (N2_9 node)
           (I1_10 inst)
           (I2_11 inst)
           (R1_12 round)
           (R2_13 round))
    (=> (and (_0__decision N1_8 I1_10 R1_12 stop) (not (inst_le I2_11 I1_10)))
        (not (_0__decision N2_9 I2_11 R2_13 V_7))))) :invar-property 1))
(define-fun invariant_2 () Bool (! (forall ((I_14 inst) (R_15 round) (V_16 value))
  (=> (_0__proposal I_14 R_15 V_16) (_0__active R_15))) :invar-property 2))
(define-fun invariant_3 () Bool (! (forall ((I_17 inst) (R_18 round) (V1_19 value) (V2_20 value))
  (=> (and (_0__proposal I_17 R_18 V1_19) (_0__proposal I_17 R_18 V2_20))
      (= V1_19 V2_20))) :invar-property 3))
(define-fun invariant_4 () Bool (! (forall ((N_21 node) (I_22 inst) (R_23 round) (V_24 value))
  (=> (_0__vote N_21 I_22 R_23 V_24) (_0__proposal I_22 R_23 V_24))) :invar-property 4))
(define-fun invariant_5 () Bool (! (forall ((I_25 inst) (R_26 round) (V_27 value))
  (let ((a!1 (exists ((Q_29 quorum))
               (forall ((N_30 node))
                 (=> (member N_30 Q_29) (_0__vote N_30 I_25 R_26 V_27))))))
    (=> (exists ((N_28 node)) (_0__decision N_28 I_25 R_26 V_27)) a!1))) :invar-property 5))
(define-fun invariant_6 () Bool (! (forall ((N_31 node)
         (R2_32 round)
         (M_33 votemap)
         (I_34 inst)
         (R1_35 round)
         (V2_36 value))
  (=> (and (_0__one_b_msg N_31 R2_32 M_33)
           (= (maxr M_33 I_34) none)
           (not (le R2_32 R1_35)))
      (not (_0__vote N_31 I_34 R1_35 V2_36)))) :invar-property 6))
(define-fun invariant_7 () Bool (! (forall ((N_37 node) (R_38 round) (M_39 votemap) (I_40 inst))
  (let ((a!1 (and (not (le R_38 (maxr M_39 I_40)))
                  (_0__vote N_37 I_40 (maxr M_39 I_40) (maxv M_39 I_40)))))
    (=> (and (_0__one_b_msg N_37 R_38 M_39) (distinct (maxr M_39 I_40) none))
        a!1))) :invar-property 7))
(define-fun invariant_8 () Bool (! (forall ((N_41 node)
         (R_42 round)
         (M_43 votemap)
         (I_44 inst)
         (ROTHER_45 round)
         (VOTHER_46 value))
  (let ((a!1 (and (_0__one_b_msg N_41 R_42 M_43)
                  (distinct (maxr M_43 I_44) none)
                  (not (le R_42 ROTHER_45))
                  (not (le ROTHER_45 (maxr M_43 I_44))))))
    (=> a!1 (not (_0__vote N_41 I_44 ROTHER_45 VOTHER_46))))) :invar-property 8))
(define-fun invariant_9 () Bool (! (forall ((I_47 inst) (V_48 value)) (not (_0__proposal I_47 none V_48))) :invar-property 9))
(define-fun invariant_10 () Bool (! (forall ((N_49 node) (I_50 inst) (V_51 value))
  (not (_0__vote N_49 I_50 none V_51))) :invar-property 10))
(define-fun invariant_11 () Bool (! (forall ((N_52 node) (I_53 inst) (V_54 value))
  (not (_0__decision N_52 I_53 none V_54))) :invar-property 11))
(define-fun invariant_12 () Bool (! (forall ((N_55 node) (M_56 votemap)) (not (_0__one_b_msg N_55 none M_56))) :invar-property 12))
(define-fun invariant_13 () Bool (! (not (_0__active none)) :invar-property 13))
(define-fun invariant_14 () Bool (! (forall ((I_57 inst) (R1_58 round) (R2_59 round) (V_60 value) (Q_61 quorum))
  (let ((a!1 (exists ((N_62 node))
               (and (member N_62 Q_61)
                    (_0__left_round N_62 R1_58)
                    (not (_0__vote N_62 I_57 R1_58 V_60))))))
    (=> (and (not (le R2_59 R1_58))
             (_0__active R2_59)
             (not (_0__proposal I_57 R2_59 V_60)))
        a!1))) :invar-property 14))
(define-fun invariant_15 () Bool (! (forall ((I1_63 inst) (R_64 round) (I2_65 inst) (V_66 value))
  (=> (and (_0__proposal I1_63 R_64 stop) (not (inst_le I2_65 I1_63)))
      (not (_0__proposal I2_65 R_64 V_66)))) :invar-property 15))
(define-fun invariant_16 () Bool (! (forall ((N_67 node) (R2_68 round) (R1_69 round))
  (=> (and (_0__joined_round N_67 R2_68) (not (le R2_68 R1_69)))
      (_0__left_round N_67 R1_69))) :invar-property 16))
(define-fun invariant_17 () Bool (! (forall ((N_70 node) (R_71 round) (M_72 votemap))
  (=> (_0__one_b_msg N_70 R_71 M_72) (_0__joined_round N_70 R_71))) :invar-property 17))

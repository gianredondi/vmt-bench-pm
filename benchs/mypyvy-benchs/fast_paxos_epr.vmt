(declare-sort node 0)
(declare-sort value 0)
(declare-sort quorum_c 0)
(declare-sort quorum_f 0)
(declare-sort round 0)
(declare-const none round)
(define-fun none.sv () round (! none :rigid true))
(declare-fun le (round round) Bool)
(declare-fun fast (round) Bool)
(declare-fun member_c (node quorum_c) Bool)
(declare-fun member_f (node quorum_f) Bool)
(declare-fun _0__one_a (round) Bool)
(declare-fun _1__one_a (round) Bool)
(define-fun _0__one_a.sv ((V0 round)) Bool (! (_0__one_a V0) :next _1__one_a))
(declare-fun _0__one_b (node round) Bool)
(declare-fun _1__one_b (node round) Bool)
(define-fun _0__one_b.sv ((V0 node) (V1 round)) Bool (! (_0__one_b V0 V1) :next _1__one_b))
(declare-fun _0__left_round (node round) Bool)
(declare-fun _1__left_round (node round) Bool)
(define-fun _0__left_round.sv ((V0 node) (V1 round)) Bool (! (_0__left_round V0 V1) :next _1__left_round))
(declare-fun _0__proposal (round value) Bool)
(declare-fun _1__proposal (round value) Bool)
(define-fun _0__proposal.sv ((V0 round) (V1 value)) Bool (! (_0__proposal V0 V1) :next _1__proposal))
(declare-fun _0__vote (node round value) Bool)
(declare-fun _1__vote (node round value) Bool)
(define-fun _0__vote.sv ((V0 node) (V1 round) (V2 value)) Bool (! (_0__vote V0 V1 V2) :next _1__vote))
(declare-fun _0__decision (round value) Bool)
(declare-fun _1__decision (round value) Bool)
(define-fun _0__decision.sv ((V0 round) (V1 value)) Bool (! (_0__decision V0 V1) :next _1__decision))
(declare-fun _0__any_msg (round) Bool)
(declare-fun _1__any_msg (round) Bool)
(define-fun _0__any_msg.sv ((V0 round)) Bool (! (_0__any_msg V0) :next _1__any_msg))
(define-fun axiom_0 () Bool (! (forall ((X_0 round)) (le X_0 X_0)) :axiom true))
(define-fun axiom_1 () Bool (! (forall ((X_1 round) (Y_2 round) (Z_3 round))
  (=> (and (le X_1 Y_2) (le Y_2 Z_3)) (le X_1 Z_3))) :axiom true))
(define-fun axiom_2 () Bool (! (forall ((X_4 round) (Y_5 round))
  (=> (and (le X_4 Y_5) (le Y_5 X_4)) (= X_4 Y_5))) :axiom true))
(define-fun axiom_3 () Bool (! (forall ((X_6 round) (Y_7 round)) (or (le X_6 Y_7) (le Y_7 X_6))) :axiom true))
(define-fun axiom_4 () Bool (! (forall ((Q1_8 quorum_c) (Q2_9 quorum_c))
  (exists ((N_10 node)) (and (member_c N_10 Q1_8) (member_c N_10 Q2_9)))) :axiom true))
(define-fun axiom_5 () Bool (! (forall ((Q1_11 quorum_c) (Q2_12 quorum_f) (Q3_13 quorum_f))
  (exists ((N_14 node))
    (and (member_c N_14 Q1_11) (member_f N_14 Q2_12) (member_f N_14 Q3_13)))) :axiom true))
(define-fun init () Bool (! (and (forall ((R_0 round)) (not (_0__one_a R_0)))
     (forall ((N_1 node) (R_2 round)) (not (_0__one_b N_1 R_2)))
     (forall ((N_3 node) (R_4 round)) (not (_0__left_round N_3 R_4)))
     (forall ((R_5 round) (V_6 value)) (not (_0__proposal R_5 V_6)))
     (forall ((N_7 node) (R_8 round) (V_9 value)) (not (_0__vote N_7 R_8 V_9)))
     (forall ((R_10 round) (V_11 value)) (not (_0__decision R_10 V_11)))
     (forall ((R_12 round)) (not (_0__any_msg R_12)))) :init true))
(define-fun transition_0 () Bool (! (exists ((r_0 round))
  (let ((a!1 (forall ((R_1 round))
               (= (_1__one_a R_1) (or (_0__one_a R_1) (= R_1 r_0))))))
    (and (distinct r_0 none)
         a!1
         (forall ((x0_2 node) (x1_3 round))
           (= (_1__one_b x0_2 x1_3) (_0__one_b x0_2 x1_3)))
         (forall ((x0_4 node) (x1_5 round))
           (= (_1__left_round x0_4 x1_5) (_0__left_round x0_4 x1_5)))
         (forall ((x0_6 round) (x1_7 value))
           (= (_1__proposal x0_6 x1_7) (_0__proposal x0_6 x1_7)))
         (forall ((x0_8 node) (x1_9 round) (x2_10 value))
           (= (_1__vote x0_8 x1_9 x2_10) (_0__vote x0_8 x1_9 x2_10)))
         (forall ((x0_11 round) (x1_12 value))
           (= (_1__decision x0_11 x1_12) (_0__decision x0_11 x1_12)))
         (forall ((x0_13 round)) (= (_1__any_msg x0_13) (_0__any_msg x0_13)))))) :action true))
(define-fun transition_1 () Bool (! (exists ((n_14 node) (r_15 round))
  (let ((a!1 (forall ((N_16 node) (R_17 round))
               (= (_1__one_b N_16 R_17)
                  (or (_0__one_b N_16 R_17) (and (= N_16 n_14) (= R_17 r_15)))))))
    (and (distinct r_15 none)
         (_0__one_a r_15)
         (not (_0__left_round n_14 r_15))
         a!1
         (forall ((N_18 node) (R_19 round))
           (let ((a!1 (or (_0__left_round N_18 R_19)
                          (and (= N_18 n_14) (not (le r_15 R_19))))))
             (= (_1__left_round N_18 R_19) a!1)))
         (forall ((x0_20 round)) (= (_1__one_a x0_20) (_0__one_a x0_20)))
         (forall ((x0_21 round) (x1_22 value))
           (= (_1__proposal x0_21 x1_22) (_0__proposal x0_21 x1_22)))
         (forall ((x0_23 node) (x1_24 round) (x2_25 value))
           (= (_1__vote x0_23 x1_24 x2_25) (_0__vote x0_23 x1_24 x2_25)))
         (forall ((x0_26 round) (x1_27 value))
           (= (_1__decision x0_26 x1_27) (_0__decision x0_26 x1_27)))
         (forall ((x0_28 round)) (= (_1__any_msg x0_28) (_0__any_msg x0_28)))))) :action true))
(define-fun transition_2 () Bool (! (exists ((r_29 round)
         (q_30 quorum_c)
         (maxr_31 round)
         (v_32 value)
         (v2_33 value))
  (let ((a!1 (exists ((N_36 node))
               (and (member_c N_36 q_30)
                    (not (le r_29 maxr_31))
                    (_0__vote N_36 maxr_31 v_32))))
        (a!2 (forall ((N_37 node) (MAXR_38 round) (V_39 value))
               (=> (and (member_c N_37 q_30)
                        (not (le r_29 MAXR_38))
                        (_0__vote N_37 MAXR_38 V_39))
                   (le MAXR_38 maxr_31))))
        (a!3 (exists ((F_40 quorum_f))
               (forall ((N_41 node))
                 (not (and (member_f N_41 F_40)
                           (member_c N_41 q_30)
                           (not (_0__vote N_41 maxr_31 v2_33)))))))
        (a!4 (forall ((R_42 round) (V_43 value))
               (= (_1__proposal R_42 V_43)
                  (or (_0__proposal R_42 V_43)
                      (and (= R_42 r_29) (= V_43 v2_33)))))))
    (and (distinct r_29 none)
         (forall ((V_34 value)) (not (_0__proposal r_29 V_34)))
         (not (_0__any_msg r_29))
         (forall ((N_35 node)) (=> (member_c N_35 q_30) (_0__one_b N_35 r_29)))
         (distinct maxr_31 none)
         a!1
         a!2
         a!3
         a!4
         (forall ((x0_44 round)) (= (_1__one_a x0_44) (_0__one_a x0_44)))
         (forall ((x0_45 node) (x1_46 round))
           (= (_1__one_b x0_45 x1_46) (_0__one_b x0_45 x1_46)))
         (forall ((x0_47 node) (x1_48 round))
           (= (_1__left_round x0_47 x1_48) (_0__left_round x0_47 x1_48)))
         (forall ((x0_49 node) (x1_50 round) (x2_51 value))
           (= (_1__vote x0_49 x1_50 x2_51) (_0__vote x0_49 x1_50 x2_51)))
         (forall ((x0_52 round) (x1_53 value))
           (= (_1__decision x0_52 x1_53) (_0__decision x0_52 x1_53)))
         (forall ((x0_54 round)) (= (_1__any_msg x0_54) (_0__any_msg x0_54)))))) :action true))
(define-fun transition_3 () Bool (! (exists ((r_55 round) (q_56 quorum_c) (maxr_57 round) (v_58 value))
  (let ((a!1 (exists ((N_61 node))
               (and (member_c N_61 q_56)
                    (not (le r_55 maxr_57))
                    (_0__vote N_61 maxr_57 v_58))))
        (a!2 (forall ((N_62 node) (MAXR_63 round) (V_64 value))
               (=> (and (member_c N_62 q_56)
                        (not (le r_55 MAXR_63))
                        (_0__vote N_62 MAXR_63 V_64))
                   (le MAXR_63 maxr_57))))
        (a!3 (forall ((V2_65 value) (F_66 quorum_f))
               (exists ((N_67 node))
                 (and (member_f N_67 F_66)
                      (member_c N_67 q_56)
                      (not (_0__vote N_67 maxr_57 V2_65))))))
        (a!4 (forall ((R_68 round) (V_69 value))
               (= (_1__proposal R_68 V_69)
                  (or (_0__proposal R_68 V_69)
                      (and (= R_68 r_55) (= V_69 v_58)))))))
    (and (distinct r_55 none)
         (forall ((V_59 value)) (not (_0__proposal r_55 V_59)))
         (not (_0__any_msg r_55))
         (forall ((N_60 node)) (=> (member_c N_60 q_56) (_0__one_b N_60 r_55)))
         (distinct maxr_57 none)
         a!1
         a!2
         a!3
         a!4
         (forall ((x0_70 round)) (= (_1__one_a x0_70) (_0__one_a x0_70)))
         (forall ((x0_71 node) (x1_72 round))
           (= (_1__one_b x0_71 x1_72) (_0__one_b x0_71 x1_72)))
         (forall ((x0_73 node) (x1_74 round))
           (= (_1__left_round x0_73 x1_74) (_0__left_round x0_73 x1_74)))
         (forall ((x0_75 node) (x1_76 round) (x2_77 value))
           (= (_1__vote x0_75 x1_76 x2_77) (_0__vote x0_75 x1_76 x2_77)))
         (forall ((x0_78 round) (x1_79 value))
           (= (_1__decision x0_78 x1_79) (_0__decision x0_78 x1_79)))
         (forall ((x0_80 round)) (= (_1__any_msg x0_80) (_0__any_msg x0_80)))))) :action true))
(define-fun transition_4 () Bool (! (exists ((r_81 round) (q_82 quorum_c) (v_83 value))
  (let ((a!1 (forall ((N_86 node) (MAXR_87 round) (V_88 value))
               (not (and (member_c N_86 q_82)
                         (not (le r_81 MAXR_87))
                         (_0__vote N_86 MAXR_87 V_88)))))
        (a!2 (forall ((R_89 round))
               (= (_1__any_msg R_89) (or (_0__any_msg R_89) (= R_89 r_81))))))
    (and (distinct r_81 none)
         (forall ((V_84 value)) (not (_0__proposal r_81 V_84)))
         (not (_0__any_msg r_81))
         (forall ((N_85 node)) (=> (member_c N_85 q_82) (_0__one_b N_85 r_81)))
         a!1
         (fast r_81)
         a!2
         (forall ((x0_90 round)) (= (_1__one_a x0_90) (_0__one_a x0_90)))
         (forall ((x0_91 node) (x1_92 round))
           (= (_1__one_b x0_91 x1_92) (_0__one_b x0_91 x1_92)))
         (forall ((x0_93 node) (x1_94 round))
           (= (_1__left_round x0_93 x1_94) (_0__left_round x0_93 x1_94)))
         (forall ((x0_95 round) (x1_96 value))
           (= (_1__proposal x0_95 x1_96) (_0__proposal x0_95 x1_96)))
         (forall ((x0_97 node) (x1_98 round) (x2_99 value))
           (= (_1__vote x0_97 x1_98 x2_99) (_0__vote x0_97 x1_98 x2_99)))
         (forall ((x0_100 round) (x1_101 value))
           (= (_1__decision x0_100 x1_101) (_0__decision x0_100 x1_101)))))) :action true))
(define-fun transition_5 () Bool (! (exists ((r_102 round) (q_103 quorum_c) (v_104 value))
  (let ((a!1 (forall ((N_107 node) (MAXR_108 round) (V_109 value))
               (not (and (member_c N_107 q_103)
                         (not (le r_102 MAXR_108))
                         (_0__vote N_107 MAXR_108 V_109)))))
        (a!2 (forall ((R_110 round) (V_111 value))
               (= (_1__proposal R_110 V_111)
                  (or (_0__proposal R_110 V_111)
                      (and (= R_110 r_102) (= V_111 v_104)))))))
    (and (distinct r_102 none)
         (forall ((V_105 value)) (not (_0__proposal r_102 V_105)))
         (not (_0__any_msg r_102))
         (forall ((N_106 node))
           (=> (member_c N_106 q_103) (_0__one_b N_106 r_102)))
         a!1
         (not (fast r_102))
         a!2
         (forall ((x0_112 round)) (= (_1__one_a x0_112) (_0__one_a x0_112)))
         (forall ((x0_113 node) (x1_114 round))
           (= (_1__one_b x0_113 x1_114) (_0__one_b x0_113 x1_114)))
         (forall ((x0_115 node) (x1_116 round))
           (= (_1__left_round x0_115 x1_116) (_0__left_round x0_115 x1_116)))
         (forall ((x0_117 node) (x1_118 round) (x2_119 value))
           (= (_1__vote x0_117 x1_118 x2_119) (_0__vote x0_117 x1_118 x2_119)))
         (forall ((x0_120 round) (x1_121 value))
           (= (_1__decision x0_120 x1_121) (_0__decision x0_120 x1_121)))
         (forall ((x0_122 round)) (= (_1__any_msg x0_122) (_0__any_msg x0_122)))))) :action true))
(define-fun transition_6 () Bool (! (exists ((n_123 node) (v_124 value) (r_125 round))
  (let ((a!1 (forall ((N_127 node) (R_128 round) (V_129 value))
               (= (_1__vote N_127 R_128 V_129)
                  (or (_0__vote N_127 R_128 V_129)
                      (and (= N_127 n_123) (= R_128 r_125) (= V_129 v_124)))))))
    (and (distinct r_125 none)
         (not (_0__left_round n_123 r_125))
         (forall ((V_126 value)) (not (_0__vote n_123 r_125 V_126)))
         (or (_0__proposal r_125 v_124) (_0__any_msg r_125))
         a!1
         (forall ((x0_130 round)) (= (_1__one_a x0_130) (_0__one_a x0_130)))
         (forall ((x0_131 node) (x1_132 round))
           (= (_1__one_b x0_131 x1_132) (_0__one_b x0_131 x1_132)))
         (forall ((x0_133 node) (x1_134 round))
           (= (_1__left_round x0_133 x1_134) (_0__left_round x0_133 x1_134)))
         (forall ((x0_135 round) (x1_136 value))
           (= (_1__proposal x0_135 x1_136) (_0__proposal x0_135 x1_136)))
         (forall ((x0_137 round) (x1_138 value))
           (= (_1__decision x0_137 x1_138) (_0__decision x0_137 x1_138)))
         (forall ((x0_139 round)) (= (_1__any_msg x0_139) (_0__any_msg x0_139)))))) :action true))
(define-fun transition_7 () Bool (! (exists ((r_140 round) (v_141 value) (q_142 quorum_c))
  (let ((a!1 (forall ((R_144 round) (V_145 value))
               (= (_1__decision R_144 V_145)
                  (or (_0__decision R_144 V_145)
                      (and (= R_144 r_140) (= V_145 v_141)))))))
    (and (distinct r_140 none)
         (not (fast r_140))
         (forall ((N_143 node))
           (=> (member_c N_143 q_142) (_0__vote N_143 r_140 v_141)))
         a!1
         (forall ((x0_146 round)) (= (_1__one_a x0_146) (_0__one_a x0_146)))
         (forall ((x0_147 node) (x1_148 round))
           (= (_1__one_b x0_147 x1_148) (_0__one_b x0_147 x1_148)))
         (forall ((x0_149 node) (x1_150 round))
           (= (_1__left_round x0_149 x1_150) (_0__left_round x0_149 x1_150)))
         (forall ((x0_151 round) (x1_152 value))
           (= (_1__proposal x0_151 x1_152) (_0__proposal x0_151 x1_152)))
         (forall ((x0_153 node) (x1_154 round) (x2_155 value))
           (= (_1__vote x0_153 x1_154 x2_155) (_0__vote x0_153 x1_154 x2_155)))
         (forall ((x0_156 round)) (= (_1__any_msg x0_156) (_0__any_msg x0_156)))))) :action true))
(define-fun transition_8 () Bool (! (exists ((r_157 round) (v_158 value) (q_159 quorum_f))
  (let ((a!1 (forall ((R_161 round) (V_162 value))
               (= (_1__decision R_161 V_162)
                  (or (_0__decision R_161 V_162)
                      (and (= R_161 r_157) (= V_162 v_158)))))))
    (and (distinct r_157 none)
         (fast r_157)
         (forall ((N_160 node))
           (=> (member_f N_160 q_159) (_0__vote N_160 r_157 v_158)))
         a!1
         (forall ((x0_163 round)) (= (_1__one_a x0_163) (_0__one_a x0_163)))
         (forall ((x0_164 node) (x1_165 round))
           (= (_1__one_b x0_164 x1_165) (_0__one_b x0_164 x1_165)))
         (forall ((x0_166 node) (x1_167 round))
           (= (_1__left_round x0_166 x1_167) (_0__left_round x0_166 x1_167)))
         (forall ((x0_168 round) (x1_169 value))
           (= (_1__proposal x0_168 x1_169) (_0__proposal x0_168 x1_169)))
         (forall ((x0_170 node) (x1_171 round) (x2_172 value))
           (= (_1__vote x0_170 x1_171 x2_172) (_0__vote x0_170 x1_171 x2_172)))
         (forall ((x0_173 round)) (= (_1__any_msg x0_173) (_0__any_msg x0_173)))))) :action true))
(define-fun safety-prop () Bool (!(let ((a!1 (forall ((R1_0 round) (V1_1 value) (R2_2 round) (V2_3 value))
             (=> (and (_0__decision R1_0 V1_1) (_0__decision R2_2 V2_3))
                 (= V1_1 V2_3)))))
  (and a!1)) :invar-property 0))
(define-fun invariant_0 () Bool (! (forall ((R1_0 round) (V1_1 value) (R2_2 round) (V2_3 value))
  (=> (and (_0__decision R1_0 V1_1) (_0__decision R2_2 V2_3)) (= V1_1 V2_3))) :invar-property 0))
(define-fun invariant_1 () Bool (! (forall ((R_4 round) (V1_5 value) (V2_6 value))
  (=> (and (_0__proposal R_4 V1_5) (_0__proposal R_4 V2_6)) (= V1_5 V2_6))) :invar-property 1))
(define-fun invariant_2 () Bool (! (forall ((R_7 round)) (=> (_0__any_msg R_7) (fast R_7))) :invar-property 2))
(define-fun invariant_3 () Bool (! (forall ((R_8 round) (N_9 node) (V_10 value))
  (=> (and (not (fast R_8)) (_0__vote N_9 R_8 V_10)) (_0__proposal R_8 V_10))) :invar-property 3))
(define-fun invariant_4 () Bool (! (forall ((R_11 round) (N_12 node) (V_13 value))
  (=> (and (fast R_11) (_0__vote N_12 R_11 V_13))
      (or (_0__proposal R_11 V_13) (_0__any_msg R_11)))) :invar-property 4))
(define-fun invariant_5 () Bool (! (forall ((R_14 round) (V_15 value))
  (not (and (_0__any_msg R_14) (_0__proposal R_14 V_15)))) :invar-property 5))
(define-fun invariant_6 () Bool (! (forall ((R_16 round) (N_17 node) (V1_18 value) (V2_19 value))
  (=> (and (fast R_16) (_0__vote N_17 R_16 V1_18) (_0__vote N_17 R_16 V2_19))
      (= V1_18 V2_19))) :invar-property 6))
(define-fun invariant_7 () Bool (! (forall ((R_20 round) (V_21 value))
  (let ((a!1 (exists ((Q_22 quorum_c))
               (forall ((N_23 node))
                 (=> (member_c N_23 Q_22) (_0__vote N_23 R_20 V_21))))))
    (=> (and (not (fast R_20)) (_0__decision R_20 V_21)) a!1))) :invar-property 7))
(define-fun invariant_8 () Bool (! (forall ((R_24 round) (V_25 value))
  (let ((a!1 (exists ((Q_26 quorum_f))
               (forall ((N_27 node))
                 (=> (member_f N_27 Q_26) (_0__vote N_27 R_24 V_25))))))
    (=> (and (fast R_24) (_0__decision R_24 V_25)) a!1))) :invar-property 8))
(define-fun invariant_9 () Bool (! (forall ((N_28 node) (R2_29 round) (R1_30 round))
  (=> (and (_0__one_b N_28 R2_29) (not (le R2_29 R1_30)))
      (_0__left_round N_28 R1_30))) :invar-property 9))
(define-fun invariant_10 () Bool (! (forall ((R1_31 round)
         (R2_32 round)
         (V1_33 value)
         (V2_34 value)
         (Q_35 quorum_c))
  (let ((a!1 (and (not (fast R1_31))
                  (not (le R2_32 R1_31))
                  (or (and (_0__proposal R2_32 V2_34) (distinct V1_33 V2_34))
                      (_0__any_msg R2_32))))
        (a!2 (exists ((N_36 node))
               (and (member_c N_36 Q_35)
                    (_0__left_round N_36 R1_31)
                    (not (_0__vote N_36 R1_31 V1_33))))))
    (=> a!1 a!2))) :invar-property 10))
(define-fun invariant_11 () Bool (! (forall ((R1_37 round)
         (R2_38 round)
         (V1_39 value)
         (V2_40 value)
         (Q_41 quorum_f))
  (let ((a!1 (and (fast R1_37)
                  (not (le R2_38 R1_37))
                  (or (and (_0__proposal R2_38 V2_40) (distinct V1_39 V2_40))
                      (_0__any_msg R2_38))))
        (a!2 (exists ((N_42 node))
               (and (member_f N_42 Q_41)
                    (_0__left_round N_42 R1_37)
                    (not (_0__vote N_42 R1_37 V1_39))))))
    (=> a!1 a!2))) :invar-property 11))

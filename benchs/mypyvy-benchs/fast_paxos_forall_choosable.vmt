(declare-sort node 0)
(declare-sort value 0)
(declare-sort quorum_c 0)
(declare-sort quorum_f 0)
(declare-sort round 0)
(declare-const none round)
(define-fun none.sv () round (! none :rigid true))
(declare-fun le (round round) Bool)
(declare-fun fast (round) Bool)
(declare-fun member_c (node quorum_c) Bool)
(declare-fun member_f (node quorum_f) Bool)
(declare-fun _0__one_a (round) Bool)
(declare-fun _1__one_a (round) Bool)
(define-fun _0__one_a.sv ((V0 round)) Bool (! (_0__one_a V0) :next _1__one_a))
(declare-fun _0__one_b (node round) Bool)
(declare-fun _1__one_b (node round) Bool)
(define-fun _0__one_b.sv ((V0 node) (V1 round)) Bool (! (_0__one_b V0 V1) :next _1__one_b))
(declare-fun _0__left_round (node round) Bool)
(declare-fun _1__left_round (node round) Bool)
(define-fun _0__left_round.sv ((V0 node) (V1 round)) Bool (! (_0__left_round V0 V1) :next _1__left_round))
(declare-fun _0__proposal (round value) Bool)
(declare-fun _1__proposal (round value) Bool)
(define-fun _0__proposal.sv ((V0 round) (V1 value)) Bool (! (_0__proposal V0 V1) :next _1__proposal))
(declare-fun _0__vote (node round value) Bool)
(declare-fun _1__vote (node round value) Bool)
(define-fun _0__vote.sv ((V0 node) (V1 round) (V2 value)) Bool (! (_0__vote V0 V1 V2) :next _1__vote))
(declare-fun _0__decision (round value) Bool)
(declare-fun _1__decision (round value) Bool)
(define-fun _0__decision.sv ((V0 round) (V1 value)) Bool (! (_0__decision V0 V1) :next _1__decision))
(declare-fun _0__any_msg (round) Bool)
(declare-fun _1__any_msg (round) Bool)
(define-fun _0__any_msg.sv ((V0 round)) Bool (! (_0__any_msg V0) :next _1__any_msg))
(declare-fun _0__choosable_c (round value quorum_c) Bool)
(declare-fun _1__choosable_c (round value quorum_c) Bool)
(define-fun _0__choosable_c.sv ((V0 round) (V1 value) (V2 quorum_c)) Bool (! (_0__choosable_c V0 V1 V2) :next _1__choosable_c))
(declare-fun _0__choosable_f (round value quorum_f) Bool)
(declare-fun _1__choosable_f (round value quorum_f) Bool)
(define-fun _0__choosable_f.sv ((V0 round) (V1 value) (V2 quorum_f)) Bool (! (_0__choosable_f V0 V1 V2) :next _1__choosable_f))
(declare-fun _0__decision_quorum_c (round value) quorum_c)
(declare-fun _1__decision_quorum_c (round value) quorum_c)
(define-fun _0__decision_quorum_c.sv ((V0 round) (V1 value)) quorum_c (! (_0__decision_quorum_c V0 V1) :next _1__decision_quorum_c))
(declare-fun _0__decision_quorum_f (round value) quorum_f)
(declare-fun _1__decision_quorum_f (round value) quorum_f)
(define-fun _0__decision_quorum_f.sv ((V0 round) (V1 value)) quorum_f (! (_0__decision_quorum_f V0 V1) :next _1__decision_quorum_f))
(define-fun axiom_0 () Bool (! (forall ((X_0 round)) (le X_0 X_0)) :axiom true))
(define-fun axiom_1 () Bool (! (forall ((X_1 round) (Y_2 round) (Z_3 round))
  (=> (and (le X_1 Y_2) (le Y_2 Z_3)) (le X_1 Z_3))) :axiom true))
(define-fun axiom_2 () Bool (! (forall ((X_4 round) (Y_5 round))
  (=> (and (le X_4 Y_5) (le Y_5 X_4)) (= X_4 Y_5))) :axiom true))
(define-fun axiom_3 () Bool (! (forall ((X_6 round) (Y_7 round)) (or (le X_6 Y_7) (le Y_7 X_6))) :axiom true))
(define-fun axiom_4 () Bool (! (forall ((Q1_8 quorum_c) (Q2_9 quorum_c))
  (exists ((N_10 node)) (and (member_c N_10 Q1_8) (member_c N_10 Q2_9)))) :axiom true))
(define-fun axiom_5 () Bool (! (forall ((Q1_11 quorum_c) (Q2_12 quorum_f) (Q3_13 quorum_f))
  (exists ((N_14 node))
    (and (member_c N_14 Q1_11) (member_f N_14 Q2_12) (member_f N_14 Q3_13)))) :axiom true))
(define-fun init () Bool (! (and (forall ((R_0 round)) (not (_0__one_a R_0)))
     (forall ((N_1 node) (R_2 round)) (not (_0__one_b N_1 R_2)))
     (forall ((N_3 node) (R_4 round)) (not (_0__left_round N_3 R_4)))
     (forall ((R_5 round) (V_6 value)) (not (_0__proposal R_5 V_6)))
     (forall ((N_7 node) (R_8 round) (V_9 value)) (not (_0__vote N_7 R_8 V_9)))
     (forall ((R_10 round) (V_11 value)) (not (_0__decision R_10 V_11)))
     (forall ((R_12 round)) (not (_0__any_msg R_12)))) :init true))
(define-fun transition_0 () Bool (! (exists ((r_0 round))
  (let ((a!1 (forall ((R_1 round))
               (= (_1__one_a R_1) (or (_0__one_a R_1) (= R_1 r_0))))))
    (and (distinct r_0 none)
         a!1
         (forall ((x0_2 node) (x1_3 round))
           (= (_1__one_b x0_2 x1_3) (_0__one_b x0_2 x1_3)))
         (forall ((x0_4 node) (x1_5 round))
           (= (_1__left_round x0_4 x1_5) (_0__left_round x0_4 x1_5)))
         (forall ((x0_6 round) (x1_7 value))
           (= (_1__proposal x0_6 x1_7) (_0__proposal x0_6 x1_7)))
         (forall ((x0_8 node) (x1_9 round) (x2_10 value))
           (= (_1__vote x0_8 x1_9 x2_10) (_0__vote x0_8 x1_9 x2_10)))
         (forall ((x0_11 round) (x1_12 value))
           (= (_1__decision x0_11 x1_12) (_0__decision x0_11 x1_12)))
         (forall ((x0_13 round)) (= (_1__any_msg x0_13) (_0__any_msg x0_13)))
         (forall ((x0_14 round) (x1_15 value))
           (= (_1__decision_quorum_c x0_14 x1_15)
              (_0__decision_quorum_c x0_14 x1_15)))
         (forall ((x0_16 round) (x1_17 value))
           (= (_1__decision_quorum_f x0_16 x1_17)
              (_0__decision_quorum_f x0_16 x1_17)))))) :action true))
(define-fun transition_1 () Bool (! (exists ((n_18 node) (r_19 round))
  (let ((a!1 (forall ((N_20 node) (R_21 round))
               (= (_1__one_b N_20 R_21)
                  (or (_0__one_b N_20 R_21) (and (= N_20 n_18) (= R_21 r_19)))))))
    (and (distinct r_19 none)
         (_0__one_a r_19)
         (not (_0__left_round n_18 r_19))
         a!1
         (forall ((N_22 node) (R_23 round))
           (let ((a!1 (or (_0__left_round N_22 R_23)
                          (and (= N_22 n_18) (not (le r_19 R_23))))))
             (= (_1__left_round N_22 R_23) a!1)))
         (forall ((x0_24 round)) (= (_1__one_a x0_24) (_0__one_a x0_24)))
         (forall ((x0_25 round) (x1_26 value))
           (= (_1__proposal x0_25 x1_26) (_0__proposal x0_25 x1_26)))
         (forall ((x0_27 node) (x1_28 round) (x2_29 value))
           (= (_1__vote x0_27 x1_28 x2_29) (_0__vote x0_27 x1_28 x2_29)))
         (forall ((x0_30 round) (x1_31 value))
           (= (_1__decision x0_30 x1_31) (_0__decision x0_30 x1_31)))
         (forall ((x0_32 round)) (= (_1__any_msg x0_32) (_0__any_msg x0_32)))
         (forall ((x0_33 round) (x1_34 value))
           (= (_1__decision_quorum_c x0_33 x1_34)
              (_0__decision_quorum_c x0_33 x1_34)))
         (forall ((x0_35 round) (x1_36 value))
           (= (_1__decision_quorum_f x0_35 x1_36)
              (_0__decision_quorum_f x0_35 x1_36)))))) :action true))
(define-fun transition_2 () Bool (! (exists ((r_37 round)
         (q_38 quorum_c)
         (maxr_39 round)
         (v_40 value)
         (v2_41 value))
  (let ((a!1 (exists ((N_44 node))
               (and (member_c N_44 q_38)
                    (not (le r_37 maxr_39))
                    (_0__vote N_44 maxr_39 v_40))))
        (a!2 (forall ((N_45 node) (MAXR_46 round) (V_47 value))
               (=> (and (member_c N_45 q_38)
                        (not (le r_37 MAXR_46))
                        (_0__vote N_45 MAXR_46 V_47))
                   (le MAXR_46 maxr_39))))
        (a!3 (exists ((F_48 quorum_f))
               (forall ((N_49 node))
                 (not (and (member_f N_49 F_48)
                           (member_c N_49 q_38)
                           (not (_0__vote N_49 maxr_39 v2_41)))))))
        (a!4 (forall ((R_50 round) (V_51 value))
               (= (_1__proposal R_50 V_51)
                  (or (_0__proposal R_50 V_51)
                      (and (= R_50 r_37) (= V_51 v2_41)))))))
    (and (distinct r_37 none)
         (forall ((V_42 value)) (not (_0__proposal r_37 V_42)))
         (not (_0__any_msg r_37))
         (forall ((N_43 node)) (=> (member_c N_43 q_38) (_0__one_b N_43 r_37)))
         (distinct maxr_39 none)
         a!1
         a!2
         a!3
         a!4
         (forall ((x0_52 round)) (= (_1__one_a x0_52) (_0__one_a x0_52)))
         (forall ((x0_53 node) (x1_54 round))
           (= (_1__one_b x0_53 x1_54) (_0__one_b x0_53 x1_54)))
         (forall ((x0_55 node) (x1_56 round))
           (= (_1__left_round x0_55 x1_56) (_0__left_round x0_55 x1_56)))
         (forall ((x0_57 node) (x1_58 round) (x2_59 value))
           (= (_1__vote x0_57 x1_58 x2_59) (_0__vote x0_57 x1_58 x2_59)))
         (forall ((x0_60 round) (x1_61 value))
           (= (_1__decision x0_60 x1_61) (_0__decision x0_60 x1_61)))
         (forall ((x0_62 round)) (= (_1__any_msg x0_62) (_0__any_msg x0_62)))
         (forall ((x0_63 round) (x1_64 value))
           (= (_1__decision_quorum_c x0_63 x1_64)
              (_0__decision_quorum_c x0_63 x1_64)))
         (forall ((x0_65 round) (x1_66 value))
           (= (_1__decision_quorum_f x0_65 x1_66)
              (_0__decision_quorum_f x0_65 x1_66)))))) :action true))
(define-fun transition_3 () Bool (! (exists ((r_67 round) (q_68 quorum_c) (maxr_69 round) (v_70 value))
  (let ((a!1 (exists ((N_73 node))
               (and (member_c N_73 q_68)
                    (not (le r_67 maxr_69))
                    (_0__vote N_73 maxr_69 v_70))))
        (a!2 (forall ((N_74 node) (MAXR_75 round) (V_76 value))
               (=> (and (member_c N_74 q_68)
                        (not (le r_67 MAXR_75))
                        (_0__vote N_74 MAXR_75 V_76))
                   (le MAXR_75 maxr_69))))
        (a!3 (forall ((V2_77 value) (F_78 quorum_f))
               (exists ((N_79 node))
                 (and (member_f N_79 F_78)
                      (member_c N_79 q_68)
                      (not (_0__vote N_79 maxr_69 V2_77))))))
        (a!4 (forall ((R_80 round) (V_81 value))
               (= (_1__proposal R_80 V_81)
                  (or (_0__proposal R_80 V_81)
                      (and (= R_80 r_67) (= V_81 v_70)))))))
    (and (distinct r_67 none)
         (forall ((V_71 value)) (not (_0__proposal r_67 V_71)))
         (not (_0__any_msg r_67))
         (forall ((N_72 node)) (=> (member_c N_72 q_68) (_0__one_b N_72 r_67)))
         (distinct maxr_69 none)
         a!1
         a!2
         a!3
         a!4
         (forall ((x0_82 round)) (= (_1__one_a x0_82) (_0__one_a x0_82)))
         (forall ((x0_83 node) (x1_84 round))
           (= (_1__one_b x0_83 x1_84) (_0__one_b x0_83 x1_84)))
         (forall ((x0_85 node) (x1_86 round))
           (= (_1__left_round x0_85 x1_86) (_0__left_round x0_85 x1_86)))
         (forall ((x0_87 node) (x1_88 round) (x2_89 value))
           (= (_1__vote x0_87 x1_88 x2_89) (_0__vote x0_87 x1_88 x2_89)))
         (forall ((x0_90 round) (x1_91 value))
           (= (_1__decision x0_90 x1_91) (_0__decision x0_90 x1_91)))
         (forall ((x0_92 round)) (= (_1__any_msg x0_92) (_0__any_msg x0_92)))
         (forall ((x0_93 round) (x1_94 value))
           (= (_1__decision_quorum_c x0_93 x1_94)
              (_0__decision_quorum_c x0_93 x1_94)))
         (forall ((x0_95 round) (x1_96 value))
           (= (_1__decision_quorum_f x0_95 x1_96)
              (_0__decision_quorum_f x0_95 x1_96)))))) :action true))
(define-fun transition_4 () Bool (! (exists ((r_97 round) (q_98 quorum_c) (v_99 value))
  (let ((a!1 (forall ((N_102 node) (MAXR_103 round) (V_104 value))
               (not (and (member_c N_102 q_98)
                         (not (le r_97 MAXR_103))
                         (_0__vote N_102 MAXR_103 V_104)))))
        (a!2 (forall ((R_105 round))
               (= (_1__any_msg R_105) (or (_0__any_msg R_105) (= R_105 r_97))))))
    (and (distinct r_97 none)
         (forall ((V_100 value)) (not (_0__proposal r_97 V_100)))
         (not (_0__any_msg r_97))
         (forall ((N_101 node))
           (=> (member_c N_101 q_98) (_0__one_b N_101 r_97)))
         a!1
         (fast r_97)
         a!2
         (forall ((x0_106 round)) (= (_1__one_a x0_106) (_0__one_a x0_106)))
         (forall ((x0_107 node) (x1_108 round))
           (= (_1__one_b x0_107 x1_108) (_0__one_b x0_107 x1_108)))
         (forall ((x0_109 node) (x1_110 round))
           (= (_1__left_round x0_109 x1_110) (_0__left_round x0_109 x1_110)))
         (forall ((x0_111 round) (x1_112 value))
           (= (_1__proposal x0_111 x1_112) (_0__proposal x0_111 x1_112)))
         (forall ((x0_113 node) (x1_114 round) (x2_115 value))
           (= (_1__vote x0_113 x1_114 x2_115) (_0__vote x0_113 x1_114 x2_115)))
         (forall ((x0_116 round) (x1_117 value))
           (= (_1__decision x0_116 x1_117) (_0__decision x0_116 x1_117)))
         (forall ((x0_118 round) (x1_119 value))
           (= (_1__decision_quorum_c x0_118 x1_119)
              (_0__decision_quorum_c x0_118 x1_119)))
         (forall ((x0_120 round) (x1_121 value))
           (= (_1__decision_quorum_f x0_120 x1_121)
              (_0__decision_quorum_f x0_120 x1_121)))))) :action true))
(define-fun transition_5 () Bool (! (exists ((r_122 round) (q_123 quorum_c) (v_124 value))
  (let ((a!1 (forall ((N_127 node) (MAXR_128 round) (V_129 value))
               (not (and (member_c N_127 q_123)
                         (not (le r_122 MAXR_128))
                         (_0__vote N_127 MAXR_128 V_129)))))
        (a!2 (forall ((R_130 round) (V_131 value))
               (= (_1__proposal R_130 V_131)
                  (or (_0__proposal R_130 V_131)
                      (and (= R_130 r_122) (= V_131 v_124)))))))
    (and (distinct r_122 none)
         (forall ((V_125 value)) (not (_0__proposal r_122 V_125)))
         (not (_0__any_msg r_122))
         (forall ((N_126 node))
           (=> (member_c N_126 q_123) (_0__one_b N_126 r_122)))
         a!1
         (not (fast r_122))
         a!2
         (forall ((x0_132 round)) (= (_1__one_a x0_132) (_0__one_a x0_132)))
         (forall ((x0_133 node) (x1_134 round))
           (= (_1__one_b x0_133 x1_134) (_0__one_b x0_133 x1_134)))
         (forall ((x0_135 node) (x1_136 round))
           (= (_1__left_round x0_135 x1_136) (_0__left_round x0_135 x1_136)))
         (forall ((x0_137 node) (x1_138 round) (x2_139 value))
           (= (_1__vote x0_137 x1_138 x2_139) (_0__vote x0_137 x1_138 x2_139)))
         (forall ((x0_140 round) (x1_141 value))
           (= (_1__decision x0_140 x1_141) (_0__decision x0_140 x1_141)))
         (forall ((x0_142 round)) (= (_1__any_msg x0_142) (_0__any_msg x0_142)))
         (forall ((x0_143 round) (x1_144 value))
           (= (_1__decision_quorum_c x0_143 x1_144)
              (_0__decision_quorum_c x0_143 x1_144)))
         (forall ((x0_145 round) (x1_146 value))
           (= (_1__decision_quorum_f x0_145 x1_146)
              (_0__decision_quorum_f x0_145 x1_146)))))) :action true))
(define-fun transition_6 () Bool (! (exists ((n_147 node) (v_148 value) (r_149 round))
  (let ((a!1 (forall ((N_151 node) (R_152 round) (V_153 value))
               (= (_1__vote N_151 R_152 V_153)
                  (or (_0__vote N_151 R_152 V_153)
                      (and (= N_151 n_147) (= R_152 r_149) (= V_153 v_148)))))))
    (and (distinct r_149 none)
         (not (_0__left_round n_147 r_149))
         (forall ((V_150 value)) (not (_0__vote n_147 r_149 V_150)))
         (or (_0__proposal r_149 v_148) (_0__any_msg r_149))
         a!1
         (forall ((x0_154 round)) (= (_1__one_a x0_154) (_0__one_a x0_154)))
         (forall ((x0_155 node) (x1_156 round))
           (= (_1__one_b x0_155 x1_156) (_0__one_b x0_155 x1_156)))
         (forall ((x0_157 node) (x1_158 round))
           (= (_1__left_round x0_157 x1_158) (_0__left_round x0_157 x1_158)))
         (forall ((x0_159 round) (x1_160 value))
           (= (_1__proposal x0_159 x1_160) (_0__proposal x0_159 x1_160)))
         (forall ((x0_161 round) (x1_162 value))
           (= (_1__decision x0_161 x1_162) (_0__decision x0_161 x1_162)))
         (forall ((x0_163 round)) (= (_1__any_msg x0_163) (_0__any_msg x0_163)))
         (forall ((x0_164 round) (x1_165 value))
           (= (_1__decision_quorum_c x0_164 x1_165)
              (_0__decision_quorum_c x0_164 x1_165)))
         (forall ((x0_166 round) (x1_167 value))
           (= (_1__decision_quorum_f x0_166 x1_167)
              (_0__decision_quorum_f x0_166 x1_167)))))) :action true))
(define-fun transition_7 () Bool (! (exists ((r_168 round) (v_169 value) (q_170 quorum_c))
  (let ((a!1 (forall ((R_172 round) (V_173 value))
               (= (_1__decision R_172 V_173)
                  (or (_0__decision R_172 V_173)
                      (and (= R_172 r_168) (= V_173 v_169))))))
        (a!2 (forall ((R_174 round) (V_175 value))
               (=> (not (and (= R_174 r_168) (= V_175 v_169)))
                   (= (_1__decision_quorum_c R_174 V_175)
                      (_0__decision_quorum_c R_174 V_175))))))
    (and (distinct r_168 none)
         (not (fast r_168))
         (forall ((N_171 node))
           (=> (member_c N_171 q_170) (_0__vote N_171 r_168 v_169)))
         a!1
         a!2
         (= (_1__decision_quorum_c r_168 v_169) q_170)
         (forall ((x0_176 round)) (= (_1__one_a x0_176) (_0__one_a x0_176)))
         (forall ((x0_177 node) (x1_178 round))
           (= (_1__one_b x0_177 x1_178) (_0__one_b x0_177 x1_178)))
         (forall ((x0_179 node) (x1_180 round))
           (= (_1__left_round x0_179 x1_180) (_0__left_round x0_179 x1_180)))
         (forall ((x0_181 round) (x1_182 value))
           (= (_1__proposal x0_181 x1_182) (_0__proposal x0_181 x1_182)))
         (forall ((x0_183 node) (x1_184 round) (x2_185 value))
           (= (_1__vote x0_183 x1_184 x2_185) (_0__vote x0_183 x1_184 x2_185)))
         (forall ((x0_186 round)) (= (_1__any_msg x0_186) (_0__any_msg x0_186)))
         (forall ((x0_187 round) (x1_188 value))
           (= (_1__decision_quorum_f x0_187 x1_188)
              (_0__decision_quorum_f x0_187 x1_188)))))) :action true))
(define-fun transition_8 () Bool (! (exists ((r_189 round) (v_190 value) (q_191 quorum_f))
  (let ((a!1 (forall ((R_193 round) (V_194 value))
               (= (_1__decision R_193 V_194)
                  (or (_0__decision R_193 V_194)
                      (and (= R_193 r_189) (= V_194 v_190))))))
        (a!2 (forall ((R_195 round) (V_196 value))
               (=> (not (and (= R_195 r_189) (= V_196 v_190)))
                   (= (_1__decision_quorum_f R_195 V_196)
                      (_0__decision_quorum_f R_195 V_196))))))
    (and (distinct r_189 none)
         (fast r_189)
         (forall ((N_192 node))
           (=> (member_f N_192 q_191) (_0__vote N_192 r_189 v_190)))
         a!1
         a!2
         (= (_1__decision_quorum_f r_189 v_190) q_191)
         (forall ((x0_197 round)) (= (_1__one_a x0_197) (_0__one_a x0_197)))
         (forall ((x0_198 node) (x1_199 round))
           (= (_1__one_b x0_198 x1_199) (_0__one_b x0_198 x1_199)))
         (forall ((x0_200 node) (x1_201 round))
           (= (_1__left_round x0_200 x1_201) (_0__left_round x0_200 x1_201)))
         (forall ((x0_202 round) (x1_203 value))
           (= (_1__proposal x0_202 x1_203) (_0__proposal x0_202 x1_203)))
         (forall ((x0_204 node) (x1_205 round) (x2_206 value))
           (= (_1__vote x0_204 x1_205 x2_206) (_0__vote x0_204 x1_205 x2_206)))
         (forall ((x0_207 round)) (= (_1__any_msg x0_207) (_0__any_msg x0_207)))
         (forall ((x0_208 round) (x1_209 value))
           (= (_1__decision_quorum_c x0_208 x1_209)
              (_0__decision_quorum_c x0_208 x1_209)))))) :action true))
(define-fun safety-prop () Bool (!(let ((a!1 (forall ((R1_0 round) (V1_1 value) (R2_2 round) (V2_3 value))
             (=> (and (_0__decision R1_0 V1_1) (_0__decision R2_2 V2_3))
                 (= V1_1 V2_3)))))
  (and a!1)) :invar-property 0))
(define-fun invariant_0 () Bool (! (forall ((R1_0 round) (V1_1 value) (R2_2 round) (V2_3 value))
  (=> (and (_0__decision R1_0 V1_1) (_0__decision R2_2 V2_3)) (= V1_1 V2_3))) :invar-property 0))
(define-fun invariant_1 () Bool (! (forall ((R_4 round) (V1_5 value) (V2_6 value))
  (=> (and (_0__proposal R_4 V1_5) (_0__proposal R_4 V2_6)) (= V1_5 V2_6))) :invar-property 1))
(define-fun invariant_2 () Bool (! (forall ((R_7 round)) (=> (_0__any_msg R_7) (fast R_7))) :invar-property 2))
(define-fun invariant_3 () Bool (! (forall ((R_8 round) (N_9 node) (V_10 value))
  (=> (and (not (fast R_8)) (_0__vote N_9 R_8 V_10)) (_0__proposal R_8 V_10))) :invar-property 3))
(define-fun invariant_4 () Bool (! (forall ((R_11 round) (N_12 node) (V_13 value))
  (=> (and (fast R_11) (_0__vote N_12 R_11 V_13))
      (or (_0__proposal R_11 V_13) (_0__any_msg R_11)))) :invar-property 4))
(define-fun invariant_5 () Bool (! (forall ((R_14 round) (V_15 value))
  (not (and (_0__any_msg R_14) (_0__proposal R_14 V_15)))) :invar-property 5))
(define-fun invariant_6 () Bool (! (forall ((R_16 round) (N_17 node) (V1_18 value) (V2_19 value))
  (=> (and (fast R_16) (_0__vote N_17 R_16 V1_18) (_0__vote N_17 R_16 V2_19))
      (= V1_18 V2_19))) :invar-property 6))
(define-fun invariant_7 () Bool (! (forall ((R_20 round) (V_21 value) (N_22 node))
  (=> (and (not (fast R_20))
           (_0__decision R_20 V_21)
           (member_c N_22 (_0__decision_quorum_c R_20 V_21)))
      (_0__vote N_22 R_20 V_21))) :invar-property 7))
(define-fun invariant_8 () Bool (! (forall ((R_23 round) (V_24 value) (N_25 node))
  (=> (and (fast R_23)
           (_0__decision R_23 V_24)
           (member_f N_25 (_0__decision_quorum_f R_23 V_24)))
      (_0__vote N_25 R_23 V_24))) :invar-property 8))
(define-fun invariant_9 () Bool (! (forall ((N_26 node) (R2_27 round) (R1_28 round))
  (=> (and (_0__one_b N_26 R2_27) (not (le R2_27 R1_28)))
      (_0__left_round N_26 R1_28))) :invar-property 9))
(define-fun invariant_10 () Bool (! (forall ((R1_29 round)
         (R2_30 round)
         (V1_31 value)
         (V2_32 value)
         (Q_33 quorum_c))
  (=> (and (not (fast R1_29))
           (not (le R2_30 R1_29))
           (_0__proposal R2_30 V2_32)
           (distinct V1_31 V2_32))
      (not (_0__choosable_c R1_29 V1_31 Q_33)))) :invar-property 10))
(define-fun invariant_11 () Bool (! (forall ((R1_34 round) (R2_35 round) (V1_36 value) (Q_37 quorum_c))
  (=> (and (not (fast R1_34)) (not (le R2_35 R1_34)) (_0__any_msg R2_35))
      (not (_0__choosable_c R1_34 V1_36 Q_37)))) :invar-property 11))
(define-fun invariant_12 () Bool (! (forall ((R1_38 round)
         (R2_39 round)
         (V1_40 value)
         (V2_41 value)
         (Q_42 quorum_f))
  (=> (and (fast R1_38)
           (not (le R2_39 R1_38))
           (_0__proposal R2_39 V2_41)
           (distinct V1_40 V2_41))
      (not (_0__choosable_f R1_38 V1_40 Q_42)))) :invar-property 12))
(define-fun invariant_13 () Bool (! (forall ((R1_43 round) (R2_44 round) (V1_45 value) (Q_46 quorum_f))
  (=> (and (fast R1_43) (not (le R2_44 R1_43)) (_0__any_msg R2_44))
      (not (_0__choosable_f R1_43 V1_45 Q_46)))) :invar-property 13))

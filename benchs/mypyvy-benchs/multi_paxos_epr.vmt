(declare-sort inst 0)
(declare-sort votemap 0)
(declare-sort round 0)
(declare-sort value 0)
(declare-sort quorum 0)
(declare-sort node 0)
(declare-const none round)
(define-fun none.sv () round (! none :rigid true))
(declare-fun le (round round) Bool)
(declare-fun member (node quorum) Bool)
(declare-fun _0__one_a (round) Bool)
(declare-fun _1__one_a (round) Bool)
(define-fun _0__one_a.sv ((V0 round)) Bool (! (_0__one_a V0) :next _1__one_a))
(declare-fun _0__one_b_msg (node round votemap) Bool)
(declare-fun _1__one_b_msg (node round votemap) Bool)
(define-fun _0__one_b_msg.sv ((V0 node) (V1 round) (V2 votemap)) Bool (! (_0__one_b_msg V0 V1 V2) :next _1__one_b_msg))
(declare-fun _0__left_round (node round) Bool)
(declare-fun _1__left_round (node round) Bool)
(define-fun _0__left_round.sv ((V0 node) (V1 round)) Bool (! (_0__left_round V0 V1) :next _1__left_round))
(declare-fun _0__joined_round (node round) Bool)
(declare-fun _1__joined_round (node round) Bool)
(define-fun _0__joined_round.sv ((V0 node) (V1 round)) Bool (! (_0__joined_round V0 V1) :next _1__joined_round))
(declare-fun _0__proposal (inst round value) Bool)
(declare-fun _1__proposal (inst round value) Bool)
(define-fun _0__proposal.sv ((V0 inst) (V1 round) (V2 value)) Bool (! (_0__proposal V0 V1 V2) :next _1__proposal))
(declare-fun _0__active (round) Bool)
(declare-fun _1__active (round) Bool)
(define-fun _0__active.sv ((V0 round)) Bool (! (_0__active V0) :next _1__active))
(declare-fun _0__vote (node inst round value) Bool)
(declare-fun _1__vote (node inst round value) Bool)
(define-fun _0__vote.sv ((V0 node) (V1 inst) (V2 round) (V3 value)) Bool (! (_0__vote V0 V1 V2 V3) :next _1__vote))
(declare-fun _0__decision (node inst round value) Bool)
(declare-fun _1__decision (node inst round value) Bool)
(define-fun _0__decision.sv ((V0 node) (V1 inst) (V2 round) (V3 value)) Bool (! (_0__decision V0 V1 V2 V3) :next _1__decision))
(define-fun axiom_0 () Bool (! (forall ((X_0 round)) (le X_0 X_0)) :axiom true))
(define-fun axiom_1 () Bool (! (forall ((X_1 round) (Y_2 round) (Z_3 round))
  (=> (and (le X_1 Y_2) (le Y_2 Z_3)) (le X_1 Z_3))) :axiom true))
(define-fun axiom_2 () Bool (! (forall ((X_4 round) (Y_5 round))
  (=> (and (le X_4 Y_5) (le Y_5 X_4)) (= X_4 Y_5))) :axiom true))
(define-fun axiom_3 () Bool (! (forall ((X_6 round) (Y_7 round)) (or (le X_6 Y_7) (le Y_7 X_6))) :axiom true))
(define-fun axiom_4 () Bool (! (forall ((Q1_8 quorum) (Q2_9 quorum))
  (exists ((N_10 node)) (and (member N_10 Q1_8) (member N_10 Q2_9)))) :axiom true))
(define-fun init () Bool (! (and (forall ((R_0 round)) (not (_0__one_a R_0)))
     (forall ((N_1 node) (R1_2 round) (M_3 votemap))
       (not (_0__one_b_msg N_1 R1_2 M_3)))
     (forall ((N_4 node) (R_5 round)) (not (_0__left_round N_4 R_5)))
     (forall ((N_6 node) (R_7 round)) (not (_0__joined_round N_6 R_7)))
     (forall ((I_8 inst) (R_9 round) (V_10 value))
       (not (_0__proposal I_8 R_9 V_10)))
     (forall ((N_11 node) (I_12 inst) (R_13 round) (V_14 value))
       (not (_0__vote N_11 I_12 R_13 V_14)))
     (forall ((N_15 node) (I_16 inst) (R_17 round) (V_18 value))
       (not (_0__decision N_15 I_16 R_17 V_18)))
     (forall ((R_19 round)) (not (_0__active R_19)))) :init true))
(define-fun transition_0 () Bool (! (exists ((r_0 round))
  (let ((a!1 (forall ((R_1 round))
               (= (_1__one_a R_1) (or (_0__one_a R_1) (= R_1 r_0))))))
    (and (distinct r_0 none)
         a!1
         (forall ((x0_2 node) (x1_3 round) (x2_4 votemap))
           (= (_1__one_b_msg x0_2 x1_3 x2_4) (_0__one_b_msg x0_2 x1_3 x2_4)))
         (forall ((x0_5 node) (x1_6 round))
           (= (_1__left_round x0_5 x1_6) (_0__left_round x0_5 x1_6)))
         (forall ((x0_7 node) (x1_8 round))
           (= (_1__joined_round x0_7 x1_8) (_0__joined_round x0_7 x1_8)))
         (forall ((x0_9 inst) (x1_10 round) (x2_11 value))
           (= (_1__proposal x0_9 x1_10 x2_11) (_0__proposal x0_9 x1_10 x2_11)))
         (forall ((x0_12 round)) (= (_1__active x0_12) (_0__active x0_12)))
         (forall ((x0_13 node) (x1_14 inst) (x2_15 round) (x3_16 value))
           (= (_1__vote x0_13 x1_14 x2_15 x3_16)
              (_0__vote x0_13 x1_14 x2_15 x3_16)))
         (forall ((x0_17 node) (x1_18 inst) (x2_19 round) (x3_20 value))
           (= (_1__decision x0_17 x1_18 x2_19 x3_20)
              (_0__decision x0_17 x1_18 x2_19 x3_20)))))) :action true))
(define-fun transition_1 () Bool (! (exists ((n_21 node) (r_22 round) (m_23 votemap))
  (let ((a!1 (forall ((I_24 inst))
               (let ((a!1 (forall ((R_27 round) (V_28 value))
                            (let ((a!1 (and (_0__vote n_21 I_24 R_27 V_28)
                                            (not (le r_22 R_27)))))
                              (=> a!1 (le R_27 (maxr m_23 I_24)))))))
               (let ((a!2 (and (_0__vote n_21
                                         I_24
                                         (maxr m_23 I_24)
                                         (maxv m_23 I_24))
                               (not (le r_22 (maxr m_23 I_24)))
                               a!1)))
                 (or (and (= (maxr m_23 I_24) none)
                          (forall ((R_25 round) (V_26 value))
                            (let ((a!1 (and (_0__vote n_21 I_24 R_25 V_26)
                                            (not (le r_22 R_25)))))
                              (not a!1))))
                     a!2)))))
        (a!2 (forall ((N_29 node) (R_30 round) (M_31 votemap))
               (= (_1__one_b_msg N_29 R_30 M_31)
                  (or (_0__one_b_msg N_29 R_30 M_31)
                      (and (= N_29 n_21) (= R_30 r_22) (= M_31 m_23))))))
        (a!3 (forall ((N_34 node) (R_35 round))
               (= (_1__joined_round N_34 R_35)
                  (or (_0__joined_round N_34 R_35)
                      (and (= N_34 n_21) (= R_35 r_22)))))))
    (and (distinct r_22 none)
         (_0__one_a r_22)
         (not (_0__left_round n_21 r_22))
         a!1
         a!2
         (forall ((N_32 node) (R_33 round))
           (let ((a!1 (or (_0__left_round N_32 R_33)
                          (and (= N_32 n_21) (not (le r_22 R_33))))))
             (= (_1__left_round N_32 R_33) a!1)))
         a!3
         (forall ((x0_36 round)) (= (_1__one_a x0_36) (_0__one_a x0_36)))
         (forall ((x0_37 inst) (x1_38 round) (x2_39 value))
           (= (_1__proposal x0_37 x1_38 x2_39) (_0__proposal x0_37 x1_38 x2_39)))
         (forall ((x0_40 round)) (= (_1__active x0_40) (_0__active x0_40)))
         (forall ((x0_41 node) (x1_42 inst) (x2_43 round) (x3_44 value))
           (= (_1__vote x0_41 x1_42 x2_43 x3_44)
              (_0__vote x0_41 x1_42 x2_43 x3_44)))
         (forall ((x0_45 node) (x1_46 inst) (x2_47 round) (x3_48 value))
           (= (_1__decision x0_45 x1_46 x2_47 x3_48)
              (_0__decision x0_45 x1_46 x2_47 x3_48)))))) :action true))
(define-fun transition_2 () Bool (! (exists ((r_49 round) (q_50 quorum) (m_51 votemap))
  (let ((a!1 (forall ((I_53 inst))
               (let ((a!1 (exists ((N_57 node) (R_58 round) (V_59 value))
                            (and (member N_57 q_50)
                                 (not (le r_49 R_58))
                                 (_0__vote N_57 I_53 R_58 V_59)
                                 (= R_58 (maxr m_51 I_53))
                                 (= V_59 (maxv m_51 I_53)))))
                     (a!2 (forall ((N_60 node) (R_61 round) (V_62 value))
                            (let ((a!1 (and (member N_60 q_50)
                                            (not (le r_49 R_61))
                                            (_0__vote N_60 I_53 R_61 V_62))))
                              (=> a!1 (le R_61 (maxr m_51 I_53)))))))
                 (or (and (= (maxr m_51 I_53) none)
                          (forall ((N_54 node) (R_55 round) (V_56 value))
                            (let ((a!1 (and (member N_54 q_50)
                                            (not (le r_49 R_55))
                                            (_0__vote N_54 I_53 R_55 V_56))))
                              (not a!1))))
                     (and a!1 a!2)))))
        (a!2 (forall ((R_66 round))
               (= (_1__active R_66) (or (_0__active R_66) (= R_66 r_49))))))
    (and (distinct r_49 none)
         (not (_0__active r_49))
         (forall ((N_52 node))
           (=> (member N_52 q_50) (_0__joined_round N_52 r_49)))
         a!1
         (forall ((I_63 inst) (R_64 round) (V_65 value))
           (let ((a!1 (or (_0__proposal I_63 R_64 V_65)
                          (and (= R_64 r_49)
                               (distinct (maxr m_51 I_63) none)
                               (= V_65 (maxv m_51 I_63))))))
             (= (_1__proposal I_63 R_64 V_65) a!1)))
         a!2
         (forall ((x0_67 round)) (= (_1__one_a x0_67) (_0__one_a x0_67)))
         (forall ((x0_68 node) (x1_69 round) (x2_70 votemap))
           (= (_1__one_b_msg x0_68 x1_69 x2_70)
              (_0__one_b_msg x0_68 x1_69 x2_70)))
         (forall ((x0_71 node) (x1_72 round))
           (= (_1__left_round x0_71 x1_72) (_0__left_round x0_71 x1_72)))
         (forall ((x0_73 node) (x1_74 round))
           (= (_1__joined_round x0_73 x1_74) (_0__joined_round x0_73 x1_74)))
         (forall ((x0_75 node) (x1_76 inst) (x2_77 round) (x3_78 value))
           (= (_1__vote x0_75 x1_76 x2_77 x3_78)
              (_0__vote x0_75 x1_76 x2_77 x3_78)))
         (forall ((x0_79 node) (x1_80 inst) (x2_81 round) (x3_82 value))
           (= (_1__decision x0_79 x1_80 x2_81 x3_82)
              (_0__decision x0_79 x1_80 x2_81 x3_82)))))) :action true))
(define-fun transition_3 () Bool (! (exists ((r_83 round) (i_84 inst) (v_85 value))
  (let ((a!1 (forall ((I_87 inst) (R_88 round) (V_89 value))
               (= (_1__proposal I_87 R_88 V_89)
                  (or (_0__proposal I_87 R_88 V_89)
                      (and (= I_87 i_84) (= R_88 r_83) (= V_89 v_85)))))))
    (and (distinct r_83 none)
         (_0__active r_83)
         (forall ((V_86 value)) (not (_0__proposal i_84 r_83 V_86)))
         a!1
         (forall ((x0_90 round)) (= (_1__one_a x0_90) (_0__one_a x0_90)))
         (forall ((x0_91 node) (x1_92 round) (x2_93 votemap))
           (= (_1__one_b_msg x0_91 x1_92 x2_93)
              (_0__one_b_msg x0_91 x1_92 x2_93)))
         (forall ((x0_94 node) (x1_95 round))
           (= (_1__left_round x0_94 x1_95) (_0__left_round x0_94 x1_95)))
         (forall ((x0_96 node) (x1_97 round))
           (= (_1__joined_round x0_96 x1_97) (_0__joined_round x0_96 x1_97)))
         (forall ((x0_98 round)) (= (_1__active x0_98) (_0__active x0_98)))
         (forall ((x0_99 node) (x1_100 inst) (x2_101 round) (x3_102 value))
           (= (_1__vote x0_99 x1_100 x2_101 x3_102)
              (_0__vote x0_99 x1_100 x2_101 x3_102)))
         (forall ((x0_103 node) (x1_104 inst) (x2_105 round) (x3_106 value))
           (= (_1__decision x0_103 x1_104 x2_105 x3_106)
              (_0__decision x0_103 x1_104 x2_105 x3_106)))))) :action true))
(define-fun transition_4 () Bool (! (exists ((n_107 node) (v_108 value) (r_109 round) (i_110 inst))
  (let ((a!1 (forall ((N_111 node) (I_112 inst) (R_113 round) (V_114 value))
               (= (_1__vote N_111 I_112 R_113 V_114)
                  (or (_0__vote N_111 I_112 R_113 V_114)
                      (and (= N_111 n_107)
                           (= I_112 i_110)
                           (= R_113 r_109)
                           (= V_114 v_108)))))))
    (and (distinct r_109 none)
         (not (_0__left_round n_107 r_109))
         (_0__proposal i_110 r_109 v_108)
         a!1
         (forall ((x0_115 round)) (= (_1__one_a x0_115) (_0__one_a x0_115)))
         (forall ((x0_116 node) (x1_117 round) (x2_118 votemap))
           (= (_1__one_b_msg x0_116 x1_117 x2_118)
              (_0__one_b_msg x0_116 x1_117 x2_118)))
         (forall ((x0_119 node) (x1_120 round))
           (= (_1__left_round x0_119 x1_120) (_0__left_round x0_119 x1_120)))
         (forall ((x0_121 node) (x1_122 round))
           (= (_1__joined_round x0_121 x1_122) (_0__joined_round x0_121 x1_122)))
         (forall ((x0_123 inst) (x1_124 round) (x2_125 value))
           (= (_1__proposal x0_123 x1_124 x2_125)
              (_0__proposal x0_123 x1_124 x2_125)))
         (forall ((x0_126 round)) (= (_1__active x0_126) (_0__active x0_126)))
         (forall ((x0_127 node) (x1_128 inst) (x2_129 round) (x3_130 value))
           (= (_1__decision x0_127 x1_128 x2_129 x3_130)
              (_0__decision x0_127 x1_128 x2_129 x3_130)))))) :action true))
(define-fun transition_5 () Bool (! (exists ((n_131 node) (r_132 round) (v_133 value) (q_134 quorum) (i_135 inst))
  (let ((a!1 (forall ((N_137 node) (I_138 inst) (R_139 round) (V_140 value))
               (= (_1__decision N_137 I_138 R_139 V_140)
                  (or (_0__decision N_137 I_138 R_139 V_140)
                      (and (= N_137 n_131)
                           (= I_138 i_135)
                           (= R_139 r_132)
                           (= V_140 v_133)))))))
    (and (distinct r_132 none)
         (forall ((N_136 node))
           (=> (member N_136 q_134) (_0__vote N_136 i_135 r_132 v_133)))
         a!1
         (forall ((x0_141 round)) (= (_1__one_a x0_141) (_0__one_a x0_141)))
         (forall ((x0_142 node) (x1_143 round) (x2_144 votemap))
           (= (_1__one_b_msg x0_142 x1_143 x2_144)
              (_0__one_b_msg x0_142 x1_143 x2_144)))
         (forall ((x0_145 node) (x1_146 round))
           (= (_1__left_round x0_145 x1_146) (_0__left_round x0_145 x1_146)))
         (forall ((x0_147 node) (x1_148 round))
           (= (_1__joined_round x0_147 x1_148) (_0__joined_round x0_147 x1_148)))
         (forall ((x0_149 inst) (x1_150 round) (x2_151 value))
           (= (_1__proposal x0_149 x1_150 x2_151)
              (_0__proposal x0_149 x1_150 x2_151)))
         (forall ((x0_152 round)) (= (_1__active x0_152) (_0__active x0_152)))
         (forall ((x0_153 node) (x1_154 inst) (x2_155 round) (x3_156 value))
           (= (_1__vote x0_153 x1_154 x2_155 x3_156)
              (_0__vote x0_153 x1_154 x2_155 x3_156)))))) :action true))
(define-fun safety-prop () Bool (!(let ((a!1 (forall ((N1_0 node)
                    (I_1 inst)
                    (R1_2 round)
                    (V1_3 value)
                    (N2_4 node)
                    (R2_5 round)
                    (V2_6 value))
             (=> (and (_0__decision N1_0 I_1 R1_2 V1_3)
                      (_0__decision N2_4 I_1 R2_5 V2_6))
                 (= V1_3 V2_6)))))
  (and a!1)) :invar-property 0))
(define-fun invariant_0 () Bool (! (forall ((N1_0 node)
         (I_1 inst)
         (R1_2 round)
         (V1_3 value)
         (N2_4 node)
         (R2_5 round)
         (V2_6 value))
  (=> (and (_0__decision N1_0 I_1 R1_2 V1_3) (_0__decision N2_4 I_1 R2_5 V2_6))
      (= V1_3 V2_6))) :invar-property 0))
(define-fun invariant_1 () Bool (! (forall ((I_7 inst) (R_8 round) (V_9 value))
  (=> (_0__proposal I_7 R_8 V_9) (_0__active R_8))) :invar-property 1))
(define-fun invariant_2 () Bool (! (forall ((I_10 inst) (R_11 round) (V1_12 value) (V2_13 value))
  (=> (and (_0__proposal I_10 R_11 V1_12) (_0__proposal I_10 R_11 V2_13))
      (= V1_12 V2_13))) :invar-property 2))
(define-fun invariant_3 () Bool (! (forall ((N_14 node) (I_15 inst) (R_16 round) (V_17 value))
  (=> (_0__vote N_14 I_15 R_16 V_17) (_0__proposal I_15 R_16 V_17))) :invar-property 3))
(define-fun invariant_4 () Bool (! (forall ((I_18 inst))
  (forall ((R_19 round) (V_20 value))
    (let ((a!1 (exists ((Q_22 quorum))
                 (forall ((N_23 node))
                   (=> (member N_23 Q_22) (_0__vote N_23 I_18 R_19 V_20))))))
      (=> (exists ((N_21 node)) (_0__decision N_21 I_18 R_19 V_20)) a!1)))) :invar-property 4))
(define-fun invariant_5 () Bool (! (forall ((N_24 node) (I_25 inst) (V_26 value))
  (not (_0__vote N_24 I_25 none V_26))) :invar-property 5))
(define-fun invariant_6 () Bool (! (forall ((I_27 inst) (R1_28 round) (R2_29 round) (V_30 value) (Q_31 quorum))
  (let ((a!1 (exists ((N_32 node))
               (and (member N_32 Q_31)
                    (_0__left_round N_32 R1_28)
                    (not (_0__vote N_32 I_27 R1_28 V_30))))))
    (=> (and (not (le R2_29 R1_28))
             (_0__active R2_29)
             (not (_0__proposal I_27 R2_29 V_30)))
        a!1))) :invar-property 6))
(define-fun invariant_7 () Bool (! (forall ((N_33 node) (R2_34 round) (R1_35 round))
  (=> (and (_0__joined_round N_33 R2_34) (not (le R2_34 R1_35)))
      (_0__left_round N_33 R1_35))) :invar-property 7))
